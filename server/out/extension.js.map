{
  "version": 3,
  "sources": ["../../node_modules/mdurl/build/index.cjs.js", "../../node_modules/uc.micro/build/index.cjs.js", "../../node_modules/entities/lib/generated/generated/decode-data-html.ts", "../../node_modules/entities/lib/generated/generated/decode-data-xml.ts", "../../node_modules/entities/lib/decode_codepoint.ts", "../../node_modules/entities/lib/decode.ts", "../../node_modules/entities/lib/generated/generated/encode-html.ts", "../../node_modules/entities/lib/escape.ts", "../../node_modules/entities/lib/encode.ts", "../../node_modules/entities/lib/index.ts", "../../node_modules/linkify-it/build/index.cjs.js", "../../node_modules/punycode.js/punycode.es6.js", "../../node_modules/markdown-it/dist/index.cjs.js", "../../node_modules/markdownlint-micromark/micromark.cjs", "../../node_modules/markdownlint/helpers/shared.js", "../../node_modules/markdownlint/helpers/micromark.cjs", "../../node_modules/markdownlint/lib/constants.js", "../../node_modules/markdownlint/helpers/helpers.js", "../../node_modules/markdownlint/lib/md001.js", "../../node_modules/markdownlint/lib/md003.js", "../../node_modules/markdownlint/lib/cache.js", "../../node_modules/markdownlint/lib/md004.js", "../../node_modules/markdownlint/lib/md005.js", "../../node_modules/markdownlint/lib/md007.js", "../../node_modules/markdownlint/lib/md009.js", "../../node_modules/markdownlint/lib/md010.js", "../../node_modules/markdownlint/lib/md011.js", "../../node_modules/markdownlint/lib/md012.js", "../../node_modules/markdownlint/lib/md013.js", "../../node_modules/markdownlint/lib/md014.js", "../../node_modules/markdownlint/lib/md018.js", "../../node_modules/markdownlint/lib/md019.js", "../../node_modules/markdownlint/lib/md020.js", "../../node_modules/markdownlint/lib/md021.js", "../../node_modules/markdownlint/lib/md022.js", "../../node_modules/markdownlint/lib/md023.js", "../../node_modules/markdownlint/lib/md024.js", "../../node_modules/markdownlint/lib/md025.js", "../../node_modules/markdownlint/lib/md026.js", "../../node_modules/markdownlint/lib/md027.js", "../../node_modules/markdownlint/lib/md028.js", "../../node_modules/markdownlint/lib/md029.js", "../../node_modules/markdownlint/lib/md030.js", "../../node_modules/markdownlint/lib/md031.js", "../../node_modules/markdownlint/lib/md032.js", "../../node_modules/markdownlint/lib/md033.js", "../../node_modules/markdownlint/lib/md034.js", "../../node_modules/markdownlint/lib/md035.js", "../../node_modules/markdownlint/lib/md036.js", "../../node_modules/markdownlint/lib/md037.js", "../../node_modules/markdownlint/lib/md038.js", "../../node_modules/markdownlint/lib/md039.js", "../../node_modules/markdownlint/lib/md040.js", "../../node_modules/markdownlint/lib/md041.js", "../../node_modules/markdownlint/lib/md042.js", "../../node_modules/markdownlint/lib/md043.js", "../../node_modules/markdownlint/lib/md044.js", "../../node_modules/markdownlint/lib/md045.js", "../../node_modules/markdownlint/lib/md046.js", "../../node_modules/markdownlint/lib/md047.js", "../../node_modules/markdownlint/lib/md048.js", "../../node_modules/markdownlint/lib/md049-md050.js", "../../node_modules/markdownlint/lib/md051.js", "../../node_modules/markdownlint/lib/md052.js", "../../node_modules/markdownlint/lib/md053.js", "../../node_modules/markdownlint/lib/md054.js", "../../node_modules/markdownlint/lib/md055.js", "../../node_modules/markdownlint/lib/md056.js", "../../node_modules/markdownlint/lib/rules.js", "../../node_modules/markdownlint/lib/markdownlint.js", "../src/Diagnostic.js", "../../node_modules/jsonc-parser/lib/esm/impl/scanner.js", "../../node_modules/jsonc-parser/lib/esm/impl/string-intern.js", "../../node_modules/jsonc-parser/lib/esm/impl/parser.js", "../../node_modules/jsonc-parser/lib/esm/main.js", "../src/Analyzer.js", "../src/CodeAction.js", "../src/Encoder.js", "../src/completions/sections.js", "../src/completions/lessonNotes.js", "../src/completions/snippets.js", "../src/completions/index.js", "../src/Protocol.js", "../src/main.js"],
  "sourcesContent": ["'use strict';\n\n/* eslint-disable no-bitwise */\n\nconst decodeCache = {};\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude];\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = [];\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  const cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = '';\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\nconst encodeCache = {};\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude];\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = [];\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  const cache = getEncodeCache(exclude);\n  let result = '';\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue\n        }\n      }\n      result += '%EF%BF%BD';\n      continue\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\nfunction format (url) {\n  let result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result\n}\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i;\nconst portPattern = /:[0-9]*$/;\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/;\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'];\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims);\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise);\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape);\nconst hostEndingChars = ['/', '?', '#'];\nconst hostnameMaxLen = 255;\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/;\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/;\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n};\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n};\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes;\n  let rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1;\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    const host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./);\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i];\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = '';\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i);\n            const notHost = hostparts.slice(i + 1);\n            const bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  const qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this\n};\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.format = format;\nexports.parse = urlParse;\n", "'use strict';\n\nvar regex$5 = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\nvar regex$4 = /[\\0-\\x1F\\x7F-\\x9F]/;\n\nvar regex$3 = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/;\n\nvar regex$2 = /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;\n\nvar regex$1 = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/;\n\nvar regex = /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n\nexports.Any = regex$5;\nexports.Cc = regex$4;\nexports.Cf = regex$3;\nexports.P = regex$2;\nexports.S = regex$1;\nexports.Z = regex;\n", null, null, null, null, null, null, null, null, "'use strict';\n\nvar uc_micro = require('uc.micro');\n\nfunction reFactory (opts) {\n  const re = {};\n  opts = opts || {};\n\n  re.src_Any = uc_micro.Any.source;\n  re.src_Cc = uc_micro.Cc.source;\n  re.src_Z = uc_micro.Z.source;\n  re.src_P = uc_micro.P.source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re\n}\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n};\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444'.split('|');\n\nfunction resetScanCache (self) {\n  self.__index__ = -1;\n  self.__text_cache__ = '';\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match);\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__);\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__;\n  const end = self.__last_index__;\n  const text = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text;\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1;\n  this.__last_index__ = -1; // Next scan position\n  this.__schema__ = '';\n  this.__text_cache__ = '';\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas);\n  this.__compiled__ = {};\n\n  this.__tlds__ = tlds_default;\n  this.__tlds_replaced__ = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this\n};\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this\n};\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__ = m[2];\n        this.__index__ = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = '';\n            this.__index__ = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length;\n        next = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:';\n          this.__index__ = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n};\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n};\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n};\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = [];\n  let shift = 0;\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n};\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text);\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null\n\n  this.__schema__ = m[2];\n  this.__index__ = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0)\n};\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse();\n\n  compile(this);\n  return this\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n};\n\nmodule.exports = LinkifyIt;\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n", "'use strict';\n\nvar mdurl = require('mdurl');\nvar ucmicro = require('uc.micro');\nvar entities = require('entities');\nvar LinkifyIt = require('linkify-it');\nvar punycode = require('punycode.js');\n\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\n\nvar mdurl__namespace = /*#__PURE__*/_interopNamespaceDefault(mdurl);\nvar ucmicro__namespace = /*#__PURE__*/_interopNamespaceDefault(ucmicro);\n\n// Utilities\n//\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\nfunction isValidEntityCode(c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n  if (c === 0x0B) {\n    return false;\n  }\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  }\n  // out of range\n  if (c > 0x10FFFF) {\n    return false;\n  }\n  return true;\n}\nfunction fromCodePoint(c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000;\n    const surrogate1 = 0xd800 + (c >> 10);\n    const surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\nconst UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g;\nconst ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\nfunction replaceEntityPattern(match, name) {\n  if (name.charCodeAt(0) === 0x23 /* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n    return match;\n  }\n  const decoded = entities.decodeHTML(match);\n  if (decoded !== match) {\n    return decoded;\n  }\n  return match;\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n    return replaceEntityPattern(match, entity);\n  });\n}\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return ucmicro__namespace.P.test(ch) || ucmicro__namespace.S.test(ch);\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21 /* ! */:\n    case 0x22 /* \" */:\n    case 0x23 /* # */:\n    case 0x24 /* $ */:\n    case 0x25 /* % */:\n    case 0x26 /* & */:\n    case 0x27 /* ' */:\n    case 0x28 /* ( */:\n    case 0x29 /* ) */:\n    case 0x2A /* * */:\n    case 0x2B /* + */:\n    case 0x2C /* , */:\n    case 0x2D /* - */:\n    case 0x2E /* . */:\n    case 0x2F /* / */:\n    case 0x3A /* : */:\n    case 0x3B /* ; */:\n    case 0x3C /* < */:\n    case 0x3D /* = */:\n    case 0x3E /* > */:\n    case 0x3F /* ? */:\n    case 0x40 /* @ */:\n    case 0x5B /* [ */:\n    case 0x5C /* \\ */:\n    case 0x5D /* ] */:\n    case 0x5E /* ^ */:\n    case 0x5F /* _ */:\n    case 0x60 /* ` */:\n    case 0x7B /* { */:\n    case 0x7C /* | */:\n    case 0x7D /* } */:\n    case 0x7E /* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 '\u1E9E'.toLowerCase() === '\u1E7E', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('\u1E9E'.toLowerCase() === '\u1E7E') {\n    str = str.replace(/\u1E9E/g, '\u00DF');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // \u0130, \u03F4, \u1E9E, \u2126, \u212A, \u212B - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (\u0398), U+03f4 (\u03F4) and lowercase U+03b8 (\u03B8), U+03d1 (\u03D1)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change \u03D1 (it's already lowercase),\n  // and .toUpperCase() doesn't change \u03F4 (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = {\n  mdurl: mdurl__namespace,\n  ucmicro: ucmicro__namespace\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  arrayReplaceAt: arrayReplaceAt,\n  assign: assign,\n  escapeHtml: escapeHtml,\n  escapeRE: escapeRE,\n  fromCodePoint: fromCodePoint,\n  has: has,\n  isMdAsciiPunct: isMdAsciiPunct,\n  isPunctChar: isPunctChar,\n  isSpace: isSpace,\n  isString: isString,\n  isValidEntityCode: isValidEntityCode,\n  isWhiteSpace: isWhiteSpace,\n  lib: lib,\n  normalizeReference: normalizeReference,\n  unescapeAll: unescapeAll,\n  unescapeMd: unescapeMd\n});\n\n// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nfunction parseLinkLabel(state, start, disableNested) {\n  let level, found, marker, prevPos;\n  const max = state.posMax;\n  const oldPos = state.pos;\n  state.pos = start + 1;\n  level = 1;\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n  let labelEnd = -1;\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n  return labelEnd;\n}\n\n// Parse link destination\n//\n\nfunction parseLinkDestination(str, start, max) {\n  let code;\n  let pos = start;\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  };\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) {\n        return result;\n      }\n      if (code === 0x3C /* < */) {\n        return result;\n      }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === 0x20) {\n      break;\n    }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) {\n        break;\n      }\n      pos += 2;\n      continue;\n    }\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) {\n        return result;\n      }\n    }\n    if (code === 0x29 /* ) */) {\n      if (level === 0) {\n        break;\n      }\n      level--;\n    }\n    pos++;\n  }\n  if (start === pos) {\n    return result;\n  }\n  if (level !== 0) {\n    return result;\n  }\n  result.str = unescapeAll(str.slice(start, pos));\n  result.pos = pos;\n  result.ok = true;\n  return result;\n}\n\n// Parse link title\n//\n\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nfunction parseLinkTitle(str, start, max, prev_state) {\n  let code;\n  let pos = start;\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  };\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str;\n    state.marker = prev_state.marker;\n  } else {\n    if (pos >= max) {\n      return state;\n    }\n    let marker = str.charCodeAt(pos);\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) {\n      return state;\n    }\n    start++;\n    pos++;\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) {\n      marker = 0x29;\n    }\n    state.marker = marker;\n  }\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === state.marker) {\n      state.pos = pos + 1;\n      state.str += unescapeAll(str.slice(start, pos));\n      state.ok = true;\n      return state;\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n    }\n    pos++;\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true;\n  state.str += unescapeAll(str.slice(start, pos));\n  return state;\n}\n\n// Just a shortcut for bulk export\n\nvar helpers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseLinkDestination: parseLinkDestination,\n  parseLinkLabel: parseLinkLabel,\n  parseLinkTitle: parseLinkTitle\n});\n\n/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nconst default_rules = {};\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx];\n  return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(token.content) + '</code>';\n};\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx];\n  return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\\n';\n};\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx];\n  const info = token.info ? unescapeAll(token.info).trim() : '';\n  let langName = '';\n  let langAttrs = '';\n  if (info) {\n    const arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n  let highlighted;\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class');\n    const tmpAttrs = token.attrs ? token.attrs.slice() : [];\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    };\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`;\n  }\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`;\n};\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env);\n  return slf.renderToken(tokens, idx, options);\n};\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n};\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  let i, l, result;\n  if (!token.attrs) {\n    return '';\n  }\n  result = '';\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n  return result;\n};\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  const token = tokens[idx];\n  let result = '';\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false;\n  if (token.block) {\n    needLf = true;\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1];\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n  result += needLf ? '>\\n' : '>';\n  return result;\n};\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = '';\n  const rules = this.rules;\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type;\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n  return result;\n};\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = '';\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content;\n        break;\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env);\n        break;\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content;\n        break;\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n';\n        break;\n      // all other tokens are skipped\n    }\n  }\n  return result;\n};\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = '';\n  const rules = this.rules;\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type;\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n  return result;\n};\n\n/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this;\n  const chains = [''];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n  self.__cache__ = {};\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name);\n  const opt = options || {};\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName);\n  const opt = options || {};\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  });\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName);\n  const opt = options || {};\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  });\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {};\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  });\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n  const result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name);\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n  this.__rules__.forEach(function (rule) {\n    rule.enabled = false;\n  });\n  this.enable(list, ignoreInvalid);\n};\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n  const result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name);\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\n// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden = false;\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  if (!this.attrs) {\n    return -1;\n  }\n  const attrs = this.attrs;\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [attrData];\n  }\n};\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  const idx = this.attrIndex(name);\n  const attrData = [name, value];\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  const idx = this.attrIndex(name);\n  let value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  const idx = this.attrIndex(name);\n  if (idx < 0) {\n    this.attrPush([name, value]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n// Core state object\n//\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE = /\\r\\n?|\\n/g;\nconst NULL_RE = /\\0/g;\nfunction normalize(state) {\n  let str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n  state.src = str;\n}\n\nfunction block(state) {\n  let token;\n  if (state.inlineMode) {\n    token = new state.Token('inline', '', 0);\n    token.content = state.src;\n    token.map = [0, 1];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n}\n\nfunction inline(state) {\n  const tokens = state.tokens;\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n}\n\n// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nfunction isLinkOpen$1(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose$1(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\nfunction linkify$1(state) {\n  const blockTokens = state.tokens;\n  if (!state.md.options.linkify) {\n    return;\n  }\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' || !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n    let tokens = blockTokens[j].children;\n    let htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen$1(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose$1(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) {\n        continue;\n      }\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content;\n        let links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        const nodes = [];\n        let level = currentToken.level;\n        let lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 && links[0].index === 0 && i > 0 && tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url;\n          const fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) {\n            continue;\n          }\n          let urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n          const pos = links[ln].index;\n          if (pos > lastPos) {\n            const token = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level = level;\n            nodes.push(token);\n          }\n          const token_o = new state.Token('link_open', 'a', 1);\n          token_o.attrs = [['href', fullUrl]];\n          token_o.level = level++;\n          token_o.markup = 'linkify';\n          token_o.info = 'auto';\n          nodes.push(token_o);\n          const token_t = new state.Token('text', '', 0);\n          token_t.content = urlText;\n          token_t.level = level;\n          nodes.push(token_t);\n          const token_c = new state.Token('link_close', 'a', -1);\n          token_c.level = --level;\n          token_c.markup = 'linkify';\n          token_c.info = 'auto';\n          nodes.push(token_c);\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          const token = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n}\n\n// Simple typographic replacements\n//\n// (c) (C) \u2192 \u00A9\n// (tm) (TM) \u2192 \u2122\n// (r) (R) \u2192 \u00AE\n// +- \u2192 \u00B1\n// ... \u2192 \u2026 (also ?.... \u2192 ?.., !.... \u2192 !..)\n// ???????? \u2192 ???, !!!!! \u2192 !!!, `,,` \u2192 `,`\n// -- \u2192 &ndash;, --- \u2192 &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> \u00BD, \u00BC, \u00BE\n// - multiplications 2 x 4 -> 2 \u00D7 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nconst SCOPED_ABBR = {\n  c: '\u00A9',\n  r: '\u00AE',\n  tm: '\u2122'\n};\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\nfunction replace_scoped(inlineTokens) {\n  let inside_autolink = 0;\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i];\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\nfunction replace_rare(inlineTokens) {\n  let inside_autolink = 0;\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i];\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content.replace(/\\+-/g, '\u00B1')\n        // .., ..., ....... -> \u2026\n        // but ?..... & !..... -> ?.. & !..\n        .replace(/\\.{2,}/g, '\u2026').replace(/([?!])\u2026/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n        // em-dash\n        .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n        // en-dash\n        .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013').replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\nfunction replace(state) {\n  let blkIdx;\n  if (!state.md.options.typographer) {\n    return;\n  }\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n  }\n}\n\n// Convert straight quotation marks to typographic ones\n//\n\nconst QUOTE_TEST_RE = /['\"]/;\nconst QUOTE_RE = /['\"]/g;\nconst APOSTROPHE = '\\u2019'; /* \u2019 */\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\nfunction process_inlines(tokens, state) {\n  let j;\n  const stack = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const thisLevel = tokens[i].level;\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) {\n        break;\n      }\n    }\n    stack.length = j + 1;\n    if (token.type !== 'text') {\n      continue;\n    }\n    let text = token.content;\n    let pos = 0;\n    let max = text.length;\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER: while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      const t = QUOTE_RE.exec(text);\n      if (!t) {\n        break;\n      }\n      let canOpen = true;\n      let canClose = true;\n      pos = t.index + 1;\n      const isSingle = t[0] === \"'\";\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20;\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20;\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n      const isLastWhiteSpace = isWhiteSpace(lastChar);\n      const isNextWhiteSpace = isWhiteSpace(nextChar);\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j];\n          if (stack[j].level < thisLevel) {\n            break;\n          }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n            let openQuote;\n            let closeQuote;\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote);\n            pos += closeQuote.length - 1;\n            if (item.token === i) {\n              pos += openQuote.length - 1;\n            }\n            text = token.content;\n            max = text.length;\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\nfunction smartquotes(state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) {\n    return;\n  }\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n}\n\n// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nfunction text_join(state) {\n  let curr, last;\n  const blockTokens = state.tokens;\n  const l = blockTokens.length;\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n    const tokens = blockTokens[j].children;\n    const max = tokens.length;\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) {\n          tokens[last] = tokens[curr];\n        }\n        last++;\n      }\n    }\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n}\n\n/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nconst _rules$2 = [['normalize', normalize], ['block', block], ['inline', inline], ['linkify', linkify$1], ['replacements', replace], ['smartquotes', smartquotes],\n// `text_join` finds `text_special` tokens (for escape sequences)\n// and joins them with the rest of the text\n['text_join', text_join]];\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n  for (let i = 0; i < _rules$2.length; i++) {\n    this.ruler.push(_rules$2[i][0], _rules$2[i][1]);\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('');\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\nCore.prototype.State = StateCore;\n\n// Parser state class\n\nfunction StateBlock(src, md, env, tokens) {\n  this.src = src;\n\n  // link to parser instance\n  this.md = md;\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n  this.bMarks = []; // line begin offsets for fast jumps\n  this.eMarks = []; // line end offsets for fast jumps\n  this.tShift = []; // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []; // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent = 0;\n  this.line = 0; // line index in src\n  this.lineMax = 0; // lines count\n  this.tight = false; // loose/tight mode for lists\n  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n  this.level = 0;\n\n  // Create caches\n  // Generate markers.\n  const s = this.src;\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos);\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) {\n        pos++;\n      }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting);\n  token.block = true;\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) {\n      break;\n    }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) {\n    return pos;\n  }\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) {\n      return pos + 1;\n    }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) {\n      break;\n    }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) {\n    return pos;\n  }\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) {\n      return pos + 1;\n    }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return '';\n  }\n  const queue = new Array(end - begin);\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0;\n    const lineStart = this.bMarks[line];\n    let first = lineStart;\n    let last;\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first);\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n      first++;\n    }\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n// GFM table, https://github.github.com/gfm/#tables-extension-\n\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000;\nfunction getLine(state, line) {\n  const pos = state.bMarks[line] + state.tShift[line];\n  const max = state.eMarks[line];\n  return state.src.slice(pos, max);\n}\nfunction escapedSplit(str) {\n  const result = [];\n  const max = str.length;\n  let pos = 0;\n  let ch = str.charCodeAt(pos);\n  let isEscaped = false;\n  let lastPos = 0;\n  let current = '';\n  while (pos < max) {\n    if (ch === 0x7c /* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n    isEscaped = ch === 0x5c /* \\ */;\n    pos++;\n    ch = str.charCodeAt(pos);\n  }\n  result.push(current + str.substring(lastPos));\n  return result;\n}\nfunction table(state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n  let nextLine = startLine + 1;\n  if (state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n  const firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C /* | */ && firstCh !== 0x2D /* - */ && firstCh !== 0x3A /* : */) {\n    return false;\n  }\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n  const secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C /* | */ && secondCh !== 0x2D /* - */ && secondCh !== 0x3A /* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D /* - */ && isSpace(secondCh)) {\n    return false;\n  }\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos);\n    if (ch !== 0x7C /* | */ && ch !== 0x2D /* - */ && ch !== 0x3A /* : */ && !isSpace(ch)) {\n      return false;\n    }\n    pos++;\n  }\n  let lineText = getLine(state, startLine + 1);\n  let columns = lineText.split('|');\n  const aligns = [];\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n    if (t.charCodeAt(t.length - 1) === 0x3A /* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A /* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A /* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) {\n    return false;\n  }\n  if (silent) {\n    return true;\n  }\n  const oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote');\n  const token_to = state.push('table_open', 'table', 1);\n  const tableLines = [startLine, 0];\n  token_to.map = tableLines;\n  const token_tho = state.push('thead_open', 'thead', 1);\n  token_tho.map = [startLine, startLine + 1];\n  const token_htro = state.push('tr_open', 'tr', 1);\n  token_htro.map = [startLine, startLine + 1];\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token_ho.attrs = [['style', 'text-align:' + aligns[i]]];\n    }\n    const token_il = state.push('inline', '', 0);\n    token_il.content = columns[i].trim();\n    token_il.children = [];\n    state.push('th_close', 'th', -1);\n  }\n  state.push('tr_close', 'tr', -1);\n  state.push('thead_close', 'thead', -1);\n  let tbodyLines;\n  let autocompletedCells = 0;\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n    let terminate = false;\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) {\n      break;\n    }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) {\n      break;\n    }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length;\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) {\n      break;\n    }\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1);\n      token_tbo.map = tbodyLines = [startLine + 2, 0];\n    }\n    const token_tro = state.push('tr_open', 'tr', 1);\n    token_tro.map = [nextLine, nextLine + 1];\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token_tdo.attrs = [['style', 'text-align:' + aligns[i]]];\n      }\n      const token_il = state.push('inline', '', 0);\n      token_il.content = columns[i] ? columns[i].trim() : '';\n      token_il.children = [];\n      state.push('td_close', 'td', -1);\n    }\n    state.push('tr_close', 'tr', -1);\n  }\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n  state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n}\n\n// Code block (4 spaces padded)\n\nfunction code(state, startLine, endLine /*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n  let nextLine = startLine + 1;\n  let last = nextLine;\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n  state.line = last;\n  const token = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map = [startLine, state.line];\n  return true;\n}\n\n// fences (``` lang, ~~~ lang)\n\nfunction fence(state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine];\n  let max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n  if (pos + 3 > max) {\n    return false;\n  }\n  const marker = state.src.charCodeAt(pos);\n  if (marker !== 0x7E /* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  let mem = pos;\n  pos = state.skipChars(pos, marker);\n  let len = pos - mem;\n  if (len < 3) {\n    return false;\n  }\n  const markup = state.src.slice(mem, pos);\n  const params = state.src.slice(pos, max);\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) {\n    return true;\n  }\n\n  // search end of block\n  let nextLine = startLine;\n  let haveEndMarker = false;\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n    if (state.src.charCodeAt(pos) !== marker) {\n      continue;\n    }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) {\n      continue;\n    }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n    if (pos < max) {\n      continue;\n    }\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  const token = state.push('fence', 'code', 0);\n  token.info = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup = markup;\n  token.map = [startLine, state.line];\n  return true;\n}\n\n// Block quotes\n\nfunction blockquote(state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine];\n  let max = state.eMarks[startLine];\n  const oldLineMax = state.lineMax;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E /* > */) {\n    return false;\n  }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) {\n    return true;\n  }\n  const oldBMarks = [];\n  const oldBSCount = [];\n  const oldSCount = [];\n  const oldTShift = [];\n  const terminatorRules = state.md.block.ruler.getRules('blockquote');\n  const oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  let lastLineEmpty = false;\n  let nextLine;\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent;\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n    if (state.src.charCodeAt(pos++) === 0x3E /* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1;\n      let spaceAfterMarker;\n      let adjustTab;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n      let offset = initial;\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos);\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n        pos++;\n      }\n      lastLineEmpty = pos >= max;\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) {\n      break;\n    }\n\n    // Case 3: another tag found.\n    let terminate = false;\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n      break;\n    }\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n  const oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n  const token_o = state.push('blockquote_open', 'blockquote', 1);\n  token_o.markup = '>';\n  const lines = [startLine, 0];\n  token_o.map = lines;\n  state.md.block.tokenize(state, startLine, nextLine);\n  const token_c = state.push('blockquote_close', 'blockquote', -1);\n  token_c.markup = '>';\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n  return true;\n}\n\n// Horizontal rule\n\nfunction hr(state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine];\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n  let pos = state.bMarks[startLine] + state.tShift[startLine];\n  const marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A /* * */ && marker !== 0x2D /* - */ && marker !== 0x5F /* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1;\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) {\n      return false;\n    }\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n  if (cnt < 3) {\n    return false;\n  }\n  if (silent) {\n    return true;\n  }\n  state.line = startLine + 1;\n  const token = state.push('hr', 'hr', 0);\n  token.map = [startLine, state.line];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n  return true;\n}\n\n// Lists\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  const max = state.eMarks[startLine];\n  let pos = state.bMarks[startLine] + state.tShift[startLine];\n  const marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A /* * */ && marker !== 0x2D /* - */ && marker !== 0x2B /* + */) {\n    return -1;\n  }\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos);\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine];\n  const max = state.eMarks[startLine];\n  let pos = start;\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) {\n    return -1;\n  }\n  let ch = state.src.charCodeAt(pos++);\n  if (ch < 0x30 /* 0 */ || ch > 0x39 /* 9 */) {\n    return -1;\n  }\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) {\n      return -1;\n    }\n    ch = state.src.charCodeAt(pos++);\n    if (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) {\n        return -1;\n      }\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29 /* ) */ || ch === 0x2e /* . */) {\n      break;\n    }\n    return -1;\n  }\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\nfunction markTightParagraphs(state, idx) {\n  const level = state.level + 2;\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\nfunction list(state, startLine, endLine, silent) {\n  let max, pos, start, token;\n  let nextLine = startLine;\n  let tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 && state.sCount[nextLine] - state.listIndent >= 4 && state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  }\n  let isTerminatingParagraph = false;\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered;\n  let markerValue;\n  let posAfterMarker;\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[nextLine] + state.tShift[nextLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) {\n    return true;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // Start list\n  const listTokIdx = state.tokens.length;\n  if (isOrdered) {\n    token = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]];\n    }\n  } else {\n    token = state.push('bullet_list_open', 'ul', 1);\n  }\n  const listLines = [nextLine, 0];\n  token.map = listLines;\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false;\n  const terminatorRules = state.md.block.ruler.getRules('list');\n  const oldParentType = state.parentType;\n  state.parentType = 'list';\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n    let offset = initial;\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos);\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n      pos++;\n    }\n    const contentStart = pos;\n    let indentAfterMarker;\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) {\n      indentAfterMarker = 1;\n    }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    const itemLines = [nextLine, 0];\n    token.map = itemLines;\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight;\n    const oldTShift = state.tShift[nextLine];\n    const oldSCount = state.sCount[nextLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n    state.tight = true;\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n    state.sCount[nextLine] = offset;\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = state.line - nextLine > 1 && state.isEmpty(state.line - 1);\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[nextLine] = oldTShift;\n    state.sCount[nextLine] = oldSCount;\n    state.tight = oldTight;\n    token = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n    nextLine = state.line;\n    itemLines[1] = nextLine;\n    if (nextLine >= endLine) {\n      break;\n    }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n\n    // fail if terminating block found\n    let terminate = false;\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) {\n      break;\n    }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) {\n        break;\n      }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) {\n        break;\n      }\n    }\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n      break;\n    }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n  listLines[1] = nextLine;\n  state.line = nextLine;\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n  return true;\n}\n\nfunction reference(state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine];\n  let max = state.eMarks[startLine];\n  let nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n  if (state.src.charCodeAt(pos) !== 0x5B /* [ */) {\n    return false;\n  }\n  function getNextLine(nextLine) {\n    const endLine = state.lineMax;\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null;\n    }\n    let isContinuation = false;\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      isContinuation = true;\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) {\n      isContinuation = true;\n    }\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference');\n      const oldParentType = state.parentType;\n      state.parentType = 'reference';\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false;\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n      state.parentType = oldParentType;\n      if (terminate) {\n        // terminated by another block\n        return null;\n      }\n    }\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    const max = state.eMarks[nextLine];\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1);\n  }\n  let str = state.src.slice(pos, max + 1);\n  max = str.length;\n  let labelEnd = -1;\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine);\n      if (lineContent !== null) {\n        str += lineContent;\n        max = str.length;\n        nextLine++;\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine);\n        if (lineContent !== null) {\n          str += lineContent;\n          max = str.length;\n          nextLine++;\n        }\n      }\n    }\n  }\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A /* : */) {\n    return false;\n  }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine);\n      if (lineContent !== null) {\n        str += lineContent;\n        max = str.length;\n        nextLine++;\n      }\n    } else if (isSpace(ch)) ; else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!destRes.ok) {\n    return false;\n  }\n  const href = state.md.normalizeLink(destRes.str);\n  if (!state.md.validateLink(href)) {\n    return false;\n  }\n  pos = destRes.pos;\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos;\n  const destEndLineNo = nextLine;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos;\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine);\n      if (lineContent !== null) {\n        str += lineContent;\n        max = str.length;\n        nextLine++;\n      }\n    } else if (isSpace(ch)) ; else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max);\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine);\n    if (lineContent === null) break;\n    str += lineContent;\n    pos = max;\n    max = str.length;\n    nextLine++;\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes);\n  }\n  let title;\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str;\n    pos = titleRes.pos;\n  } else {\n    title = '';\n    pos = destEndPos;\n    nextLine = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) {\n      break;\n    }\n    pos++;\n  }\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      nextLine = destEndLineNo;\n      while (pos < max) {\n        const ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) {\n          break;\n        }\n        pos++;\n      }\n    }\n  }\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n  const label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) {\n    return true;\n  }\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = {\n      title,\n      href\n    };\n  }\n  state.line = nextLine;\n  return true;\n}\n\n// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nvar block_names = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'search', 'section', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];\n\n// Regexps to match html elements\n\nconst attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nconst unquoted = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nconst single_quoted = \"'[^']*'\";\nconst double_quoted = '\"[^\"]*\"';\nconst attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\nconst attribute = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\nconst open_tag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nconst close_tag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nconst comment = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->';\nconst processing = '<[?][\\\\s\\\\S]*?[?]>';\nconst declaration = '<![A-Za-z][^>]*>';\nconst cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\n// HTML block\n\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [[/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true], [/^<!--/, /-->/, true], [/^<\\?/, /\\?>/, true], [/^<![A-Z]/, />/, true], [/^<!\\[CDATA\\[/, /\\]\\]>/, true], [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true], [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'), /^$/, false]];\nfunction html_block(state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine];\n  let max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n  if (!state.md.options.html) {\n    return false;\n  }\n  if (state.src.charCodeAt(pos) !== 0x3C /* < */) {\n    return false;\n  }\n  let lineText = state.src.slice(pos, max);\n  let i = 0;\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) {\n      break;\n    }\n  }\n  if (i === HTML_SEQUENCES.length) {\n    return false;\n  }\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n  let nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) {\n        break;\n      }\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) {\n          nextLine++;\n        }\n        break;\n      }\n    }\n  }\n  state.line = nextLine;\n  const token = state.push('html_block', '', 0);\n  token.map = [startLine, nextLine];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n  return true;\n}\n\n// heading (#, ##, ...)\n\nfunction heading(state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine];\n  let max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n  let ch = state.src.charCodeAt(pos);\n  if (ch !== 0x23 /* # */ || pos >= max) {\n    return false;\n  }\n\n  // count heading level\n  let level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23 /* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n  if (level > 6 || pos < max && !isSpace(ch)) {\n    return false;\n  }\n  if (silent) {\n    return true;\n  }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  const tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n  state.line = startLine + 1;\n  const token_o = state.push('heading_open', 'h' + String(level), 1);\n  token_o.markup = '########'.slice(0, level);\n  token_o.map = [startLine, state.line];\n  const token_i = state.push('inline', '', 0);\n  token_i.content = state.src.slice(pos, max).trim();\n  token_i.map = [startLine, state.line];\n  token_i.children = [];\n  const token_c = state.push('heading_close', 'h' + String(level), -1);\n  token_c.markup = '########'.slice(0, level);\n  return true;\n}\n\n// lheading (---, ===)\n\nfunction lheading(state, startLine, endLine /*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n  const oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0;\n  let marker;\n  let nextLine = startLine + 1;\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      const max = state.eMarks[nextLine];\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n        if (marker === 0x2D /* - */ || marker === 0x3D /* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n          if (pos >= max) {\n            level = marker === 0x3D /* = */ ? 1 : 2;\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false;\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) {\n      break;\n    }\n  }\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine + 1;\n  const token_o = state.push('heading_open', 'h' + String(level), 1);\n  token_o.markup = String.fromCharCode(marker);\n  token_o.map = [startLine, state.line];\n  const token_i = state.push('inline', '', 0);\n  token_i.content = content;\n  token_i.map = [startLine, state.line - 1];\n  token_i.children = [];\n  const token_c = state.push('heading_close', 'h' + String(level), -1);\n  token_c.markup = String.fromCharCode(marker);\n  state.parentType = oldParentType;\n  return true;\n}\n\n// Paragraph\n\nfunction paragraph(state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph');\n  const oldParentType = state.parentType;\n  let nextLine = startLine + 1;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false;\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) {\n      break;\n    }\n  }\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine;\n  const token_o = state.push('paragraph_open', 'p', 1);\n  token_o.map = [startLine, state.line];\n  const token_i = state.push('inline', '', 0);\n  token_i.content = content;\n  token_i.map = [startLine, state.line];\n  token_i.children = [];\n  state.push('paragraph_close', 'p', -1);\n  state.parentType = oldParentType;\n  return true;\n}\n\n/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nconst _rules$1 = [\n// First 2 params - rule name & source. Secondary array - list of rules,\n// which can be terminated by this one.\n['table', table, ['paragraph', 'reference']], ['code', code], ['fence', fence, ['paragraph', 'reference', 'blockquote', 'list']], ['blockquote', blockquote, ['paragraph', 'reference', 'blockquote', 'list']], ['hr', hr, ['paragraph', 'reference', 'blockquote', 'list']], ['list', list, ['paragraph', 'reference', 'blockquote']], ['reference', reference], ['html_block', html_block, ['paragraph', 'reference', 'blockquote']], ['heading', heading, ['paragraph', 'reference', 'blockquote']], ['lheading', lheading], ['paragraph', paragraph]];\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n  for (let i = 0; i < _rules$1.length; i++) {\n    this.ruler.push(_rules$1[i][0], _rules$1[i][1], {\n      alt: (_rules$1[i][2] || []).slice()\n    });\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('');\n  const len = rules.length;\n  const maxNesting = state.md.options.maxNesting;\n  let line = startLine;\n  let hasEmptyLines = false;\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) {\n      break;\n    }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) {\n      break;\n    }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line;\n    let ok = false;\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\");\n        }\n        break;\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched');\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n    line = state.line;\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) {\n    return;\n  }\n  const state = new this.State(src, md, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\nParserBlock.prototype.State = StateBlock;\n\n// Inline parser state\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n  const token = new Token(type, tag, nesting);\n  let token_meta = null;\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n  token.level = this.level;\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = {\n      delimiters: this.delimiters\n    };\n  }\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax;\n  const marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n  let pos = start;\n  while (pos < max && this.src.charCodeAt(pos) === marker) {\n    pos++;\n  }\n  const count = pos - start;\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n  const isLastWhiteSpace = isWhiteSpace(lastChar);\n  const isNextWhiteSpace = isWhiteSpace(nextChar);\n  const left_flanking = !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar);\n  const right_flanking = !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar);\n  const can_open = left_flanking && (canSplitWord || !right_flanking || isLastPunctChar);\n  const can_close = right_flanking && (canSplitWord || !left_flanking || isNextPunctChar);\n  return {\n    can_open,\n    can_close,\n    length: count\n  };\n};\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A /* \\n */:\n    case 0x21 /* ! */:\n    case 0x23 /* # */:\n    case 0x24 /* $ */:\n    case 0x25 /* % */:\n    case 0x26 /* & */:\n    case 0x2A /* * */:\n    case 0x2B /* + */:\n    case 0x2D /* - */:\n    case 0x3A /* : */:\n    case 0x3C /* < */:\n    case 0x3D /* = */:\n    case 0x3E /* > */:\n    case 0x40 /* @ */:\n    case 0x5B /* [ */:\n    case 0x5C /* \\ */:\n    case 0x5D /* ] */:\n    case 0x5E /* ^ */:\n    case 0x5F /* _ */:\n    case 0x60 /* ` */:\n    case 0x7B /* { */:\n    case 0x7D /* } */:\n    case 0x7E /* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\nfunction text(state, silent) {\n  let pos = state.pos;\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n  if (pos === state.pos) {\n    return false;\n  }\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n  state.pos = pos;\n  return true;\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n\n// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\nfunction linkify(state, silent) {\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n  const pos = state.pos;\n  const max = state.posMax;\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A /* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F /* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F /* / */) return false;\n  const match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n  const proto = match[1];\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n  let url = link.url;\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n  const fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n    const token_o = state.push('link_open', 'a', 1);\n    token_o.attrs = [['href', fullUrl]];\n    token_o.markup = 'linkify';\n    token_o.info = 'auto';\n    const token_t = state.push('text', '', 0);\n    token_t.content = state.md.normalizeLinkText(url);\n    const token_c = state.push('link_close', 'a', -1);\n    token_c.markup = 'linkify';\n    token_c.info = 'auto';\n  }\n  state.pos += url.length - proto.length;\n  return true;\n}\n\n// Proceess '\\n'\n\nfunction newline(state, silent) {\n  let pos = state.pos;\n  if (state.src.charCodeAt(pos) !== 0x0A /* \\n */) {\n    return false;\n  }\n  const pmax = state.pending.length - 1;\n  const max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n  state.pos = pos;\n  return true;\n}\n\n// Process escaped chars and hardbreaks\n\nconst ESCAPED = [];\nfor (let i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\nfunction escape(state, silent) {\n  let pos = state.pos;\n  const max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x5C /* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n  let ch1 = state.src.charCodeAt(pos);\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n    state.pos = pos;\n    return true;\n  }\n  let escapedStr = state.src[pos];\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1);\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n  const origStr = '\\\\' + escapedStr;\n  if (!silent) {\n    const token = state.push('text_special', '', 0);\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n    token.markup = origStr;\n    token.info = 'escape';\n  }\n  state.pos = pos + 1;\n  return true;\n}\n\n// Parse backticks\n\nfunction backtick(state, silent) {\n  let pos = state.pos;\n  const ch = state.src.charCodeAt(pos);\n  if (ch !== 0x60 /* ` */) {\n    return false;\n  }\n  const start = pos;\n  pos++;\n  const max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60 /* ` */) {\n    pos++;\n  }\n  const marker = state.src.slice(start, pos);\n  const openerLength = marker.length;\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n  let matchEnd = pos;\n  let matchStart;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60 /* ` */) {\n      matchEnd++;\n    }\n    const closerLength = matchEnd - matchStart;\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0);\n        token.markup = marker;\n        token.content = state.src.slice(pos, matchStart).replace(/\\n/g, ' ').replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n}\n\n// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize(state, silent) {\n  const start = state.pos;\n  const marker = state.src.charCodeAt(start);\n  if (silent) {\n    return false;\n  }\n  if (marker !== 0x7E /* ~ */) {\n    return false;\n  }\n  const scanned = state.scanDelims(state.pos, true);\n  let len = scanned.length;\n  const ch = String.fromCharCode(marker);\n  if (len < 2) {\n    return false;\n  }\n  let token;\n  if (len % 2) {\n    token = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n  for (let i = 0; i < len; i += 2) {\n    token = state.push('text', '', 0);\n    token.content = ch + ch;\n    state.delimiters.push({\n      marker,\n      length: 0,\n      // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n  state.pos += scanned.length;\n  return true;\n}\nfunction postProcess$1(state, delimiters) {\n  let token;\n  const loneMarkers = [];\n  const max = delimiters.length;\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i];\n    if (startDelim.marker !== 0x7E /* ~ */) {\n      continue;\n    }\n    if (startDelim.end === -1) {\n      continue;\n    }\n    const endDelim = delimiters[startDelim.end];\n    token = state.tokens[startDelim.token];\n    token.type = 's_open';\n    token.tag = 's';\n    token.nesting = 1;\n    token.markup = '~~';\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = 's_close';\n    token.tag = 's';\n    token.nesting = -1;\n    token.markup = '~~';\n    token.content = '';\n    if (state.tokens[endDelim.token - 1].type === 'text' && state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop();\n    let j = i + 1;\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n    j--;\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess(state) {\n  const tokens_meta = state.tokens_meta;\n  const max = state.tokens_meta.length;\n  postProcess$1(state, state.delimiters);\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess$1(state, tokens_meta[curr].delimiters);\n    }\n  }\n}\nvar r_strikethrough = {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n};\n\n// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize(state, silent) {\n  const start = state.pos;\n  const marker = state.src.charCodeAt(start);\n  if (silent) {\n    return false;\n  }\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) {\n    return false;\n  }\n  const scanned = state.scanDelims(state.pos, marker === 0x2A);\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n  state.pos += scanned.length;\n  return true;\n}\nfunction postProcess(state, delimiters) {\n  const max = delimiters.length;\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i];\n    if (startDelim.marker !== 0x5F /* _ */ && startDelim.marker !== 0x2A /* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n    const endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 &&\n    // check that first two markers match and adjacent\n    delimiters[i - 1].marker === startDelim.marker && delimiters[i - 1].token === startDelim.token - 1 &&\n    // check that last two markers are adjacent (we can safely assume they match)\n    delimiters[startDelim.end + 1].token === endDelim.token + 1;\n    const ch = String.fromCharCode(startDelim.marker);\n    const token_o = state.tokens[startDelim.token];\n    token_o.type = isStrong ? 'strong_open' : 'em_open';\n    token_o.tag = isStrong ? 'strong' : 'em';\n    token_o.nesting = 1;\n    token_o.markup = isStrong ? ch + ch : ch;\n    token_o.content = '';\n    const token_c = state.tokens[endDelim.token];\n    token_c.type = isStrong ? 'strong_close' : 'em_close';\n    token_c.tag = isStrong ? 'strong' : 'em';\n    token_c.nesting = -1;\n    token_c.markup = isStrong ? ch + ch : ch;\n    token_c.content = '';\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process(state) {\n  const tokens_meta = state.tokens_meta;\n  const max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n}\nvar r_emphasis = {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n};\n\n// Process [link](<to> \"stuff\")\n\nfunction link(state, silent) {\n  let code, label, res, ref;\n  let href = '';\n  let title = '';\n  let start = state.pos;\n  let parseReference = true;\n  if (state.src.charCodeAt(state.pos) !== 0x5B /* [ */) {\n    return false;\n  }\n  const oldPos = state.pos;\n  const max = state.posMax;\n  const labelStart = state.pos + 1;\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) {\n    return false;\n  }\n  let pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28 /* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) {\n        break;\n      }\n    }\n    if (pos >= max) {\n      return false;\n    }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      }\n    }\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29 /* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B /* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    const token_o = state.push('link_open', 'a', 1);\n    const attrs = [['href', href]];\n    token_o.attrs = attrs;\n    if (title) {\n      attrs.push(['title', title]);\n    }\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n    state.push('link_close', 'a', -1);\n  }\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// Process ![image](<src> \"title\")\n\nfunction image(state, silent) {\n  let code, content, label, pos, ref, res, title, start;\n  let href = '';\n  const oldPos = state.pos;\n  const max = state.posMax;\n  if (state.src.charCodeAt(state.pos) !== 0x21 /* ! */) {\n    return false;\n  }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B /* [ */) {\n    return false;\n  }\n  const labelStart = state.pos + 2;\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) {\n    return false;\n  }\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28 /* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) {\n        break;\n      }\n    }\n    if (pos >= max) {\n      return false;\n    }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) {\n        break;\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n    } else {\n      title = '';\n    }\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29 /* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B /* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n    const tokens = [];\n    state.md.inline.parse(content, state.md, state.env, tokens);\n    const token = state.push('image', 'img', 0);\n    const attrs = [['src', href], ['alt', '']];\n    token.attrs = attrs;\n    token.children = tokens;\n    token.content = content;\n    if (title) {\n      attrs.push(['title', title]);\n    }\n  }\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/;\nfunction autolink(state, silent) {\n  let pos = state.pos;\n  if (state.src.charCodeAt(pos) !== 0x3C /* < */) {\n    return false;\n  }\n  const start = state.pos;\n  const max = state.posMax;\n  for (;;) {\n    if (++pos >= max) return false;\n    const ch = state.src.charCodeAt(pos);\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n  const url = state.src.slice(start + 1, pos);\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n    if (!silent) {\n      const token_o = state.push('link_open', 'a', 1);\n      token_o.attrs = [['href', fullUrl]];\n      token_o.markup = 'autolink';\n      token_o.info = 'auto';\n      const token_t = state.push('text', '', 0);\n      token_t.content = state.md.normalizeLinkText(url);\n      const token_c = state.push('link_close', 'a', -1);\n      token_c.markup = 'autolink';\n      token_c.info = 'auto';\n    }\n    state.pos += url.length + 2;\n    return true;\n  }\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n    if (!silent) {\n      const token_o = state.push('link_open', 'a', 1);\n      token_o.attrs = [['href', fullUrl]];\n      token_o.markup = 'autolink';\n      token_o.info = 'auto';\n      const token_t = state.push('text', '', 0);\n      token_t.content = state.md.normalizeLinkText(url);\n      const token_c = state.push('link_close', 'a', -1);\n      token_c.markup = 'autolink';\n      token_c.info = 'auto';\n    }\n    state.pos += url.length + 2;\n    return true;\n  }\n  return false;\n}\n\n// Process html tags\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\nfunction isLetter(ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20; // to lower case\n  return lc >= 0x61 /* a */ && lc <= 0x7a /* z */;\n}\nfunction html_inline(state, silent) {\n  if (!state.md.options.html) {\n    return false;\n  }\n\n  // Check start\n  const max = state.posMax;\n  const pos = state.pos;\n  if (state.src.charCodeAt(pos) !== 0x3C /* < */ || pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21 /* ! */ && ch !== 0x3F /* ? */ && ch !== 0x2F /* / */ && !isLetter(ch)) {\n    return false;\n  }\n  const match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) {\n    return false;\n  }\n  if (!silent) {\n    const token = state.push('html_inline', '', 0);\n    token.content = match[0];\n    if (isLinkOpen(token.content)) state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n}\n\n// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nconst NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\nfunction entity(state, silent) {\n  const pos = state.pos;\n  const max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x26 /* & */) return false;\n  if (pos + 1 >= max) return false;\n  const ch = state.src.charCodeAt(pos + 1);\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n        const token = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup = match[0];\n        token.info = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      const decoded = entities.decodeHTML(match[0]);\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token = state.push('text_special', '', 0);\n          token.content = decoded;\n          token.markup = match[0];\n          token.info = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters(delimiters) {\n  const openersBottom = {};\n  const max = delimiters.length;\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0;\n  let lastTokenIdx = -2; // needs any value lower than -1\n  const jumps = [];\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx];\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1];\n    }\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + closer.length % 3];\n    let openerIdx = headerIdx - jumps[headerIdx] - 1;\n    let newMinOpenerIdx = openerIdx;\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx];\n      if (opener.marker !== closer.marker) continue;\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? jumps[openerIdx - 1] + 1 : 0;\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n          closer.open = false;\n          opener.end = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\nfunction link_pairs(state) {\n  const tokens_meta = state.tokens_meta;\n  const max = state.tokens_meta.length;\n  processDelimiters(state.delimiters);\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n}\n\n// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nfunction fragments_join(state) {\n  let curr, last;\n  let level = 0;\n  const tokens = state.tokens;\n  const max = state.tokens.length;\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) {\n        tokens[last] = tokens[curr];\n      }\n      last++;\n    }\n  }\n  if (curr !== last) {\n    tokens.length = last;\n  }\n}\n\n/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\n\n// Parser rules\n\nconst _rules = [['text', text], ['linkify', linkify], ['newline', newline], ['escape', escape], ['backticks', backtick], ['strikethrough', r_strikethrough.tokenize], ['emphasis', r_emphasis.tokenize], ['link', link], ['image', image], ['autolink', autolink], ['html_inline', html_inline], ['entity', entity]];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [['balance_pairs', link_pairs], ['strikethrough', r_strikethrough.postProcess], ['emphasis', r_emphasis.postProcess],\n// rules for pairs separate '**' into its own text tokens, which may be left unused,\n// rule below merges unused segments back with the rest of the text\n['fragments_join', fragments_join]];\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos;\n  const rules = this.ruler.getRules('');\n  const len = rules.length;\n  const maxNesting = state.md.options.maxNesting;\n  const cache = state.cache;\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n  let ok = false;\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n      if (ok) {\n        if (pos >= state.pos) {\n          throw new Error(\"inline rule didn't increment state.pos\");\n        }\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n  if (!ok) {\n    state.pos++;\n  }\n  cache[pos] = state.pos;\n};\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('');\n  const len = rules.length;\n  const end = state.posMax;\n  const maxNesting = state.md.options.maxNesting;\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos;\n    let ok = false;\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) {\n          if (prevPos >= state.pos) {\n            throw new Error(\"inline rule didn't increment state.pos\");\n          }\n          break;\n        }\n      }\n    }\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n      continue;\n    }\n    state.pending += state.src[state.pos++];\n  }\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens);\n  this.tokenize(state);\n  const rules = this.ruler2.getRules('');\n  const len = rules.length;\n  for (let i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\nParserInline.prototype.State = StateInline;\n\n// markdown-it default options\n\nvar cfg_default = {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n    // autoconvert URL-like texts to links\n    linkify: false,\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00AB\u00BB\u201E\u201C' for Russian, '\u201E\u201C\u201A\u2018' for German,\n    // and ['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019',\n    /* \u201C\u201D\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n\n// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nvar cfg_zero = {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n    // autoconvert URL-like texts to links\n    linkify: false,\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00AB\u00BB\u201E\u201C' for Russian, '\u201E\u201C\u201A\u2018' for German,\n    // and ['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019',\n    /* \u201C\u201D\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'fragments_join']\n    }\n  }\n};\n\n// Commonmark default options\n\nvar cfg_commonmark = {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n    // autoconvert URL-like texts to links\n    linkify: false,\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00AB\u00BB\u201E\u201C' for Russian, '\u201E\u201C\u201A\u2018' for German,\n    // and ['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019',\n    /* \u201C\u201D\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fence', 'heading', 'hr', 'html_block', 'lheading', 'list', 'reference', 'paragraph']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'html_inline', 'image', 'link', 'newline', 'text'],\n      rules2: ['balance_pairs', 'emphasis', 'fragments_join']\n    }\n  }\n};\n\n// Main parser class\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n};\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase();\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true;\n}\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:'];\nfunction normalizeLink(url) {\n  const parsed = mdurl__namespace.parse(url, true);\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) {/**/}\n    }\n  }\n  return mdurl__namespace.encode(mdurl__namespace.format(parsed));\n}\nfunction normalizeLinkText(url) {\n  const parsed = mdurl__namespace.parse(url, true);\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) {/**/}\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl__namespace.decode(mdurl__namespace.format(parsed), mdurl__namespace.decode.defaultChars + '%');\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `\u201C\u201D\u2018\u2019`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'\u00AB\u00BB\u201E\u201C'` for Russian, `'\u201E\u201C\u201A\u2018'` for German, and\n *   `['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n  if (!options) {\n    if (!isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new Core();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = assign({}, helpers);\n  this.options = {};\n  this.configure(presetName);\n  if (options) {\n    this.set(options);\n  }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  assign(this.options, options);\n  return this;\n};\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this;\n  if (isString(presets)) {\n    const presetName = presets;\n    presets = config[presetName];\n    if (!presets) {\n      throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name');\n    }\n  }\n  if (!presets) {\n    throw new Error('Wrong `markdown-it` preset, can\\'t be empty');\n  }\n  if (presets.options) {\n    self.set(presets.options);\n  }\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = [];\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.enable(list, true));\n  const missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = [];\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.disable(list, true));\n  const missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n  const state = new this.core.State(src, this, env);\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\nmodule.exports = MarkdownIt;\n", "/*! markdownlint-micromark 0.1.9 https://github.com/DavidAnson/markdownlint */(()=>{\"use strict\";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};e.r(t),e.d(t,{directive:()=>F,gfmAutolinkLiteral:()=>B,gfmFootnote:()=>K,gfmTable:()=>ce,math:()=>be,parse:()=>It,postprocess:()=>Mt,preprocess:()=>Ot});var n={};e.r(n),e.d(n,{attentionMarkers:()=>Ft,contentInitial:()=>Lt,disable:()=>zt,document:()=>St,flow:()=>Dt,flowInitial:()=>Tt,insideSpan:()=>Ct,string:()=>Et,text:()=>At});const r=g(/[A-Za-z]/),i=g(/[\\dA-Za-z]/),o=g(/[#-'*+\\--9=?A-Z^-~]/);function c(e){return null!==e&&(e<32||127===e)}const u=g(/\\d/),a=g(/[\\dA-Fa-f]/),l=g(/[!-/:-@[-`{-~]/);function s(e){return null!==e&&e<-2}function f(e){return null!==e&&(e<0||32===e)}function p(e){return-2===e||-1===e||32===e}const d=g(/\\p{P}|\\p{S}/u),m=g(/\\s/);function g(e){return function(t){return null!==t&&t>-1&&e.test(String.fromCharCode(t))}}function h(e,t,n,r){const i=r?r-1:Number.POSITIVE_INFINITY;let o=0;return function(r){return p(r)?(e.enter(n),c(r)):t(r)};function c(r){return p(r)&&o++<i?(e.consume(r),c):(e.exit(n),t(r))}}function b(e,t){let n;return function r(i){return s(i)?(e.enter(\"lineEnding\"),e.consume(i),e.exit(\"lineEnding\"),n=!0,r):p(i)?h(e,r,n?\"linePrefix\":\"lineSuffix\")(i):t(i)}}function x(e,t,n,o,c,u,a,l,d,m,g,x,v,k,y){let w,q;return function(t){return e.enter(o),e.enter(c),e.consume(t),e.exit(c),S};function S(t){return 35===t?(w=a,L(t)):46===t?(w=l,L(t)):58===t||95===t||r(t)?(e.enter(u),e.enter(d),e.consume(t),E):y&&p(t)?h(e,S,\"whitespace\")(t):!y&&f(t)?b(e,S)(t):O(t)}function L(t){const n=w+\"Marker\";return e.enter(u),e.enter(w),e.enter(n),e.consume(t),e.exit(n),T}function T(t){if(null===t||34===t||35===t||39===t||46===t||60===t||61===t||62===t||96===t||125===t||f(t))return n(t);const r=w+\"Value\";return e.enter(r),e.consume(t),D}function D(t){if(null===t||34===t||39===t||60===t||61===t||62===t||96===t)return n(t);if(35===t||46===t||125===t||f(t)){const n=w+\"Value\";return e.exit(n),e.exit(w),e.exit(u),S(t)}return e.consume(t),D}function E(t){return 45===t||46===t||58===t||95===t||i(t)?(e.consume(t),E):(e.exit(d),y&&p(t)?h(e,A,\"whitespace\")(t):!y&&f(t)?b(e,A)(t):A(t))}function A(t){return 61===t?(e.enter(m),e.consume(t),e.exit(m),C):(e.exit(u),S(t))}function C(t){return null===t||60===t||61===t||62===t||96===t||125===t||y&&s(t)?n(t):34===t||39===t?(e.enter(g),e.enter(v),e.consume(t),e.exit(v),q=t,z):y&&p(t)?h(e,C,\"whitespace\")(t):!y&&f(t)?b(e,C)(t):(e.enter(x),e.enter(k),e.consume(t),q=void 0,F)}function F(t){return null===t||34===t||39===t||60===t||61===t||62===t||96===t?n(t):125===t||f(t)?(e.exit(k),e.exit(x),e.exit(u),S(t)):(e.consume(t),F)}function z(t){return t===q?(e.enter(v),e.consume(t),e.exit(v),e.exit(g),e.exit(u),R):(e.enter(x),I(t))}function I(t){return t===q?(e.exit(x),z(t)):null===t?n(t):s(t)?y?n(t):b(e,I)(t):(e.enter(k),e.consume(t),M)}function M(t){return t===q||null===t||s(t)?(e.exit(k),I(t)):(e.consume(t),M)}function R(e){return 125===e||f(e)?S(e):O(e)}function O(r){return 125===r?(e.enter(c),e.consume(r),e.exit(c),e.exit(o),t):n(r)}}function v(e,t,n,r,i,o,c){let u,a=0,l=0;return function(t){return e.enter(r),e.enter(i),e.consume(t),e.exit(i),f};function f(n){return 93===n?(e.enter(i),e.consume(n),e.exit(i),e.exit(r),t):(e.enter(o),p(n))}function p(t){if(93===t&&!l)return g(t);const n=e.enter(\"chunkText\",{contentType:\"text\",previous:u});return u&&(u.next=n),u=n,d(t)}function d(t){return null===t||a>999||91===t&&++l>32?n(t):93!==t||l--?s(t)?c?n(t):(e.consume(t),e.exit(\"chunkText\"),p):(e.consume(t),92===t?m:d):(e.exit(\"chunkText\"),g(t))}function m(t){return 91===t||92===t||93===t?(e.consume(t),a++,d):d(t)}function g(n){return e.exit(o),e.enter(i),e.consume(n),e.exit(i),e.exit(r),t}}function k(e,t,n,o){const c=this;return function(t){return r(t)?(e.enter(o),e.consume(t),u):n(t)};function u(r){return 45===r||95===r||i(r)?(e.consume(r),u):(e.exit(o),45===c.previous||95===c.previous?n(r):t(r))}}const y={tokenize:function(e,t,n){const r=this,i=r.events[r.events.length-1],o=i&&\"linePrefix\"===i[1].type?i[2].sliceSerialize(i[1],!0).length:0;let c,u=0;return function(t){return e.enter(\"directiveContainer\"),e.enter(\"directiveContainerFence\"),e.enter(\"directiveContainerSequence\"),a(t)};function a(t){return 58===t?(e.consume(t),u++,a):u<3?n(t):(e.exit(\"directiveContainerSequence\"),k.call(r,e,l,n,\"directiveContainerName\")(t))}function l(t){return 91===t?e.attempt(w,f,f)(t):f(t)}function f(t){return 123===t?e.attempt(q,p,p)(t):p(t)}function p(t){return h(e,d,\"whitespace\")(t)}function d(i){return e.exit(\"directiveContainerFence\"),null===i?m(i):s(i)?r.interrupt?t(i):e.attempt(S,g,m)(i):n(i)}function m(n){return e.exit(\"directiveContainer\"),t(n)}function g(n){return null===n?(e.exit(\"directiveContainer\"),t(n)):(e.enter(\"directiveContainerContent\"),b(n))}function b(t){return null===t?T(t):e.attempt({tokenize:D,partial:!0},T,o?h(e,x,\"linePrefix\",o+1):x)(t)}function x(t){if(null===t)return T(t);const n=e.enter(\"chunkDocument\",{contentType:\"document\",previous:c});return c&&(c.next=n),c=n,v(t)}function v(t){if(null===t){const n=e.exit(\"chunkDocument\");return r.parser.lazy[n.start.line]=!1,T(t)}return s(t)?e.check(S,y,L)(t):(e.consume(t),v)}function y(t){e.consume(t);const n=e.exit(\"chunkDocument\");return r.parser.lazy[n.start.line]=!1,b}function L(t){const n=e.exit(\"chunkDocument\");return r.parser.lazy[n.start.line]=!1,T(t)}function T(n){return e.exit(\"directiveContainerContent\"),e.exit(\"directiveContainer\"),t(n)}function D(e,t,n){let r=0;return h(e,(function(t){return e.enter(\"directiveContainerFence\"),e.enter(\"directiveContainerSequence\"),i(t)}),\"linePrefix\",4);function i(t){return 58===t?(e.consume(t),r++,i):r<u?n(t):(e.exit(\"directiveContainerSequence\"),h(e,o,\"whitespace\")(t))}function o(r){return null===r||s(r)?(e.exit(\"directiveContainerFence\"),t(r)):n(r)}}},concrete:!0},w={tokenize:function(e,t,n){return v(e,t,n,\"directiveContainerLabel\",\"directiveContainerLabelMarker\",\"directiveContainerLabelString\",!0)},partial:!0},q={tokenize:function(e,t,n){return x(e,t,n,\"directiveContainerAttributes\",\"directiveContainerAttributesMarker\",\"directiveContainerAttribute\",\"directiveContainerAttributeId\",\"directiveContainerAttributeClass\",\"directiveContainerAttributeName\",\"directiveContainerAttributeInitializerMarker\",\"directiveContainerAttributeValueLiteral\",\"directiveContainerAttributeValue\",\"directiveContainerAttributeValueMarker\",\"directiveContainerAttributeValueData\",!0)},partial:!0},S={tokenize:function(e,t,n){const r=this;return function(t){return e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),i};function i(e){return r.parser.lazy[r.now().line]?n(e):t(e)}},partial:!0},L={tokenize:function(e,t,n){const r=this;return function(t){return e.enter(\"directiveLeaf\"),e.enter(\"directiveLeafSequence\"),e.consume(t),i};function i(t){return 58===t?(e.consume(t),e.exit(\"directiveLeafSequence\"),k.call(r,e,o,n,\"directiveLeafName\")):n(t)}function o(t){return 91===t?e.attempt(T,c,c)(t):c(t)}function c(t){return 123===t?e.attempt(D,u,u)(t):u(t)}function u(t){return h(e,a,\"whitespace\")(t)}function a(r){return null===r||s(r)?(e.exit(\"directiveLeaf\"),t(r)):n(r)}}},T={tokenize:function(e,t,n){return v(e,t,n,\"directiveLeafLabel\",\"directiveLeafLabelMarker\",\"directiveLeafLabelString\",!0)},partial:!0},D={tokenize:function(e,t,n){return x(e,t,n,\"directiveLeafAttributes\",\"directiveLeafAttributesMarker\",\"directiveLeafAttribute\",\"directiveLeafAttributeId\",\"directiveLeafAttributeClass\",\"directiveLeafAttributeName\",\"directiveLeafAttributeInitializerMarker\",\"directiveLeafAttributeValueLiteral\",\"directiveLeafAttributeValue\",\"directiveLeafAttributeValueMarker\",\"directiveLeafAttributeValueData\",!0)},partial:!0},E={tokenize:function(e,t,n){const r=this;return function(t){return e.enter(\"directiveText\"),e.enter(\"directiveTextMarker\"),e.consume(t),e.exit(\"directiveTextMarker\"),k.call(r,e,i,n,\"directiveTextName\")};function i(t){return 58===t?n(t):91===t?e.attempt(A,o,o)(t):o(t)}function o(t){return 123===t?e.attempt(C,c,c)(t):c(t)}function c(n){return e.exit(\"directiveText\"),t(n)}},previous:function(e){return 58!==e||\"characterEscape\"===this.events[this.events.length-1][1].type}},A={tokenize:function(e,t,n){return v(e,t,n,\"directiveTextLabel\",\"directiveTextLabelMarker\",\"directiveTextLabelString\")},partial:!0},C={tokenize:function(e,t,n){return x(e,t,n,\"directiveTextAttributes\",\"directiveTextAttributesMarker\",\"directiveTextAttribute\",\"directiveTextAttributeId\",\"directiveTextAttributeClass\",\"directiveTextAttributeName\",\"directiveTextAttributeInitializerMarker\",\"directiveTextAttributeValueLiteral\",\"directiveTextAttributeValue\",\"directiveTextAttributeValueMarker\",\"directiveTextAttributeValueData\")},partial:!0};function F(){return{text:{58:E},flow:{58:[y,L]}}}const z={tokenize:function(e,t,n){let r=0;return function t(o){return(87===o||119===o)&&r<3?(r++,e.consume(o),t):46===o&&3===r?(e.consume(o),i):n(o)};function i(e){return null===e?n(e):t(e)}},partial:!0},I={tokenize:function(e,t,n){let r,i,o;return c;function c(t){return 46===t||95===t?e.check(R,a,u)(t):null===t||f(t)||m(t)||45!==t&&d(t)?a(t):(o=!0,e.consume(t),c)}function u(t){return 95===t?r=!0:(i=r,r=void 0),e.consume(t),c}function a(e){return i||r||!o?n(e):t(e)}},partial:!0},M={tokenize:function(e,t){let n=0,r=0;return i;function i(c){return 40===c?(n++,e.consume(c),i):41===c&&r<n?o(c):33===c||34===c||38===c||39===c||41===c||42===c||44===c||46===c||58===c||59===c||60===c||63===c||93===c||95===c||126===c?e.check(R,t,o)(c):null===c||f(c)||m(c)?t(c):(e.consume(c),i)}function o(t){return 41===t&&r++,e.consume(t),i}},partial:!0},R={tokenize:function(e,t,n){return i;function i(r){return 33===r||34===r||39===r||41===r||42===r||44===r||46===r||58===r||59===r||63===r||95===r||126===r?(e.consume(r),i):38===r?(e.consume(r),c):93===r?(e.consume(r),o):60===r||null===r||f(r)||m(r)?t(r):n(r)}function o(e){return null===e||40===e||91===e||f(e)||m(e)?t(e):i(e)}function c(e){return r(e)?u(e):n(e)}function u(t){return 59===t?(e.consume(t),i):r(t)?(e.consume(t),u):n(t)}},partial:!0},O={tokenize:function(e,t,n){return function(t){return e.consume(t),r};function r(e){return i(e)?n(e):t(e)}},partial:!0},P={tokenize:function(e,t,n){const r=this;return function(t){return 87!==t&&119!==t||!H.call(r,r.previous)||W(r.events)?n(t):(e.enter(\"literalAutolink\"),e.enter(\"literalAutolinkWww\"),e.check(z,e.attempt(I,e.attempt(M,i),n),n)(t))};function i(n){return e.exit(\"literalAutolinkWww\"),e.exit(\"literalAutolink\"),t(n)}},previous:H},N={tokenize:function(e,t,n){const i=this;let o=\"\",u=!1;return function(t){return 72!==t&&104!==t||!U.call(i,i.previous)||W(i.events)?n(t):(e.enter(\"literalAutolink\"),e.enter(\"literalAutolinkHttp\"),o+=String.fromCodePoint(t),e.consume(t),a)};function a(t){if(r(t)&&o.length<5)return o+=String.fromCodePoint(t),e.consume(t),a;if(58===t){const n=o.toLowerCase();if(\"http\"===n||\"https\"===n)return e.consume(t),l}return n(t)}function l(t){return 47===t?(e.consume(t),u?s:(u=!0,l)):n(t)}function s(t){return null===t||c(t)||f(t)||m(t)||d(t)?n(t):e.attempt(I,e.attempt(M,p),n)(t)}function p(n){return e.exit(\"literalAutolinkHttp\"),e.exit(\"literalAutolink\"),t(n)}},previous:U},V={tokenize:function(e,t,n){const o=this;let c,u;return function(t){return Q(t)&&G.call(o,o.previous)&&!W(o.events)?(e.enter(\"literalAutolink\"),e.enter(\"literalAutolinkEmail\"),a(t)):n(t)};function a(t){return Q(t)?(e.consume(t),a):64===t?(e.consume(t),l):n(t)}function l(t){return 46===t?e.check(O,f,s)(t):45===t||95===t||i(t)?(u=!0,e.consume(t),l):f(t)}function s(t){return e.consume(t),c=!0,l}function f(i){return u&&c&&r(o.previous)?(e.exit(\"literalAutolinkEmail\"),e.exit(\"literalAutolink\"),t(i)):n(i)}},previous:G},_={};function B(){return{text:_}}let j=48;for(;j<123;)_[j]=V,j++,58===j?j=65:91===j&&(j=97);function H(e){return null===e||40===e||42===e||95===e||91===e||93===e||126===e||f(e)}function U(e){return!r(e)}function G(e){return!(47===e||Q(e))}function Q(e){return 43===e||45===e||46===e||95===e||i(e)}function W(e){let t=e.length,n=!1;for(;t--;){const r=e[t][1];if((\"labelLink\"===r.type||\"labelImage\"===r.type)&&!r._balanced){n=!0;break}if(r._gfmAutolinkLiteralWalkedInto){n=!1;break}}return e.length>0&&!n&&(e[e.length-1][1]._gfmAutolinkLiteralWalkedInto=!0),n}_[43]=V,_[45]=V,_[46]=V,_[95]=V,_[72]=[V,N],_[104]=[V,N],_[87]=[V,P],_[119]=[V,P];const Z={tokenize:function(e,t,n){return function(t){return p(t)?h(e,r,\"linePrefix\")(t):r(t)};function r(e){return null===e||s(e)?t(e):n(e)}},partial:!0};function J(e){return e.replace(/[\\t\\n\\r ]+/g,\" \").replace(/^ | $/g,\"\").toLowerCase().toUpperCase()}const Y={tokenize:function(e,t,n){const r=this;return h(e,(function(e){const i=r.events[r.events.length-1];return i&&\"gfmFootnoteDefinitionIndent\"===i[1].type&&4===i[2].sliceSerialize(i[1],!0).length?t(e):n(e)}),\"gfmFootnoteDefinitionIndent\",5)},partial:!0};function K(){return{document:{91:{tokenize:te,continuation:{tokenize:ne},exit:re}},text:{91:{tokenize:ee},93:{add:\"after\",tokenize:X,resolveTo:$}}}}function X(e,t,n){const r=this;let i=r.events.length;const o=r.parser.gfmFootnotes||(r.parser.gfmFootnotes=[]);let c;for(;i--;){const e=r.events[i][1];if(\"labelImage\"===e.type){c=e;break}if(\"gfmFootnoteCall\"===e.type||\"labelLink\"===e.type||\"label\"===e.type||\"image\"===e.type||\"link\"===e.type)break}return function(i){if(!c||!c._balanced)return n(i);const u=J(r.sliceSerialize({start:c.end,end:r.now()}));return 94===u.codePointAt(0)&&o.includes(u.slice(1))?(e.enter(\"gfmFootnoteCallLabelMarker\"),e.consume(i),e.exit(\"gfmFootnoteCallLabelMarker\"),t(i)):n(i)}}function $(e,t){let n,r=e.length;for(;r--;)if(\"labelImage\"===e[r][1].type&&\"enter\"===e[r][0]){n=e[r][1];break}e[r+1][1].type=\"data\",e[r+3][1].type=\"gfmFootnoteCallLabelMarker\";const i={type:\"gfmFootnoteCall\",start:Object.assign({},e[r+3][1].start),end:Object.assign({},e[e.length-1][1].end)},o={type:\"gfmFootnoteCallMarker\",start:Object.assign({},e[r+3][1].end),end:Object.assign({},e[r+3][1].end)};o.end.column++,o.end.offset++,o.end._bufferIndex++;const c={type:\"gfmFootnoteCallString\",start:Object.assign({},o.end),end:Object.assign({},e[e.length-1][1].start)},u={type:\"chunkString\",contentType:\"string\",start:Object.assign({},c.start),end:Object.assign({},c.end)},a=[e[r+1],e[r+2],[\"enter\",i,t],e[r+3],e[r+4],[\"enter\",o,t],[\"exit\",o,t],[\"enter\",c,t],[\"enter\",u,t],[\"exit\",u,t],[\"exit\",c,t],e[e.length-2],e[e.length-1],[\"exit\",i,t]];return e.splice(r,e.length-r+1,...a),e}function ee(e,t,n){const r=this,i=r.parser.gfmFootnotes||(r.parser.gfmFootnotes=[]);let o,c=0;return function(t){return e.enter(\"gfmFootnoteCall\"),e.enter(\"gfmFootnoteCallLabelMarker\"),e.consume(t),e.exit(\"gfmFootnoteCallLabelMarker\"),u};function u(t){return 94!==t?n(t):(e.enter(\"gfmFootnoteCallMarker\"),e.consume(t),e.exit(\"gfmFootnoteCallMarker\"),e.enter(\"gfmFootnoteCallString\"),e.enter(\"chunkString\").contentType=\"string\",a)}function a(u){if(c>999||93===u&&!o||null===u||91===u||f(u))return n(u);if(93===u){e.exit(\"chunkString\");const o=e.exit(\"gfmFootnoteCallString\");return i.includes(J(r.sliceSerialize(o)))?(e.enter(\"gfmFootnoteCallLabelMarker\"),e.consume(u),e.exit(\"gfmFootnoteCallLabelMarker\"),e.exit(\"gfmFootnoteCall\"),t):n(u)}return f(u)||(o=!0),c++,e.consume(u),92===u?l:a}function l(t){return 91===t||92===t||93===t?(e.consume(t),c++,a):a(t)}}function te(e,t,n){const r=this,i=r.parser.gfmFootnotes||(r.parser.gfmFootnotes=[]);let o,c,u=0;return function(t){return e.enter(\"gfmFootnoteDefinition\")._container=!0,e.enter(\"gfmFootnoteDefinitionLabel\"),e.enter(\"gfmFootnoteDefinitionLabelMarker\"),e.consume(t),e.exit(\"gfmFootnoteDefinitionLabelMarker\"),a};function a(t){return 94===t?(e.enter(\"gfmFootnoteDefinitionMarker\"),e.consume(t),e.exit(\"gfmFootnoteDefinitionMarker\"),e.enter(\"gfmFootnoteDefinitionLabelString\"),e.enter(\"chunkString\").contentType=\"string\",l):n(t)}function l(t){if(u>999||93===t&&!c||null===t||91===t||f(t))return n(t);if(93===t){e.exit(\"chunkString\");const n=e.exit(\"gfmFootnoteDefinitionLabelString\");return o=J(r.sliceSerialize(n)),e.enter(\"gfmFootnoteDefinitionLabelMarker\"),e.consume(t),e.exit(\"gfmFootnoteDefinitionLabelMarker\"),e.exit(\"gfmFootnoteDefinitionLabel\"),p}return f(t)||(c=!0),u++,e.consume(t),92===t?s:l}function s(t){return 91===t||92===t||93===t?(e.consume(t),u++,l):l(t)}function p(t){return 58===t?(e.enter(\"definitionMarker\"),e.consume(t),e.exit(\"definitionMarker\"),i.includes(o)||i.push(o),h(e,d,\"gfmFootnoteDefinitionWhitespace\")):n(t)}function d(e){return t(e)}}function ne(e,t,n){return e.check(Z,t,e.attempt(Y,t,n))}function re(e){e.exit(\"gfmFootnoteDefinition\")}class ie{constructor(){this.map=[]}add(e,t,n){!function(e,t,n,r){let i=0;if(0!==n||0!==r.length){for(;i<e.map.length;){if(e.map[i][0]===t)return e.map[i][1]+=n,void e.map[i][2].push(...r);i+=1}e.map.push([t,n,r])}}(this,e,t,n)}consume(e){if(this.map.sort((function(e,t){return e[0]-t[0]})),0===this.map.length)return;let t=this.map.length;const n=[];for(;t>0;)t-=1,n.push(e.slice(this.map[t][0]+this.map[t][1]),this.map[t][2]),e.length=this.map[t][0];n.push([...e]),e.length=0;let r=n.pop();for(;r;)e.push(...r),r=n.pop();this.map.length=0}}function oe(e,t){let n=!1;const r=[];for(;t<e.length;){const i=e[t];if(n){if(\"enter\"===i[0])\"tableContent\"===i[1].type&&r.push(\"tableDelimiterMarker\"===e[t+1][1].type?\"left\":\"none\");else if(\"tableContent\"===i[1].type){if(\"tableDelimiterMarker\"===e[t-1][1].type){const e=r.length-1;r[e]=\"left\"===r[e]?\"center\":\"right\"}}else if(\"tableDelimiterRow\"===i[1].type)break}else\"enter\"===i[0]&&\"tableDelimiterRow\"===i[1].type&&(n=!0);t+=1}return r}function ce(){return{flow:{null:{tokenize:ue,resolveAll:ae}}}}function ue(e,t,n){const r=this;let i,o=0,c=0;return function(e){let t=r.events.length-1;for(;t>-1;){const e=r.events[t][1].type;if(\"lineEnding\"!==e&&\"linePrefix\"!==e)break;t--}const i=t>-1?r.events[t][1].type:null,o=\"tableHead\"===i||\"tableRow\"===i?S:u;return o===S&&r.parser.lazy[r.now().line]?n(e):o(e)};function u(t){return e.enter(\"tableHead\"),e.enter(\"tableRow\"),function(e){return 124===e||(i=!0,c+=1),a(e)}(t)}function a(t){return null===t?n(t):s(t)?c>1?(c=0,r.interrupt=!0,e.exit(\"tableRow\"),e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),m):n(t):p(t)?h(e,a,\"whitespace\")(t):(c+=1,i&&(i=!1,o+=1),124===t?(e.enter(\"tableCellDivider\"),e.consume(t),e.exit(\"tableCellDivider\"),i=!0,a):(e.enter(\"data\"),l(t)))}function l(t){return null===t||124===t||f(t)?(e.exit(\"data\"),a(t)):(e.consume(t),92===t?d:l)}function d(t){return 92===t||124===t?(e.consume(t),l):l(t)}function m(t){return r.interrupt=!1,r.parser.lazy[r.now().line]?n(t):(e.enter(\"tableDelimiterRow\"),i=!1,p(t)?h(e,g,\"linePrefix\",r.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)(t):g(t))}function g(t){return 45===t||58===t?x(t):124===t?(i=!0,e.enter(\"tableCellDivider\"),e.consume(t),e.exit(\"tableCellDivider\"),b):q(t)}function b(t){return p(t)?h(e,x,\"whitespace\")(t):x(t)}function x(t){return 58===t?(c+=1,i=!0,e.enter(\"tableDelimiterMarker\"),e.consume(t),e.exit(\"tableDelimiterMarker\"),v):45===t?(c+=1,v(t)):null===t||s(t)?w(t):q(t)}function v(t){return 45===t?(e.enter(\"tableDelimiterFiller\"),k(t)):q(t)}function k(t){return 45===t?(e.consume(t),k):58===t?(i=!0,e.exit(\"tableDelimiterFiller\"),e.enter(\"tableDelimiterMarker\"),e.consume(t),e.exit(\"tableDelimiterMarker\"),y):(e.exit(\"tableDelimiterFiller\"),y(t))}function y(t){return p(t)?h(e,w,\"whitespace\")(t):w(t)}function w(n){return 124===n?g(n):(null===n||s(n))&&i&&o===c?(e.exit(\"tableDelimiterRow\"),e.exit(\"tableHead\"),t(n)):q(n)}function q(e){return n(e)}function S(t){return e.enter(\"tableRow\"),L(t)}function L(n){return 124===n?(e.enter(\"tableCellDivider\"),e.consume(n),e.exit(\"tableCellDivider\"),L):null===n||s(n)?(e.exit(\"tableRow\"),t(n)):p(n)?h(e,L,\"whitespace\")(n):(e.enter(\"data\"),T(n))}function T(t){return null===t||124===t||f(t)?(e.exit(\"data\"),L(t)):(e.consume(t),92===t?D:T)}function D(t){return 92===t||124===t?(e.consume(t),T):T(t)}}function ae(e,t){let n,r,i,o=-1,c=!0,u=0,a=[0,0,0,0],l=[0,0,0,0],s=!1,f=0;const p=new ie;for(;++o<e.length;){const d=e[o],m=d[1];\"enter\"===d[0]?\"tableHead\"===m.type?(s=!1,0!==f&&(se(p,t,f,n,r),r=void 0,f=0),n={type:\"table\",start:Object.assign({},m.start),end:Object.assign({},m.end)},p.add(o,0,[[\"enter\",n,t]])):\"tableRow\"===m.type||\"tableDelimiterRow\"===m.type?(c=!0,i=void 0,a=[0,0,0,0],l=[0,o+1,0,0],s&&(s=!1,r={type:\"tableBody\",start:Object.assign({},m.start),end:Object.assign({},m.end)},p.add(o,0,[[\"enter\",r,t]])),u=\"tableDelimiterRow\"===m.type?2:r?3:1):!u||\"data\"!==m.type&&\"tableDelimiterMarker\"!==m.type&&\"tableDelimiterFiller\"!==m.type?\"tableCellDivider\"===m.type&&(c?c=!1:(0!==a[1]&&(l[0]=l[1],i=le(p,t,a,u,void 0,i)),a=l,l=[a[1],o,0,0])):(c=!1,0===l[2]&&(0!==a[1]&&(l[0]=l[1],i=le(p,t,a,u,void 0,i),a=[0,0,0,0]),l[2]=o)):\"tableHead\"===m.type?(s=!0,f=o):\"tableRow\"===m.type||\"tableDelimiterRow\"===m.type?(f=o,0!==a[1]?(l[0]=l[1],i=le(p,t,a,u,o,i)):0!==l[1]&&(i=le(p,t,l,u,o,i)),u=0):!u||\"data\"!==m.type&&\"tableDelimiterMarker\"!==m.type&&\"tableDelimiterFiller\"!==m.type||(l[3]=o)}for(0!==f&&se(p,t,f,n,r),p.consume(t.events),o=-1;++o<t.events.length;){const e=t.events[o];\"enter\"===e[0]&&\"table\"===e[1].type&&(e[1]._align=oe(t.events,o))}return e}function le(e,t,n,r,i,o){const c=1===r?\"tableHeader\":2===r?\"tableDelimiter\":\"tableData\";0!==n[0]&&(o.end=Object.assign({},fe(t.events,n[0])),e.add(n[0],0,[[\"exit\",o,t]]));const u=fe(t.events,n[1]);if(o={type:c,start:Object.assign({},u),end:Object.assign({},u)},e.add(n[1],0,[[\"enter\",o,t]]),0!==n[2]){const i=fe(t.events,n[2]),o=fe(t.events,n[3]),c={type:\"tableContent\",start:Object.assign({},i),end:Object.assign({},o)};if(e.add(n[2],0,[[\"enter\",c,t]]),2!==r){const r=t.events[n[2]],i=t.events[n[3]];if(r[1].end=Object.assign({},i[1].end),r[1].type=\"chunkText\",r[1].contentType=\"text\",n[3]>n[2]+1){const t=n[2]+1,r=n[3]-n[2]-1;e.add(t,r,[])}}e.add(n[3]+1,0,[[\"exit\",c,t]])}return void 0!==i&&(o.end=Object.assign({},fe(t.events,i)),e.add(i,0,[[\"exit\",o,t]]),o=void 0),o}function se(e,t,n,r,i){const o=[],c=fe(t.events,n);i&&(i.end=Object.assign({},c),o.push([\"exit\",i,t])),r.end=Object.assign({},c),o.push([\"exit\",r,t]),e.add(n+1,0,o)}function fe(e,t){const n=e[t],r=\"enter\"===n[0]?\"start\":\"end\";return n[1][r]}const pe={tokenize:function(e,t,n){const r=this,i=r.events[r.events.length-1],o=i&&\"linePrefix\"===i[1].type?i[2].sliceSerialize(i[1],!0).length:0;let c=0;return function(t){return e.enter(\"mathFlow\"),e.enter(\"mathFlowFence\"),e.enter(\"mathFlowFenceSequence\"),u(t)};function u(t){return 36===t?(e.consume(t),c++,u):c<2?n(t):(e.exit(\"mathFlowFenceSequence\"),h(e,a,\"whitespace\")(t))}function a(t){return null===t||s(t)?f(t):(e.enter(\"mathFlowFenceMeta\"),e.enter(\"chunkString\",{contentType:\"string\"}),l(t))}function l(t){return null===t||s(t)?(e.exit(\"chunkString\"),e.exit(\"mathFlowFenceMeta\"),f(t)):36===t?n(t):(e.consume(t),l)}function f(n){return e.exit(\"mathFlowFence\"),r.interrupt?t(n):e.attempt(de,p,b)(n)}function p(t){return e.attempt({tokenize:x,partial:!0},b,d)(t)}function d(t){return(o?h(e,m,\"linePrefix\",o+1):m)(t)}function m(t){return null===t?b(t):s(t)?e.attempt(de,p,b)(t):(e.enter(\"mathFlowValue\"),g(t))}function g(t){return null===t||s(t)?(e.exit(\"mathFlowValue\"),m(t)):(e.consume(t),g)}function b(n){return e.exit(\"mathFlow\"),t(n)}function x(e,t,n){let i=0;return h(e,(function(t){return e.enter(\"mathFlowFence\"),e.enter(\"mathFlowFenceSequence\"),o(t)}),\"linePrefix\",r.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4);function o(t){return 36===t?(i++,e.consume(t),o):i<c?n(t):(e.exit(\"mathFlowFenceSequence\"),h(e,u,\"whitespace\")(t))}function u(r){return null===r||s(r)?(e.exit(\"mathFlowFence\"),t(r)):n(r)}}},concrete:!0},de={tokenize:function(e,t,n){const r=this;return function(n){return null===n?t(n):(e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),i)};function i(e){return r.parser.lazy[r.now().line]?n(e):t(e)}},partial:!0};function me(e){let t=(e||{}).singleDollarTextMath;return null==t&&(t=!0),{tokenize:function(e,n,r){let i,o,c=0;return function(t){return e.enter(\"mathText\"),e.enter(\"mathTextSequence\"),u(t)};function u(n){return 36===n?(e.consume(n),c++,u):c<2&&!t?r(n):(e.exit(\"mathTextSequence\"),a(n))}function a(t){return null===t?r(t):36===t?(o=e.enter(\"mathTextSequence\"),i=0,f(t)):32===t?(e.enter(\"space\"),e.consume(t),e.exit(\"space\"),a):s(t)?(e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),a):(e.enter(\"mathTextData\"),l(t))}function l(t){return null===t||32===t||36===t||s(t)?(e.exit(\"mathTextData\"),a(t)):(e.consume(t),l)}function f(t){return 36===t?(e.consume(t),i++,f):i===c?(e.exit(\"mathTextSequence\"),e.exit(\"mathText\"),n(t)):(o.type=\"mathTextData\",l(t))}},resolve:ge,previous:he}}function ge(e){let t,n,r=e.length-4,i=3;if(!(\"lineEnding\"!==e[i][1].type&&\"space\"!==e[i][1].type||\"lineEnding\"!==e[r][1].type&&\"space\"!==e[r][1].type))for(t=i;++t<r;)if(\"mathTextData\"===e[t][1].type){e[r][1].type=\"mathTextPadding\",e[i][1].type=\"mathTextPadding\",i+=2,r-=2;break}for(t=i-1,r++;++t<=r;)void 0===n?t!==r&&\"lineEnding\"!==e[t][1].type&&(n=t):t!==r&&\"lineEnding\"!==e[t][1].type||(e[n][1].type=\"mathTextData\",t!==n+2&&(e[n][1].end=e[t-1][1].end,e.splice(n+2,t-n-2),r-=t-n-2,t=n+2),n=void 0);return e}function he(e){return 36!==e||\"characterEscape\"===this.events[this.events.length-1][1].type}function be(e){return{flow:{36:pe},text:{36:me(e)}}}function xe(e,t,n,r){const i=e.length;let o,c=0;if(t=t<0?-t>i?0:i+t:t>i?i:t,n=n>0?n:0,r.length<1e4)o=Array.from(r),o.unshift(t,n),e.splice(...o);else for(n&&e.splice(t,n);c<r.length;)o=r.slice(c,c+1e4),o.unshift(t,0),e.splice(...o),c+=1e4,t+=1e4}function ve(e,t){return e.length>0?(xe(e,e.length,0,t),e):t}const ke={}.hasOwnProperty;function ye(e,t){let n;for(n in t){const r=(ke.call(e,n)?e[n]:void 0)||(e[n]={}),i=t[n];let o;if(i)for(o in i){ke.call(r,o)||(r[o]=[]);const e=i[o];we(r[o],Array.isArray(e)?e:e?[e]:[])}}}function we(e,t){let n=-1;const r=[];for(;++n<t.length;)(\"after\"===t[n].add?e:r).push(t[n]);xe(e,0,0,r)}const qe={tokenize:function(e){const t=e.attempt(this.parser.constructs.contentInitial,(function(n){if(null!==n)return e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),h(e,t,\"linePrefix\");e.consume(n)}),(function(t){return e.enter(\"paragraph\"),r(t)}));let n;return t;function r(t){const r=e.enter(\"chunkText\",{contentType:\"text\",previous:n});return n&&(n.next=r),n=r,i(t)}function i(t){return null===t?(e.exit(\"chunkText\"),e.exit(\"paragraph\"),void e.consume(t)):s(t)?(e.consume(t),e.exit(\"chunkText\"),r):(e.consume(t),i)}}},Se={tokenize:function(e){const t=this,n=[];let r,i,o,c=0;return u;function u(r){if(c<n.length){const i=n[c];return t.containerState=i[1],e.attempt(i[0].continuation,a,l)(r)}return l(r)}function a(e){if(c++,t.containerState._closeFlow){t.containerState._closeFlow=void 0,r&&v();const n=t.events.length;let i,o=n;for(;o--;)if(\"exit\"===t.events[o][0]&&\"chunkFlow\"===t.events[o][1].type){i=t.events[o][1].end;break}x(c);let u=n;for(;u<t.events.length;)t.events[u][1].end=Object.assign({},i),u++;return xe(t.events,o+1,0,t.events.slice(n)),t.events.length=u,l(e)}return u(e)}function l(i){if(c===n.length){if(!r)return d(i);if(r.currentConstruct&&r.currentConstruct.concrete)return g(i);t.interrupt=Boolean(r.currentConstruct&&!r._gfmTableDynamicInterruptHack)}return t.containerState={},e.check(Le,f,p)(i)}function f(e){return r&&v(),x(c),d(e)}function p(e){return t.parser.lazy[t.now().line]=c!==n.length,o=t.now().offset,g(e)}function d(n){return t.containerState={},e.attempt(Le,m,g)(n)}function m(e){return c++,n.push([t.currentConstruct,t.containerState]),d(e)}function g(n){return null===n?(r&&v(),x(0),void e.consume(n)):(r=r||t.parser.flow(t.now()),e.enter(\"chunkFlow\",{contentType:\"flow\",previous:i,_tokenizer:r}),h(n))}function h(n){return null===n?(b(e.exit(\"chunkFlow\"),!0),x(0),void e.consume(n)):s(n)?(e.consume(n),b(e.exit(\"chunkFlow\")),c=0,t.interrupt=void 0,u):(e.consume(n),h)}function b(e,n){const u=t.sliceStream(e);if(n&&u.push(null),e.previous=i,i&&(i.next=e),i=e,r.defineSkip(e.start),r.write(u),t.parser.lazy[e.start.line]){let e=r.events.length;for(;e--;)if(r.events[e][1].start.offset<o&&(!r.events[e][1].end||r.events[e][1].end.offset>o))return;const n=t.events.length;let i,u,a=n;for(;a--;)if(\"exit\"===t.events[a][0]&&\"chunkFlow\"===t.events[a][1].type){if(i){u=t.events[a][1].end;break}i=!0}for(x(c),e=n;e<t.events.length;)t.events[e][1].end=Object.assign({},u),e++;xe(t.events,a+1,0,t.events.slice(n)),t.events.length=e}}function x(r){let i=n.length;for(;i-- >r;){const r=n[i];t.containerState=r[1],r[0].exit.call(t,e)}n.length=r}function v(){r.write([null]),i=void 0,r=void 0,t.containerState._closeFlow=void 0}}},Le={tokenize:function(e,t,n){return h(e,e.attempt(this.parser.constructs.document,t,n),\"linePrefix\",this.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)}};function Te(e){const t={};let n,r,i,o,c,u,a,l=-1;for(;++l<e.length;){for(;l in t;)l=t[l];if(n=e[l],l&&\"chunkFlow\"===n[1].type&&\"listItemPrefix\"===e[l-1][1].type&&(u=n[1]._tokenizer.events,i=0,i<u.length&&\"lineEndingBlank\"===u[i][1].type&&(i+=2),i<u.length&&\"content\"===u[i][1].type))for(;++i<u.length&&\"content\"!==u[i][1].type;)\"chunkText\"===u[i][1].type&&(u[i][1]._isInFirstContentOfListItem=!0,i++);if(\"enter\"===n[0])n[1].contentType&&(Object.assign(t,De(e,l)),l=t[l],a=!0);else if(n[1]._container){for(i=l,r=void 0;i--&&(o=e[i],\"lineEnding\"===o[1].type||\"lineEndingBlank\"===o[1].type);)\"enter\"===o[0]&&(r&&(e[r][1].type=\"lineEndingBlank\"),o[1].type=\"lineEnding\",r=i);r&&(n[1].end=Object.assign({},e[r][1].start),c=e.slice(r,l),c.unshift(n),xe(e,r,l-r+1,c))}}return!a}function De(e,t){const n=e[t][1],r=e[t][2];let i=t-1;const o=[],c=n._tokenizer||r.parser[n.contentType](n.start),u=c.events,a=[],l={};let s,f,p=-1,d=n,m=0,g=0;const h=[g];for(;d;){for(;e[++i][1]!==d;);o.push(i),d._tokenizer||(s=r.sliceStream(d),d.next||s.push(null),f&&c.defineSkip(d.start),d._isInFirstContentOfListItem&&(c._gfmTasklistFirstContentOfListItem=!0),c.write(s),d._isInFirstContentOfListItem&&(c._gfmTasklistFirstContentOfListItem=void 0)),f=d,d=d.next}for(d=n;++p<u.length;)\"exit\"===u[p][0]&&\"enter\"===u[p-1][0]&&u[p][1].type===u[p-1][1].type&&u[p][1].start.line!==u[p][1].end.line&&(g=p+1,h.push(g),d._tokenizer=void 0,d.previous=void 0,d=d.next);for(c.events=[],d?(d._tokenizer=void 0,d.previous=void 0):h.pop(),p=h.length;p--;){const t=u.slice(h[p],h[p+1]),n=o.pop();a.unshift([n,n+t.length-1]),xe(e,n,2,t)}for(p=-1;++p<a.length;)l[m+a[p][0]]=m+a[p][1],m+=a[p][1]-a[p][0]-1;return l}const Ee={tokenize:function(e,t){let n;return function(t){return e.enter(\"content\"),n=e.enter(\"chunkContent\",{contentType:\"content\"}),r(t)};function r(t){return null===t?i(t):s(t)?e.check(Ae,o,i)(t):(e.consume(t),r)}function i(n){return e.exit(\"chunkContent\"),e.exit(\"content\"),t(n)}function o(t){return e.consume(t),e.exit(\"chunkContent\"),n.next=e.enter(\"chunkContent\",{contentType:\"content\",previous:n}),n=n.next,r}},resolve:function(e){return Te(e),e}},Ae={tokenize:function(e,t,n){const r=this;return function(t){return e.exit(\"chunkContent\"),e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),h(e,i,\"linePrefix\")};function i(i){if(null===i||s(i))return n(i);const o=r.events[r.events.length-1];return!r.parser.constructs.disable.null.includes(\"codeIndented\")&&o&&\"linePrefix\"===o[1].type&&o[2].sliceSerialize(o[1],!0).length>=4?t(i):e.interrupt(r.parser.constructs.flow,n,t)(i)}},partial:!0},Ce={tokenize:function(e){const t=this,n=e.attempt(Z,(function(r){if(null!==r)return e.enter(\"lineEndingBlank\"),e.consume(r),e.exit(\"lineEndingBlank\"),t.currentConstruct=void 0,n;e.consume(r)}),e.attempt(this.parser.constructs.flowInitial,r,h(e,e.attempt(this.parser.constructs.flow,r,e.attempt(Ee,r)),\"linePrefix\")));return n;function r(r){if(null!==r)return e.enter(\"lineEnding\"),e.consume(r),e.exit(\"lineEnding\"),t.currentConstruct=void 0,n;e.consume(r)}}},Fe={resolveAll:Re()},ze=Me(\"string\"),Ie=Me(\"text\");function Me(e){return{tokenize:function(t){const n=this,r=this.parser.constructs[e],i=t.attempt(r,o,c);return o;function o(e){return a(e)?i(e):c(e)}function c(e){if(null!==e)return t.enter(\"data\"),t.consume(e),u;t.consume(e)}function u(e){return a(e)?(t.exit(\"data\"),i(e)):(t.consume(e),u)}function a(e){if(null===e)return!0;const t=r[e];let i=-1;if(t)for(;++i<t.length;){const e=t[i];if(!e.previous||e.previous.call(n,n.previous))return!0}return!1}},resolveAll:Re(\"text\"===e?Oe:void 0)}}function Re(e){return function(t,n){let r,i=-1;for(;++i<=t.length;)void 0===r?t[i]&&\"data\"===t[i][1].type&&(r=i,i++):t[i]&&\"data\"===t[i][1].type||(i!==r+2&&(t[r][1].end=t[i-1][1].end,t.splice(r+2,i-r-2),i=r+2),r=void 0);return e?e(t,n):t}}function Oe(e,t){let n=0;for(;++n<=e.length;)if((n===e.length||\"lineEnding\"===e[n][1].type)&&\"data\"===e[n-1][1].type){const r=e[n-1][1],i=t.sliceStream(r);let o,c=i.length,u=-1,a=0;for(;c--;){const e=i[c];if(\"string\"==typeof e){for(u=e.length;32===e.charCodeAt(u-1);)a++,u--;if(u)break;u=-1}else if(-2===e)o=!0,a++;else if(-1!==e){c++;break}}if(a){const i={type:n===e.length||o||a<2?\"lineSuffix\":\"hardBreakTrailing\",start:{line:r.end.line,column:r.end.column-a,offset:r.end.offset-a,_index:r.start._index+c,_bufferIndex:c?u:r.start._bufferIndex+u},end:Object.assign({},r.end)};r.end=Object.assign({},i.start),r.start.offset===r.end.offset?Object.assign(r,i):(e.splice(n,0,[\"enter\",i,t],[\"exit\",i,t]),n+=2)}n++}return e}function Pe(e,t,n){const r=[];let i=-1;for(;++i<e.length;){const o=e[i].resolveAll;o&&!r.includes(o)&&(t=o(t,n),r.push(o))}return t}function Ne(e,t,n){let r=Object.assign(n?Object.assign({},n):{line:1,column:1,offset:0},{_index:0,_bufferIndex:-1});const i={},o=[];let c=[],u=[],a=!0;const l={consume:function(e){s(e)?(r.line++,r.column=1,r.offset+=-3===e?2:1,k()):-1!==e&&(r.column++,r.offset++),r._bufferIndex<0?r._index++:(r._bufferIndex++,r._bufferIndex===c[r._index].length&&(r._bufferIndex=-1,r._index++)),f.previous=e,a=!0},enter:function(e,t){const n=t||{};return n.type=e,n.start=g(),f.events.push([\"enter\",n,f]),u.push(n),n},exit:function(e){const t=u.pop();return t.end=g(),f.events.push([\"exit\",t,f]),t},attempt:x((function(e,t){v(e,t.from)})),check:x(b),interrupt:x(b,{interrupt:!0})},f={previous:null,code:null,containerState:{},events:[],parser:e,sliceStream:m,sliceSerialize:function(e,t){return function(e,t){let n=-1;const r=[];let i;for(;++n<e.length;){const o=e[n];let c;if(\"string\"==typeof o)c=o;else switch(o){case-5:c=\"\\r\";break;case-4:c=\"\\n\";break;case-3:c=\"\\r\\n\";break;case-2:c=t?\" \":\"\\t\";break;case-1:if(!t&&i)continue;c=\" \";break;default:c=String.fromCharCode(o)}i=-2===o,r.push(c)}return r.join(\"\")}(m(e),t)},now:g,defineSkip:function(e){i[e.line]=e.column,k()},write:function(e){return c=ve(c,e),function(){let e;for(;r._index<c.length;){const t=c[r._index];if(\"string\"==typeof t)for(e=r._index,r._bufferIndex<0&&(r._bufferIndex=0);r._index===e&&r._bufferIndex<t.length;)h(t.charCodeAt(r._bufferIndex));else h(t)}}(),null!==c[c.length-1]?[]:(v(t,0),f.events=Pe(o,f.events,f),f.events)}};let p,d=t.tokenize.call(f,l);return t.resolveAll&&o.push(t),f;function m(e){return function(e,t){const n=t.start._index,r=t.start._bufferIndex,i=t.end._index,o=t.end._bufferIndex;let c;if(n===i)c=[e[n].slice(r,o)];else{if(c=e.slice(n,i),r>-1){const e=c[0];\"string\"==typeof e?c[0]=e.slice(r):c.shift()}o>0&&c.push(e[i].slice(0,o))}return c}(c,e)}function g(){const{line:e,column:t,offset:n,_index:i,_bufferIndex:o}=r;return{line:e,column:t,offset:n,_index:i,_bufferIndex:o}}function h(e){a=void 0,p=e,d=d(e)}function b(e,t){t.restore()}function x(e,t){return function(n,i,o){let c,s,p,d;return Array.isArray(n)?h(n):\"tokenize\"in n?h([n]):(m=n,function(e){const t=null!==e&&m[e],n=null!==e&&m.null;return h([...Array.isArray(t)?t:t?[t]:[],...Array.isArray(n)?n:n?[n]:[]])(e)});var m;function h(e){return c=e,s=0,0===e.length?o:b(e[s])}function b(e){return function(n){return d=function(){const e=g(),t=f.previous,n=f.currentConstruct,i=f.events.length,o=Array.from(u);return{restore:function(){r=e,f.previous=t,f.currentConstruct=n,f.events.length=i,u=o,k()},from:i}}(),p=e,e.partial||(f.currentConstruct=e),e.name&&f.parser.constructs.disable.null.includes(e.name)?v():e.tokenize.call(t?Object.assign(Object.create(f),t):f,l,x,v)(n)}}function x(t){return a=!0,e(p,d),i}function v(e){return a=!0,d.restore(),++s<c.length?b(c[s]):o}}}function v(e,t){e.resolveAll&&!o.includes(e)&&o.push(e),e.resolve&&xe(f.events,t,f.events.length-t,e.resolve(f.events.slice(t),f)),e.resolveTo&&(f.events=e.resolveTo(f.events,f))}function k(){r.line in i&&r.column<2&&(r.column=i[r.line],r.offset+=i[r.line]-1)}}const Ve={name:\"thematicBreak\",tokenize:function(e,t,n){let r,i=0;return function(t){return e.enter(\"thematicBreak\"),function(e){return r=e,o(e)}(t)};function o(o){return o===r?(e.enter(\"thematicBreakSequence\"),c(o)):i>=3&&(null===o||s(o))?(e.exit(\"thematicBreak\"),t(o)):n(o)}function c(t){return t===r?(e.consume(t),i++,c):(e.exit(\"thematicBreakSequence\"),p(t)?h(e,o,\"whitespace\")(t):o(t))}}},_e={name:\"list\",tokenize:function(e,t,n){const r=this,i=r.events[r.events.length-1];let o=i&&\"linePrefix\"===i[1].type?i[2].sliceSerialize(i[1],!0).length:0,c=0;return function(t){const i=r.containerState.type||(42===t||43===t||45===t?\"listUnordered\":\"listOrdered\");if(\"listUnordered\"===i?!r.containerState.marker||t===r.containerState.marker:u(t)){if(r.containerState.type||(r.containerState.type=i,e.enter(i,{_container:!0})),\"listUnordered\"===i)return e.enter(\"listItemPrefix\"),42===t||45===t?e.check(Ve,n,l)(t):l(t);if(!r.interrupt||49===t)return e.enter(\"listItemPrefix\"),e.enter(\"listItemValue\"),a(t)}return n(t)};function a(t){return u(t)&&++c<10?(e.consume(t),a):(!r.interrupt||c<2)&&(r.containerState.marker?t===r.containerState.marker:41===t||46===t)?(e.exit(\"listItemValue\"),l(t)):n(t)}function l(t){return e.enter(\"listItemMarker\"),e.consume(t),e.exit(\"listItemMarker\"),r.containerState.marker=r.containerState.marker||t,e.check(Z,r.interrupt?n:s,e.attempt(Be,d,f))}function s(e){return r.containerState.initialBlankLine=!0,o++,d(e)}function f(t){return p(t)?(e.enter(\"listItemPrefixWhitespace\"),e.consume(t),e.exit(\"listItemPrefixWhitespace\"),d):n(t)}function d(n){return r.containerState.size=o+r.sliceSerialize(e.exit(\"listItemPrefix\"),!0).length,t(n)}},continuation:{tokenize:function(e,t,n){const r=this;return r.containerState._closeFlow=void 0,e.check(Z,(function(n){return r.containerState.furtherBlankLines=r.containerState.furtherBlankLines||r.containerState.initialBlankLine,h(e,t,\"listItemIndent\",r.containerState.size+1)(n)}),(function(n){return r.containerState.furtherBlankLines||!p(n)?(r.containerState.furtherBlankLines=void 0,r.containerState.initialBlankLine=void 0,i(n)):(r.containerState.furtherBlankLines=void 0,r.containerState.initialBlankLine=void 0,e.attempt(je,t,i)(n))}));function i(i){return r.containerState._closeFlow=!0,r.interrupt=void 0,h(e,e.attempt(_e,t,n),\"linePrefix\",r.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)(i)}}},exit:function(e){e.exit(this.containerState.type)}},Be={tokenize:function(e,t,n){const r=this;return h(e,(function(e){const i=r.events[r.events.length-1];return!p(e)&&i&&\"listItemPrefixWhitespace\"===i[1].type?t(e):n(e)}),\"listItemPrefixWhitespace\",r.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:5)},partial:!0},je={tokenize:function(e,t,n){const r=this;return h(e,(function(e){const i=r.events[r.events.length-1];return i&&\"listItemIndent\"===i[1].type&&i[2].sliceSerialize(i[1],!0).length===r.containerState.size?t(e):n(e)}),\"listItemIndent\",r.containerState.size+1)},partial:!0},He={name:\"blockQuote\",tokenize:function(e,t,n){const r=this;return function(t){if(62===t){const n=r.containerState;return n.open||(e.enter(\"blockQuote\",{_container:!0}),n.open=!0),e.enter(\"blockQuotePrefix\"),e.enter(\"blockQuoteMarker\"),e.consume(t),e.exit(\"blockQuoteMarker\"),i}return n(t)};function i(n){return p(n)?(e.enter(\"blockQuotePrefixWhitespace\"),e.consume(n),e.exit(\"blockQuotePrefixWhitespace\"),e.exit(\"blockQuotePrefix\"),t):(e.exit(\"blockQuotePrefix\"),t(n))}},continuation:{tokenize:function(e,t,n){const r=this;return function(t){return p(t)?h(e,i,\"linePrefix\",r.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)(t):i(t)};function i(r){return e.attempt(He,t,n)(r)}}},exit:function(e){e.exit(\"blockQuote\")}};function Ue(e,t,n,r,i,o,u,a,l){const p=l||Number.POSITIVE_INFINITY;let d=0;return function(t){return 60===t?(e.enter(r),e.enter(i),e.enter(o),e.consume(t),e.exit(o),m):null===t||32===t||41===t||c(t)?n(t):(e.enter(r),e.enter(u),e.enter(a),e.enter(\"chunkString\",{contentType:\"string\"}),b(t))};function m(n){return 62===n?(e.enter(o),e.consume(n),e.exit(o),e.exit(i),e.exit(r),t):(e.enter(a),e.enter(\"chunkString\",{contentType:\"string\"}),g(n))}function g(t){return 62===t?(e.exit(\"chunkString\"),e.exit(a),m(t)):null===t||60===t||s(t)?n(t):(e.consume(t),92===t?h:g)}function h(t){return 60===t||62===t||92===t?(e.consume(t),g):g(t)}function b(i){return d||null!==i&&41!==i&&!f(i)?d<p&&40===i?(e.consume(i),d++,b):41===i?(e.consume(i),d--,b):null===i||32===i||40===i||c(i)?n(i):(e.consume(i),92===i?x:b):(e.exit(\"chunkString\"),e.exit(a),e.exit(u),e.exit(r),t(i))}function x(t){return 40===t||41===t||92===t?(e.consume(t),b):b(t)}}function Ge(e,t,n,r,i,o){const c=this;let u,a=0;return function(t){return e.enter(r),e.enter(i),e.consume(t),e.exit(i),e.enter(o),l};function l(p){return a>999||null===p||91===p||93===p&&!u||94===p&&!a&&\"_hiddenFootnoteSupport\"in c.parser.constructs?n(p):93===p?(e.exit(o),e.enter(i),e.consume(p),e.exit(i),e.exit(r),t):s(p)?(e.enter(\"lineEnding\"),e.consume(p),e.exit(\"lineEnding\"),l):(e.enter(\"chunkString\",{contentType:\"string\"}),f(p))}function f(t){return null===t||91===t||93===t||s(t)||a++>999?(e.exit(\"chunkString\"),l(t)):(e.consume(t),u||(u=!p(t)),92===t?d:f)}function d(t){return 91===t||92===t||93===t?(e.consume(t),a++,f):f(t)}}function Qe(e,t,n,r,i,o){let c;return function(t){return 34===t||39===t||40===t?(e.enter(r),e.enter(i),e.consume(t),e.exit(i),c=40===t?41:t,u):n(t)};function u(n){return n===c?(e.enter(i),e.consume(n),e.exit(i),e.exit(r),t):(e.enter(o),a(n))}function a(t){return t===c?(e.exit(o),u(c)):null===t?n(t):s(t)?(e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),h(e,a,\"linePrefix\")):(e.enter(\"chunkString\",{contentType:\"string\"}),l(t))}function l(t){return t===c||null===t||s(t)?(e.exit(\"chunkString\"),a(t)):(e.consume(t),92===t?f:l)}function f(t){return t===c||92===t?(e.consume(t),l):l(t)}}const We={name:\"definition\",tokenize:function(e,t,n){const r=this;let i;return function(t){return e.enter(\"definition\"),function(t){return Ge.call(r,e,o,n,\"definitionLabel\",\"definitionLabelMarker\",\"definitionLabelString\")(t)}(t)};function o(t){return i=J(r.sliceSerialize(r.events[r.events.length-1][1]).slice(1,-1)),58===t?(e.enter(\"definitionMarker\"),e.consume(t),e.exit(\"definitionMarker\"),c):n(t)}function c(t){return f(t)?b(e,u)(t):u(t)}function u(t){return Ue(e,a,n,\"definitionDestination\",\"definitionDestinationLiteral\",\"definitionDestinationLiteralMarker\",\"definitionDestinationRaw\",\"definitionDestinationString\")(t)}function a(t){return e.attempt(Ze,l,l)(t)}function l(t){return p(t)?h(e,d,\"whitespace\")(t):d(t)}function d(o){return null===o||s(o)?(e.exit(\"definition\"),r.parser.defined.push(i),t(o)):n(o)}}},Ze={tokenize:function(e,t,n){return function(t){return f(t)?b(e,r)(t):n(t)};function r(t){return Qe(e,i,n,\"definitionTitle\",\"definitionTitleMarker\",\"definitionTitleString\")(t)}function i(t){return p(t)?h(e,o,\"whitespace\")(t):o(t)}function o(e){return null===e||s(e)?t(e):n(e)}},partial:!0},Je={name:\"codeIndented\",tokenize:function(e,t,n){const r=this;return function(t){return e.enter(\"codeIndented\"),h(e,i,\"linePrefix\",5)(t)};function i(e){const t=r.events[r.events.length-1];return t&&\"linePrefix\"===t[1].type&&t[2].sliceSerialize(t[1],!0).length>=4?o(e):n(e)}function o(t){return null===t?u(t):s(t)?e.attempt(Ye,o,u)(t):(e.enter(\"codeFlowValue\"),c(t))}function c(t){return null===t||s(t)?(e.exit(\"codeFlowValue\"),o(t)):(e.consume(t),c)}function u(n){return e.exit(\"codeIndented\"),t(n)}}},Ye={tokenize:function(e,t,n){const r=this;return i;function i(t){return r.parser.lazy[r.now().line]?n(t):s(t)?(e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),i):h(e,o,\"linePrefix\",5)(t)}function o(e){const o=r.events[r.events.length-1];return o&&\"linePrefix\"===o[1].type&&o[2].sliceSerialize(o[1],!0).length>=4?t(e):s(e)?i(e):n(e)}},partial:!0},Ke={name:\"headingAtx\",tokenize:function(e,t,n){let r=0;return function(t){return e.enter(\"atxHeading\"),function(t){return e.enter(\"atxHeadingSequence\"),i(t)}(t)};function i(t){return 35===t&&r++<6?(e.consume(t),i):null===t||f(t)?(e.exit(\"atxHeadingSequence\"),o(t)):n(t)}function o(n){return 35===n?(e.enter(\"atxHeadingSequence\"),c(n)):null===n||s(n)?(e.exit(\"atxHeading\"),t(n)):p(n)?h(e,o,\"whitespace\")(n):(e.enter(\"atxHeadingText\"),u(n))}function c(t){return 35===t?(e.consume(t),c):(e.exit(\"atxHeadingSequence\"),o(t))}function u(t){return null===t||35===t||f(t)?(e.exit(\"atxHeadingText\"),o(t)):(e.consume(t),u)}},resolve:function(e,t){let n,r,i=e.length-2,o=3;return\"whitespace\"===e[o][1].type&&(o+=2),i-2>o&&\"whitespace\"===e[i][1].type&&(i-=2),\"atxHeadingSequence\"===e[i][1].type&&(o===i-1||i-4>o&&\"whitespace\"===e[i-2][1].type)&&(i-=o+1===i?2:4),i>o&&(n={type:\"atxHeadingText\",start:e[o][1].start,end:e[i][1].end},r={type:\"chunkText\",start:e[o][1].start,end:e[i][1].end,contentType:\"text\"},xe(e,o,i-o+1,[[\"enter\",n,t],[\"enter\",r,t],[\"exit\",r,t],[\"exit\",n,t]])),e}},Xe={name:\"setextUnderline\",tokenize:function(e,t,n){const r=this;let i;return function(t){let c,u=r.events.length;for(;u--;)if(\"lineEnding\"!==r.events[u][1].type&&\"linePrefix\"!==r.events[u][1].type&&\"content\"!==r.events[u][1].type){c=\"paragraph\"===r.events[u][1].type;break}return r.parser.lazy[r.now().line]||!r.interrupt&&!c?n(t):(e.enter(\"setextHeadingLine\"),i=t,function(t){return e.enter(\"setextHeadingLineSequence\"),o(t)}(t))};function o(t){return t===i?(e.consume(t),o):(e.exit(\"setextHeadingLineSequence\"),p(t)?h(e,c,\"lineSuffix\")(t):c(t))}function c(r){return null===r||s(r)?(e.exit(\"setextHeadingLine\"),t(r)):n(r)}},resolveTo:function(e,t){let n,r,i,o=e.length;for(;o--;)if(\"enter\"===e[o][0]){if(\"content\"===e[o][1].type){n=o;break}\"paragraph\"===e[o][1].type&&(r=o)}else\"content\"===e[o][1].type&&e.splice(o,1),i||\"definition\"!==e[o][1].type||(i=o);const c={type:\"setextHeading\",start:Object.assign({},e[r][1].start),end:Object.assign({},e[e.length-1][1].end)};return e[r][1].type=\"setextHeadingText\",i?(e.splice(r,0,[\"enter\",c,t]),e.splice(i+1,0,[\"exit\",e[n][1],t]),e[n][1].end=Object.assign({},e[i][1].end)):e[n][1]=c,e.push([\"exit\",c,t]),e}},$e=[\"address\",\"article\",\"aside\",\"base\",\"basefont\",\"blockquote\",\"body\",\"caption\",\"center\",\"col\",\"colgroup\",\"dd\",\"details\",\"dialog\",\"dir\",\"div\",\"dl\",\"dt\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"frame\",\"frameset\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hr\",\"html\",\"iframe\",\"legend\",\"li\",\"link\",\"main\",\"menu\",\"menuitem\",\"nav\",\"noframes\",\"ol\",\"optgroup\",\"option\",\"p\",\"param\",\"search\",\"section\",\"summary\",\"table\",\"tbody\",\"td\",\"tfoot\",\"th\",\"thead\",\"title\",\"tr\",\"track\",\"ul\"],et=[\"pre\",\"script\",\"style\",\"textarea\"],tt={name:\"htmlFlow\",tokenize:function(e,t,n){const o=this;let c,u,a,l,d;return function(t){return function(t){return e.enter(\"htmlFlow\"),e.enter(\"htmlFlowData\"),e.consume(t),m}(t)};function m(i){return 33===i?(e.consume(i),g):47===i?(e.consume(i),u=!0,x):63===i?(e.consume(i),c=3,o.interrupt?t:V):r(i)?(e.consume(i),a=String.fromCharCode(i),v):n(i)}function g(i){return 45===i?(e.consume(i),c=2,h):91===i?(e.consume(i),c=5,l=0,b):r(i)?(e.consume(i),c=4,o.interrupt?t:V):n(i)}function h(r){return 45===r?(e.consume(r),o.interrupt?t:V):n(r)}function b(r){return r===\"CDATA[\".charCodeAt(l++)?(e.consume(r),6===l?o.interrupt?t:F:b):n(r)}function x(t){return r(t)?(e.consume(t),a=String.fromCharCode(t),v):n(t)}function v(r){if(null===r||47===r||62===r||f(r)){const i=47===r,l=a.toLowerCase();return i||u||!et.includes(l)?$e.includes(a.toLowerCase())?(c=6,i?(e.consume(r),k):o.interrupt?t(r):F(r)):(c=7,o.interrupt&&!o.parser.lazy[o.now().line]?n(r):u?y(r):w(r)):(c=1,o.interrupt?t(r):F(r))}return 45===r||i(r)?(e.consume(r),a+=String.fromCharCode(r),v):n(r)}function k(r){return 62===r?(e.consume(r),o.interrupt?t:F):n(r)}function y(t){return p(t)?(e.consume(t),y):A(t)}function w(t){return 47===t?(e.consume(t),A):58===t||95===t||r(t)?(e.consume(t),q):p(t)?(e.consume(t),w):A(t)}function q(t){return 45===t||46===t||58===t||95===t||i(t)?(e.consume(t),q):S(t)}function S(t){return 61===t?(e.consume(t),L):p(t)?(e.consume(t),S):w(t)}function L(t){return null===t||60===t||61===t||62===t||96===t?n(t):34===t||39===t?(e.consume(t),d=t,T):p(t)?(e.consume(t),L):D(t)}function T(t){return t===d?(e.consume(t),d=null,E):null===t||s(t)?n(t):(e.consume(t),T)}function D(t){return null===t||34===t||39===t||47===t||60===t||61===t||62===t||96===t||f(t)?S(t):(e.consume(t),D)}function E(e){return 47===e||62===e||p(e)?w(e):n(e)}function A(t){return 62===t?(e.consume(t),C):n(t)}function C(t){return null===t||s(t)?F(t):p(t)?(e.consume(t),C):n(t)}function F(t){return 45===t&&2===c?(e.consume(t),R):60===t&&1===c?(e.consume(t),O):62===t&&4===c?(e.consume(t),_):63===t&&3===c?(e.consume(t),V):93===t&&5===c?(e.consume(t),N):!s(t)||6!==c&&7!==c?null===t||s(t)?(e.exit(\"htmlFlowData\"),z(t)):(e.consume(t),F):(e.exit(\"htmlFlowData\"),e.check(nt,B,z)(t))}function z(t){return e.check(rt,I,B)(t)}function I(t){return e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),M}function M(t){return null===t||s(t)?z(t):(e.enter(\"htmlFlowData\"),F(t))}function R(t){return 45===t?(e.consume(t),V):F(t)}function O(t){return 47===t?(e.consume(t),a=\"\",P):F(t)}function P(t){if(62===t){const n=a.toLowerCase();return et.includes(n)?(e.consume(t),_):F(t)}return r(t)&&a.length<8?(e.consume(t),a+=String.fromCharCode(t),P):F(t)}function N(t){return 93===t?(e.consume(t),V):F(t)}function V(t){return 62===t?(e.consume(t),_):45===t&&2===c?(e.consume(t),V):F(t)}function _(t){return null===t||s(t)?(e.exit(\"htmlFlowData\"),B(t)):(e.consume(t),_)}function B(n){return e.exit(\"htmlFlow\"),t(n)}},resolveTo:function(e){let t=e.length;for(;t--&&(\"enter\"!==e[t][0]||\"htmlFlow\"!==e[t][1].type););return t>1&&\"linePrefix\"===e[t-2][1].type&&(e[t][1].start=e[t-2][1].start,e[t+1][1].start=e[t-2][1].start,e.splice(t-2,2)),e},concrete:!0},nt={tokenize:function(e,t,n){return function(r){return e.enter(\"lineEnding\"),e.consume(r),e.exit(\"lineEnding\"),e.attempt(Z,t,n)}},partial:!0},rt={tokenize:function(e,t,n){const r=this;return function(t){return s(t)?(e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),i):n(t)};function i(e){return r.parser.lazy[r.now().line]?n(e):t(e)}},partial:!0},it={tokenize:function(e,t,n){const r=this;return function(t){return null===t?n(t):(e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),i)};function i(e){return r.parser.lazy[r.now().line]?n(e):t(e)}},partial:!0},ot={name:\"codeFenced\",tokenize:function(e,t,n){const r=this,i={tokenize:function(e,t,n){let i=0;return function(t){return e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),c};function c(t){return e.enter(\"codeFencedFence\"),p(t)?h(e,a,\"linePrefix\",r.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)(t):a(t)}function a(t){return t===o?(e.enter(\"codeFencedFenceSequence\"),l(t)):n(t)}function l(t){return t===o?(i++,e.consume(t),l):i>=u?(e.exit(\"codeFencedFenceSequence\"),p(t)?h(e,f,\"whitespace\")(t):f(t)):n(t)}function f(r){return null===r||s(r)?(e.exit(\"codeFencedFence\"),t(r)):n(r)}},partial:!0};let o,c=0,u=0;return function(t){return function(t){const n=r.events[r.events.length-1];return c=n&&\"linePrefix\"===n[1].type?n[2].sliceSerialize(n[1],!0).length:0,o=t,e.enter(\"codeFenced\"),e.enter(\"codeFencedFence\"),e.enter(\"codeFencedFenceSequence\"),a(t)}(t)};function a(t){return t===o?(u++,e.consume(t),a):u<3?n(t):(e.exit(\"codeFencedFenceSequence\"),p(t)?h(e,l,\"whitespace\")(t):l(t))}function l(n){return null===n||s(n)?(e.exit(\"codeFencedFence\"),r.interrupt?t(n):e.check(it,g,y)(n)):(e.enter(\"codeFencedFenceInfo\"),e.enter(\"chunkString\",{contentType:\"string\"}),f(n))}function f(t){return null===t||s(t)?(e.exit(\"chunkString\"),e.exit(\"codeFencedFenceInfo\"),l(t)):p(t)?(e.exit(\"chunkString\"),e.exit(\"codeFencedFenceInfo\"),h(e,d,\"whitespace\")(t)):96===t&&t===o?n(t):(e.consume(t),f)}function d(t){return null===t||s(t)?l(t):(e.enter(\"codeFencedFenceMeta\"),e.enter(\"chunkString\",{contentType:\"string\"}),m(t))}function m(t){return null===t||s(t)?(e.exit(\"chunkString\"),e.exit(\"codeFencedFenceMeta\"),l(t)):96===t&&t===o?n(t):(e.consume(t),m)}function g(t){return e.attempt(i,y,b)(t)}function b(t){return e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),x}function x(t){return c>0&&p(t)?h(e,v,\"linePrefix\",c+1)(t):v(t)}function v(t){return null===t||s(t)?e.check(it,g,y)(t):(e.enter(\"codeFlowValue\"),k(t))}function k(t){return null===t||s(t)?(e.exit(\"codeFlowValue\"),v(t)):(e.consume(t),k)}function y(n){return e.exit(\"codeFenced\"),t(n)}},concrete:!0},ct={AElig:\"\u00C6\",AMP:\"&\",Aacute:\"\u00C1\",Abreve:\"\u0102\",Acirc:\"\u00C2\",Acy:\"\u0410\",Afr:\"\uD835\uDD04\",Agrave:\"\u00C0\",Alpha:\"\u0391\",Amacr:\"\u0100\",And:\"\u2A53\",Aogon:\"\u0104\",Aopf:\"\uD835\uDD38\",ApplyFunction:\"\u2061\",Aring:\"\u00C5\",Ascr:\"\uD835\uDC9C\",Assign:\"\u2254\",Atilde:\"\u00C3\",Auml:\"\u00C4\",Backslash:\"\u2216\",Barv:\"\u2AE7\",Barwed:\"\u2306\",Bcy:\"\u0411\",Because:\"\u2235\",Bernoullis:\"\u212C\",Beta:\"\u0392\",Bfr:\"\uD835\uDD05\",Bopf:\"\uD835\uDD39\",Breve:\"\u02D8\",Bscr:\"\u212C\",Bumpeq:\"\u224E\",CHcy:\"\u0427\",COPY:\"\u00A9\",Cacute:\"\u0106\",Cap:\"\u22D2\",CapitalDifferentialD:\"\u2145\",Cayleys:\"\u212D\",Ccaron:\"\u010C\",Ccedil:\"\u00C7\",Ccirc:\"\u0108\",Cconint:\"\u2230\",Cdot:\"\u010A\",Cedilla:\"\u00B8\",CenterDot:\"\u00B7\",Cfr:\"\u212D\",Chi:\"\u03A7\",CircleDot:\"\u2299\",CircleMinus:\"\u2296\",CirclePlus:\"\u2295\",CircleTimes:\"\u2297\",ClockwiseContourIntegral:\"\u2232\",CloseCurlyDoubleQuote:\"\u201D\",CloseCurlyQuote:\"\u2019\",Colon:\"\u2237\",Colone:\"\u2A74\",Congruent:\"\u2261\",Conint:\"\u222F\",ContourIntegral:\"\u222E\",Copf:\"\u2102\",Coproduct:\"\u2210\",CounterClockwiseContourIntegral:\"\u2233\",Cross:\"\u2A2F\",Cscr:\"\uD835\uDC9E\",Cup:\"\u22D3\",CupCap:\"\u224D\",DD:\"\u2145\",DDotrahd:\"\u2911\",DJcy:\"\u0402\",DScy:\"\u0405\",DZcy:\"\u040F\",Dagger:\"\u2021\",Darr:\"\u21A1\",Dashv:\"\u2AE4\",Dcaron:\"\u010E\",Dcy:\"\u0414\",Del:\"\u2207\",Delta:\"\u0394\",Dfr:\"\uD835\uDD07\",DiacriticalAcute:\"\u00B4\",DiacriticalDot:\"\u02D9\",DiacriticalDoubleAcute:\"\u02DD\",DiacriticalGrave:\"`\",DiacriticalTilde:\"\u02DC\",Diamond:\"\u22C4\",DifferentialD:\"\u2146\",Dopf:\"\uD835\uDD3B\",Dot:\"\u00A8\",DotDot:\"\u20DC\",DotEqual:\"\u2250\",DoubleContourIntegral:\"\u222F\",DoubleDot:\"\u00A8\",DoubleDownArrow:\"\u21D3\",DoubleLeftArrow:\"\u21D0\",DoubleLeftRightArrow:\"\u21D4\",DoubleLeftTee:\"\u2AE4\",DoubleLongLeftArrow:\"\u27F8\",DoubleLongLeftRightArrow:\"\u27FA\",DoubleLongRightArrow:\"\u27F9\",DoubleRightArrow:\"\u21D2\",DoubleRightTee:\"\u22A8\",DoubleUpArrow:\"\u21D1\",DoubleUpDownArrow:\"\u21D5\",DoubleVerticalBar:\"\u2225\",DownArrow:\"\u2193\",DownArrowBar:\"\u2913\",DownArrowUpArrow:\"\u21F5\",DownBreve:\"\u0311\",DownLeftRightVector:\"\u2950\",DownLeftTeeVector:\"\u295E\",DownLeftVector:\"\u21BD\",DownLeftVectorBar:\"\u2956\",DownRightTeeVector:\"\u295F\",DownRightVector:\"\u21C1\",DownRightVectorBar:\"\u2957\",DownTee:\"\u22A4\",DownTeeArrow:\"\u21A7\",Downarrow:\"\u21D3\",Dscr:\"\uD835\uDC9F\",Dstrok:\"\u0110\",ENG:\"\u014A\",ETH:\"\u00D0\",Eacute:\"\u00C9\",Ecaron:\"\u011A\",Ecirc:\"\u00CA\",Ecy:\"\u042D\",Edot:\"\u0116\",Efr:\"\uD835\uDD08\",Egrave:\"\u00C8\",Element:\"\u2208\",Emacr:\"\u0112\",EmptySmallSquare:\"\u25FB\",EmptyVerySmallSquare:\"\u25AB\",Eogon:\"\u0118\",Eopf:\"\uD835\uDD3C\",Epsilon:\"\u0395\",Equal:\"\u2A75\",EqualTilde:\"\u2242\",Equilibrium:\"\u21CC\",Escr:\"\u2130\",Esim:\"\u2A73\",Eta:\"\u0397\",Euml:\"\u00CB\",Exists:\"\u2203\",ExponentialE:\"\u2147\",Fcy:\"\u0424\",Ffr:\"\uD835\uDD09\",FilledSmallSquare:\"\u25FC\",FilledVerySmallSquare:\"\u25AA\",Fopf:\"\uD835\uDD3D\",ForAll:\"\u2200\",Fouriertrf:\"\u2131\",Fscr:\"\u2131\",GJcy:\"\u0403\",GT:\">\",Gamma:\"\u0393\",Gammad:\"\u03DC\",Gbreve:\"\u011E\",Gcedil:\"\u0122\",Gcirc:\"\u011C\",Gcy:\"\u0413\",Gdot:\"\u0120\",Gfr:\"\uD835\uDD0A\",Gg:\"\u22D9\",Gopf:\"\uD835\uDD3E\",GreaterEqual:\"\u2265\",GreaterEqualLess:\"\u22DB\",GreaterFullEqual:\"\u2267\",GreaterGreater:\"\u2AA2\",GreaterLess:\"\u2277\",GreaterSlantEqual:\"\u2A7E\",GreaterTilde:\"\u2273\",Gscr:\"\uD835\uDCA2\",Gt:\"\u226B\",HARDcy:\"\u042A\",Hacek:\"\u02C7\",Hat:\"^\",Hcirc:\"\u0124\",Hfr:\"\u210C\",HilbertSpace:\"\u210B\",Hopf:\"\u210D\",HorizontalLine:\"\u2500\",Hscr:\"\u210B\",Hstrok:\"\u0126\",HumpDownHump:\"\u224E\",HumpEqual:\"\u224F\",IEcy:\"\u0415\",IJlig:\"\u0132\",IOcy:\"\u0401\",Iacute:\"\u00CD\",Icirc:\"\u00CE\",Icy:\"\u0418\",Idot:\"\u0130\",Ifr:\"\u2111\",Igrave:\"\u00CC\",Im:\"\u2111\",Imacr:\"\u012A\",ImaginaryI:\"\u2148\",Implies:\"\u21D2\",Int:\"\u222C\",Integral:\"\u222B\",Intersection:\"\u22C2\",InvisibleComma:\"\u2063\",InvisibleTimes:\"\u2062\",Iogon:\"\u012E\",Iopf:\"\uD835\uDD40\",Iota:\"\u0399\",Iscr:\"\u2110\",Itilde:\"\u0128\",Iukcy:\"\u0406\",Iuml:\"\u00CF\",Jcirc:\"\u0134\",Jcy:\"\u0419\",Jfr:\"\uD835\uDD0D\",Jopf:\"\uD835\uDD41\",Jscr:\"\uD835\uDCA5\",Jsercy:\"\u0408\",Jukcy:\"\u0404\",KHcy:\"\u0425\",KJcy:\"\u040C\",Kappa:\"\u039A\",Kcedil:\"\u0136\",Kcy:\"\u041A\",Kfr:\"\uD835\uDD0E\",Kopf:\"\uD835\uDD42\",Kscr:\"\uD835\uDCA6\",LJcy:\"\u0409\",LT:\"<\",Lacute:\"\u0139\",Lambda:\"\u039B\",Lang:\"\u27EA\",Laplacetrf:\"\u2112\",Larr:\"\u219E\",Lcaron:\"\u013D\",Lcedil:\"\u013B\",Lcy:\"\u041B\",LeftAngleBracket:\"\u27E8\",LeftArrow:\"\u2190\",LeftArrowBar:\"\u21E4\",LeftArrowRightArrow:\"\u21C6\",LeftCeiling:\"\u2308\",LeftDoubleBracket:\"\u27E6\",LeftDownTeeVector:\"\u2961\",LeftDownVector:\"\u21C3\",LeftDownVectorBar:\"\u2959\",LeftFloor:\"\u230A\",LeftRightArrow:\"\u2194\",LeftRightVector:\"\u294E\",LeftTee:\"\u22A3\",LeftTeeArrow:\"\u21A4\",LeftTeeVector:\"\u295A\",LeftTriangle:\"\u22B2\",LeftTriangleBar:\"\u29CF\",LeftTriangleEqual:\"\u22B4\",LeftUpDownVector:\"\u2951\",LeftUpTeeVector:\"\u2960\",LeftUpVector:\"\u21BF\",LeftUpVectorBar:\"\u2958\",LeftVector:\"\u21BC\",LeftVectorBar:\"\u2952\",Leftarrow:\"\u21D0\",Leftrightarrow:\"\u21D4\",LessEqualGreater:\"\u22DA\",LessFullEqual:\"\u2266\",LessGreater:\"\u2276\",LessLess:\"\u2AA1\",LessSlantEqual:\"\u2A7D\",LessTilde:\"\u2272\",Lfr:\"\uD835\uDD0F\",Ll:\"\u22D8\",Lleftarrow:\"\u21DA\",Lmidot:\"\u013F\",LongLeftArrow:\"\u27F5\",LongLeftRightArrow:\"\u27F7\",LongRightArrow:\"\u27F6\",Longleftarrow:\"\u27F8\",Longleftrightarrow:\"\u27FA\",Longrightarrow:\"\u27F9\",Lopf:\"\uD835\uDD43\",LowerLeftArrow:\"\u2199\",LowerRightArrow:\"\u2198\",Lscr:\"\u2112\",Lsh:\"\u21B0\",Lstrok:\"\u0141\",Lt:\"\u226A\",Map:\"\u2905\",Mcy:\"\u041C\",MediumSpace:\"\u205F\",Mellintrf:\"\u2133\",Mfr:\"\uD835\uDD10\",MinusPlus:\"\u2213\",Mopf:\"\uD835\uDD44\",Mscr:\"\u2133\",Mu:\"\u039C\",NJcy:\"\u040A\",Nacute:\"\u0143\",Ncaron:\"\u0147\",Ncedil:\"\u0145\",Ncy:\"\u041D\",NegativeMediumSpace:\"\u200B\",NegativeThickSpace:\"\u200B\",NegativeThinSpace:\"\u200B\",NegativeVeryThinSpace:\"\u200B\",NestedGreaterGreater:\"\u226B\",NestedLessLess:\"\u226A\",NewLine:\"\\n\",Nfr:\"\uD835\uDD11\",NoBreak:\"\u2060\",NonBreakingSpace:\"\u00A0\",Nopf:\"\u2115\",Not:\"\u2AEC\",NotCongruent:\"\u2262\",NotCupCap:\"\u226D\",NotDoubleVerticalBar:\"\u2226\",NotElement:\"\u2209\",NotEqual:\"\u2260\",NotEqualTilde:\"\u2242\u0338\",NotExists:\"\u2204\",NotGreater:\"\u226F\",NotGreaterEqual:\"\u2271\",NotGreaterFullEqual:\"\u2267\u0338\",NotGreaterGreater:\"\u226B\u0338\",NotGreaterLess:\"\u2279\",NotGreaterSlantEqual:\"\u2A7E\u0338\",NotGreaterTilde:\"\u2275\",NotHumpDownHump:\"\u224E\u0338\",NotHumpEqual:\"\u224F\u0338\",NotLeftTriangle:\"\u22EA\",NotLeftTriangleBar:\"\u29CF\u0338\",NotLeftTriangleEqual:\"\u22EC\",NotLess:\"\u226E\",NotLessEqual:\"\u2270\",NotLessGreater:\"\u2278\",NotLessLess:\"\u226A\u0338\",NotLessSlantEqual:\"\u2A7D\u0338\",NotLessTilde:\"\u2274\",NotNestedGreaterGreater:\"\u2AA2\u0338\",NotNestedLessLess:\"\u2AA1\u0338\",NotPrecedes:\"\u2280\",NotPrecedesEqual:\"\u2AAF\u0338\",NotPrecedesSlantEqual:\"\u22E0\",NotReverseElement:\"\u220C\",NotRightTriangle:\"\u22EB\",NotRightTriangleBar:\"\u29D0\u0338\",NotRightTriangleEqual:\"\u22ED\",NotSquareSubset:\"\u228F\u0338\",NotSquareSubsetEqual:\"\u22E2\",NotSquareSuperset:\"\u2290\u0338\",NotSquareSupersetEqual:\"\u22E3\",NotSubset:\"\u2282\u20D2\",NotSubsetEqual:\"\u2288\",NotSucceeds:\"\u2281\",NotSucceedsEqual:\"\u2AB0\u0338\",NotSucceedsSlantEqual:\"\u22E1\",NotSucceedsTilde:\"\u227F\u0338\",NotSuperset:\"\u2283\u20D2\",NotSupersetEqual:\"\u2289\",NotTilde:\"\u2241\",NotTildeEqual:\"\u2244\",NotTildeFullEqual:\"\u2247\",NotTildeTilde:\"\u2249\",NotVerticalBar:\"\u2224\",Nscr:\"\uD835\uDCA9\",Ntilde:\"\u00D1\",Nu:\"\u039D\",OElig:\"\u0152\",Oacute:\"\u00D3\",Ocirc:\"\u00D4\",Ocy:\"\u041E\",Odblac:\"\u0150\",Ofr:\"\uD835\uDD12\",Ograve:\"\u00D2\",Omacr:\"\u014C\",Omega:\"\u03A9\",Omicron:\"\u039F\",Oopf:\"\uD835\uDD46\",OpenCurlyDoubleQuote:\"\u201C\",OpenCurlyQuote:\"\u2018\",Or:\"\u2A54\",Oscr:\"\uD835\uDCAA\",Oslash:\"\u00D8\",Otilde:\"\u00D5\",Otimes:\"\u2A37\",Ouml:\"\u00D6\",OverBar:\"\u203E\",OverBrace:\"\u23DE\",OverBracket:\"\u23B4\",OverParenthesis:\"\u23DC\",PartialD:\"\u2202\",Pcy:\"\u041F\",Pfr:\"\uD835\uDD13\",Phi:\"\u03A6\",Pi:\"\u03A0\",PlusMinus:\"\u00B1\",Poincareplane:\"\u210C\",Popf:\"\u2119\",Pr:\"\u2ABB\",Precedes:\"\u227A\",PrecedesEqual:\"\u2AAF\",PrecedesSlantEqual:\"\u227C\",PrecedesTilde:\"\u227E\",Prime:\"\u2033\",Product:\"\u220F\",Proportion:\"\u2237\",Proportional:\"\u221D\",Pscr:\"\uD835\uDCAB\",Psi:\"\u03A8\",QUOT:'\"',Qfr:\"\uD835\uDD14\",Qopf:\"\u211A\",Qscr:\"\uD835\uDCAC\",RBarr:\"\u2910\",REG:\"\u00AE\",Racute:\"\u0154\",Rang:\"\u27EB\",Rarr:\"\u21A0\",Rarrtl:\"\u2916\",Rcaron:\"\u0158\",Rcedil:\"\u0156\",Rcy:\"\u0420\",Re:\"\u211C\",ReverseElement:\"\u220B\",ReverseEquilibrium:\"\u21CB\",ReverseUpEquilibrium:\"\u296F\",Rfr:\"\u211C\",Rho:\"\u03A1\",RightAngleBracket:\"\u27E9\",RightArrow:\"\u2192\",RightArrowBar:\"\u21E5\",RightArrowLeftArrow:\"\u21C4\",RightCeiling:\"\u2309\",RightDoubleBracket:\"\u27E7\",RightDownTeeVector:\"\u295D\",RightDownVector:\"\u21C2\",RightDownVectorBar:\"\u2955\",RightFloor:\"\u230B\",RightTee:\"\u22A2\",RightTeeArrow:\"\u21A6\",RightTeeVector:\"\u295B\",RightTriangle:\"\u22B3\",RightTriangleBar:\"\u29D0\",RightTriangleEqual:\"\u22B5\",RightUpDownVector:\"\u294F\",RightUpTeeVector:\"\u295C\",RightUpVector:\"\u21BE\",RightUpVectorBar:\"\u2954\",RightVector:\"\u21C0\",RightVectorBar:\"\u2953\",Rightarrow:\"\u21D2\",Ropf:\"\u211D\",RoundImplies:\"\u2970\",Rrightarrow:\"\u21DB\",Rscr:\"\u211B\",Rsh:\"\u21B1\",RuleDelayed:\"\u29F4\",SHCHcy:\"\u0429\",SHcy:\"\u0428\",SOFTcy:\"\u042C\",Sacute:\"\u015A\",Sc:\"\u2ABC\",Scaron:\"\u0160\",Scedil:\"\u015E\",Scirc:\"\u015C\",Scy:\"\u0421\",Sfr:\"\uD835\uDD16\",ShortDownArrow:\"\u2193\",ShortLeftArrow:\"\u2190\",ShortRightArrow:\"\u2192\",ShortUpArrow:\"\u2191\",Sigma:\"\u03A3\",SmallCircle:\"\u2218\",Sopf:\"\uD835\uDD4A\",Sqrt:\"\u221A\",Square:\"\u25A1\",SquareIntersection:\"\u2293\",SquareSubset:\"\u228F\",SquareSubsetEqual:\"\u2291\",SquareSuperset:\"\u2290\",SquareSupersetEqual:\"\u2292\",SquareUnion:\"\u2294\",Sscr:\"\uD835\uDCAE\",Star:\"\u22C6\",Sub:\"\u22D0\",Subset:\"\u22D0\",SubsetEqual:\"\u2286\",Succeeds:\"\u227B\",SucceedsEqual:\"\u2AB0\",SucceedsSlantEqual:\"\u227D\",SucceedsTilde:\"\u227F\",SuchThat:\"\u220B\",Sum:\"\u2211\",Sup:\"\u22D1\",Superset:\"\u2283\",SupersetEqual:\"\u2287\",Supset:\"\u22D1\",THORN:\"\u00DE\",TRADE:\"\u2122\",TSHcy:\"\u040B\",TScy:\"\u0426\",Tab:\"\\t\",Tau:\"\u03A4\",Tcaron:\"\u0164\",Tcedil:\"\u0162\",Tcy:\"\u0422\",Tfr:\"\uD835\uDD17\",Therefore:\"\u2234\",Theta:\"\u0398\",ThickSpace:\"\u205F\u200A\",ThinSpace:\"\u2009\",Tilde:\"\u223C\",TildeEqual:\"\u2243\",TildeFullEqual:\"\u2245\",TildeTilde:\"\u2248\",Topf:\"\uD835\uDD4B\",TripleDot:\"\u20DB\",Tscr:\"\uD835\uDCAF\",Tstrok:\"\u0166\",Uacute:\"\u00DA\",Uarr:\"\u219F\",Uarrocir:\"\u2949\",Ubrcy:\"\u040E\",Ubreve:\"\u016C\",Ucirc:\"\u00DB\",Ucy:\"\u0423\",Udblac:\"\u0170\",Ufr:\"\uD835\uDD18\",Ugrave:\"\u00D9\",Umacr:\"\u016A\",UnderBar:\"_\",UnderBrace:\"\u23DF\",UnderBracket:\"\u23B5\",UnderParenthesis:\"\u23DD\",Union:\"\u22C3\",UnionPlus:\"\u228E\",Uogon:\"\u0172\",Uopf:\"\uD835\uDD4C\",UpArrow:\"\u2191\",UpArrowBar:\"\u2912\",UpArrowDownArrow:\"\u21C5\",UpDownArrow:\"\u2195\",UpEquilibrium:\"\u296E\",UpTee:\"\u22A5\",UpTeeArrow:\"\u21A5\",Uparrow:\"\u21D1\",Updownarrow:\"\u21D5\",UpperLeftArrow:\"\u2196\",UpperRightArrow:\"\u2197\",Upsi:\"\u03D2\",Upsilon:\"\u03A5\",Uring:\"\u016E\",Uscr:\"\uD835\uDCB0\",Utilde:\"\u0168\",Uuml:\"\u00DC\",VDash:\"\u22AB\",Vbar:\"\u2AEB\",Vcy:\"\u0412\",Vdash:\"\u22A9\",Vdashl:\"\u2AE6\",Vee:\"\u22C1\",Verbar:\"\u2016\",Vert:\"\u2016\",VerticalBar:\"\u2223\",VerticalLine:\"|\",VerticalSeparator:\"\u2758\",VerticalTilde:\"\u2240\",VeryThinSpace:\"\u200A\",Vfr:\"\uD835\uDD19\",Vopf:\"\uD835\uDD4D\",Vscr:\"\uD835\uDCB1\",Vvdash:\"\u22AA\",Wcirc:\"\u0174\",Wedge:\"\u22C0\",Wfr:\"\uD835\uDD1A\",Wopf:\"\uD835\uDD4E\",Wscr:\"\uD835\uDCB2\",Xfr:\"\uD835\uDD1B\",Xi:\"\u039E\",Xopf:\"\uD835\uDD4F\",Xscr:\"\uD835\uDCB3\",YAcy:\"\u042F\",YIcy:\"\u0407\",YUcy:\"\u042E\",Yacute:\"\u00DD\",Ycirc:\"\u0176\",Ycy:\"\u042B\",Yfr:\"\uD835\uDD1C\",Yopf:\"\uD835\uDD50\",Yscr:\"\uD835\uDCB4\",Yuml:\"\u0178\",ZHcy:\"\u0416\",Zacute:\"\u0179\",Zcaron:\"\u017D\",Zcy:\"\u0417\",Zdot:\"\u017B\",ZeroWidthSpace:\"\u200B\",Zeta:\"\u0396\",Zfr:\"\u2128\",Zopf:\"\u2124\",Zscr:\"\uD835\uDCB5\",aacute:\"\u00E1\",abreve:\"\u0103\",ac:\"\u223E\",acE:\"\u223E\u0333\",acd:\"\u223F\",acirc:\"\u00E2\",acute:\"\u00B4\",acy:\"\u0430\",aelig:\"\u00E6\",af:\"\u2061\",afr:\"\uD835\uDD1E\",agrave:\"\u00E0\",alefsym:\"\u2135\",aleph:\"\u2135\",alpha:\"\u03B1\",amacr:\"\u0101\",amalg:\"\u2A3F\",amp:\"&\",and:\"\u2227\",andand:\"\u2A55\",andd:\"\u2A5C\",andslope:\"\u2A58\",andv:\"\u2A5A\",ang:\"\u2220\",ange:\"\u29A4\",angle:\"\u2220\",angmsd:\"\u2221\",angmsdaa:\"\u29A8\",angmsdab:\"\u29A9\",angmsdac:\"\u29AA\",angmsdad:\"\u29AB\",angmsdae:\"\u29AC\",angmsdaf:\"\u29AD\",angmsdag:\"\u29AE\",angmsdah:\"\u29AF\",angrt:\"\u221F\",angrtvb:\"\u22BE\",angrtvbd:\"\u299D\",angsph:\"\u2222\",angst:\"\u00C5\",angzarr:\"\u237C\",aogon:\"\u0105\",aopf:\"\uD835\uDD52\",ap:\"\u2248\",apE:\"\u2A70\",apacir:\"\u2A6F\",ape:\"\u224A\",apid:\"\u224B\",apos:\"'\",approx:\"\u2248\",approxeq:\"\u224A\",aring:\"\u00E5\",ascr:\"\uD835\uDCB6\",ast:\"*\",asymp:\"\u2248\",asympeq:\"\u224D\",atilde:\"\u00E3\",auml:\"\u00E4\",awconint:\"\u2233\",awint:\"\u2A11\",bNot:\"\u2AED\",backcong:\"\u224C\",backepsilon:\"\u03F6\",backprime:\"\u2035\",backsim:\"\u223D\",backsimeq:\"\u22CD\",barvee:\"\u22BD\",barwed:\"\u2305\",barwedge:\"\u2305\",bbrk:\"\u23B5\",bbrktbrk:\"\u23B6\",bcong:\"\u224C\",bcy:\"\u0431\",bdquo:\"\u201E\",becaus:\"\u2235\",because:\"\u2235\",bemptyv:\"\u29B0\",bepsi:\"\u03F6\",bernou:\"\u212C\",beta:\"\u03B2\",beth:\"\u2136\",between:\"\u226C\",bfr:\"\uD835\uDD1F\",bigcap:\"\u22C2\",bigcirc:\"\u25EF\",bigcup:\"\u22C3\",bigodot:\"\u2A00\",bigoplus:\"\u2A01\",bigotimes:\"\u2A02\",bigsqcup:\"\u2A06\",bigstar:\"\u2605\",bigtriangledown:\"\u25BD\",bigtriangleup:\"\u25B3\",biguplus:\"\u2A04\",bigvee:\"\u22C1\",bigwedge:\"\u22C0\",bkarow:\"\u290D\",blacklozenge:\"\u29EB\",blacksquare:\"\u25AA\",blacktriangle:\"\u25B4\",blacktriangledown:\"\u25BE\",blacktriangleleft:\"\u25C2\",blacktriangleright:\"\u25B8\",blank:\"\u2423\",blk12:\"\u2592\",blk14:\"\u2591\",blk34:\"\u2593\",block:\"\u2588\",bne:\"=\u20E5\",bnequiv:\"\u2261\u20E5\",bnot:\"\u2310\",bopf:\"\uD835\uDD53\",bot:\"\u22A5\",bottom:\"\u22A5\",bowtie:\"\u22C8\",boxDL:\"\u2557\",boxDR:\"\u2554\",boxDl:\"\u2556\",boxDr:\"\u2553\",boxH:\"\u2550\",boxHD:\"\u2566\",boxHU:\"\u2569\",boxHd:\"\u2564\",boxHu:\"\u2567\",boxUL:\"\u255D\",boxUR:\"\u255A\",boxUl:\"\u255C\",boxUr:\"\u2559\",boxV:\"\u2551\",boxVH:\"\u256C\",boxVL:\"\u2563\",boxVR:\"\u2560\",boxVh:\"\u256B\",boxVl:\"\u2562\",boxVr:\"\u255F\",boxbox:\"\u29C9\",boxdL:\"\u2555\",boxdR:\"\u2552\",boxdl:\"\u2510\",boxdr:\"\u250C\",boxh:\"\u2500\",boxhD:\"\u2565\",boxhU:\"\u2568\",boxhd:\"\u252C\",boxhu:\"\u2534\",boxminus:\"\u229F\",boxplus:\"\u229E\",boxtimes:\"\u22A0\",boxuL:\"\u255B\",boxuR:\"\u2558\",boxul:\"\u2518\",boxur:\"\u2514\",boxv:\"\u2502\",boxvH:\"\u256A\",boxvL:\"\u2561\",boxvR:\"\u255E\",boxvh:\"\u253C\",boxvl:\"\u2524\",boxvr:\"\u251C\",bprime:\"\u2035\",breve:\"\u02D8\",brvbar:\"\u00A6\",bscr:\"\uD835\uDCB7\",bsemi:\"\u204F\",bsim:\"\u223D\",bsime:\"\u22CD\",bsol:\"\\\\\",bsolb:\"\u29C5\",bsolhsub:\"\u27C8\",bull:\"\u2022\",bullet:\"\u2022\",bump:\"\u224E\",bumpE:\"\u2AAE\",bumpe:\"\u224F\",bumpeq:\"\u224F\",cacute:\"\u0107\",cap:\"\u2229\",capand:\"\u2A44\",capbrcup:\"\u2A49\",capcap:\"\u2A4B\",capcup:\"\u2A47\",capdot:\"\u2A40\",caps:\"\u2229\uFE00\",caret:\"\u2041\",caron:\"\u02C7\",ccaps:\"\u2A4D\",ccaron:\"\u010D\",ccedil:\"\u00E7\",ccirc:\"\u0109\",ccups:\"\u2A4C\",ccupssm:\"\u2A50\",cdot:\"\u010B\",cedil:\"\u00B8\",cemptyv:\"\u29B2\",cent:\"\u00A2\",centerdot:\"\u00B7\",cfr:\"\uD835\uDD20\",chcy:\"\u0447\",check:\"\u2713\",checkmark:\"\u2713\",chi:\"\u03C7\",cir:\"\u25CB\",cirE:\"\u29C3\",circ:\"\u02C6\",circeq:\"\u2257\",circlearrowleft:\"\u21BA\",circlearrowright:\"\u21BB\",circledR:\"\u00AE\",circledS:\"\u24C8\",circledast:\"\u229B\",circledcirc:\"\u229A\",circleddash:\"\u229D\",cire:\"\u2257\",cirfnint:\"\u2A10\",cirmid:\"\u2AEF\",cirscir:\"\u29C2\",clubs:\"\u2663\",clubsuit:\"\u2663\",colon:\":\",colone:\"\u2254\",coloneq:\"\u2254\",comma:\",\",commat:\"@\",comp:\"\u2201\",compfn:\"\u2218\",complement:\"\u2201\",complexes:\"\u2102\",cong:\"\u2245\",congdot:\"\u2A6D\",conint:\"\u222E\",copf:\"\uD835\uDD54\",coprod:\"\u2210\",copy:\"\u00A9\",copysr:\"\u2117\",crarr:\"\u21B5\",cross:\"\u2717\",cscr:\"\uD835\uDCB8\",csub:\"\u2ACF\",csube:\"\u2AD1\",csup:\"\u2AD0\",csupe:\"\u2AD2\",ctdot:\"\u22EF\",cudarrl:\"\u2938\",cudarrr:\"\u2935\",cuepr:\"\u22DE\",cuesc:\"\u22DF\",cularr:\"\u21B6\",cularrp:\"\u293D\",cup:\"\u222A\",cupbrcap:\"\u2A48\",cupcap:\"\u2A46\",cupcup:\"\u2A4A\",cupdot:\"\u228D\",cupor:\"\u2A45\",cups:\"\u222A\uFE00\",curarr:\"\u21B7\",curarrm:\"\u293C\",curlyeqprec:\"\u22DE\",curlyeqsucc:\"\u22DF\",curlyvee:\"\u22CE\",curlywedge:\"\u22CF\",curren:\"\u00A4\",curvearrowleft:\"\u21B6\",curvearrowright:\"\u21B7\",cuvee:\"\u22CE\",cuwed:\"\u22CF\",cwconint:\"\u2232\",cwint:\"\u2231\",cylcty:\"\u232D\",dArr:\"\u21D3\",dHar:\"\u2965\",dagger:\"\u2020\",daleth:\"\u2138\",darr:\"\u2193\",dash:\"\u2010\",dashv:\"\u22A3\",dbkarow:\"\u290F\",dblac:\"\u02DD\",dcaron:\"\u010F\",dcy:\"\u0434\",dd:\"\u2146\",ddagger:\"\u2021\",ddarr:\"\u21CA\",ddotseq:\"\u2A77\",deg:\"\u00B0\",delta:\"\u03B4\",demptyv:\"\u29B1\",dfisht:\"\u297F\",dfr:\"\uD835\uDD21\",dharl:\"\u21C3\",dharr:\"\u21C2\",diam:\"\u22C4\",diamond:\"\u22C4\",diamondsuit:\"\u2666\",diams:\"\u2666\",die:\"\u00A8\",digamma:\"\u03DD\",disin:\"\u22F2\",div:\"\u00F7\",divide:\"\u00F7\",divideontimes:\"\u22C7\",divonx:\"\u22C7\",djcy:\"\u0452\",dlcorn:\"\u231E\",dlcrop:\"\u230D\",dollar:\"$\",dopf:\"\uD835\uDD55\",dot:\"\u02D9\",doteq:\"\u2250\",doteqdot:\"\u2251\",dotminus:\"\u2238\",dotplus:\"\u2214\",dotsquare:\"\u22A1\",doublebarwedge:\"\u2306\",downarrow:\"\u2193\",downdownarrows:\"\u21CA\",downharpoonleft:\"\u21C3\",downharpoonright:\"\u21C2\",drbkarow:\"\u2910\",drcorn:\"\u231F\",drcrop:\"\u230C\",dscr:\"\uD835\uDCB9\",dscy:\"\u0455\",dsol:\"\u29F6\",dstrok:\"\u0111\",dtdot:\"\u22F1\",dtri:\"\u25BF\",dtrif:\"\u25BE\",duarr:\"\u21F5\",duhar:\"\u296F\",dwangle:\"\u29A6\",dzcy:\"\u045F\",dzigrarr:\"\u27FF\",eDDot:\"\u2A77\",eDot:\"\u2251\",eacute:\"\u00E9\",easter:\"\u2A6E\",ecaron:\"\u011B\",ecir:\"\u2256\",ecirc:\"\u00EA\",ecolon:\"\u2255\",ecy:\"\u044D\",edot:\"\u0117\",ee:\"\u2147\",efDot:\"\u2252\",efr:\"\uD835\uDD22\",eg:\"\u2A9A\",egrave:\"\u00E8\",egs:\"\u2A96\",egsdot:\"\u2A98\",el:\"\u2A99\",elinters:\"\u23E7\",ell:\"\u2113\",els:\"\u2A95\",elsdot:\"\u2A97\",emacr:\"\u0113\",empty:\"\u2205\",emptyset:\"\u2205\",emptyv:\"\u2205\",emsp13:\"\u2004\",emsp14:\"\u2005\",emsp:\"\u2003\",eng:\"\u014B\",ensp:\"\u2002\",eogon:\"\u0119\",eopf:\"\uD835\uDD56\",epar:\"\u22D5\",eparsl:\"\u29E3\",eplus:\"\u2A71\",epsi:\"\u03B5\",epsilon:\"\u03B5\",epsiv:\"\u03F5\",eqcirc:\"\u2256\",eqcolon:\"\u2255\",eqsim:\"\u2242\",eqslantgtr:\"\u2A96\",eqslantless:\"\u2A95\",equals:\"=\",equest:\"\u225F\",equiv:\"\u2261\",equivDD:\"\u2A78\",eqvparsl:\"\u29E5\",erDot:\"\u2253\",erarr:\"\u2971\",escr:\"\u212F\",esdot:\"\u2250\",esim:\"\u2242\",eta:\"\u03B7\",eth:\"\u00F0\",euml:\"\u00EB\",euro:\"\u20AC\",excl:\"!\",exist:\"\u2203\",expectation:\"\u2130\",exponentiale:\"\u2147\",fallingdotseq:\"\u2252\",fcy:\"\u0444\",female:\"\u2640\",ffilig:\"\uFB03\",fflig:\"\uFB00\",ffllig:\"\uFB04\",ffr:\"\uD835\uDD23\",filig:\"\uFB01\",fjlig:\"fj\",flat:\"\u266D\",fllig:\"\uFB02\",fltns:\"\u25B1\",fnof:\"\u0192\",fopf:\"\uD835\uDD57\",forall:\"\u2200\",fork:\"\u22D4\",forkv:\"\u2AD9\",fpartint:\"\u2A0D\",frac12:\"\u00BD\",frac13:\"\u2153\",frac14:\"\u00BC\",frac15:\"\u2155\",frac16:\"\u2159\",frac18:\"\u215B\",frac23:\"\u2154\",frac25:\"\u2156\",frac34:\"\u00BE\",frac35:\"\u2157\",frac38:\"\u215C\",frac45:\"\u2158\",frac56:\"\u215A\",frac58:\"\u215D\",frac78:\"\u215E\",frasl:\"\u2044\",frown:\"\u2322\",fscr:\"\uD835\uDCBB\",gE:\"\u2267\",gEl:\"\u2A8C\",gacute:\"\u01F5\",gamma:\"\u03B3\",gammad:\"\u03DD\",gap:\"\u2A86\",gbreve:\"\u011F\",gcirc:\"\u011D\",gcy:\"\u0433\",gdot:\"\u0121\",ge:\"\u2265\",gel:\"\u22DB\",geq:\"\u2265\",geqq:\"\u2267\",geqslant:\"\u2A7E\",ges:\"\u2A7E\",gescc:\"\u2AA9\",gesdot:\"\u2A80\",gesdoto:\"\u2A82\",gesdotol:\"\u2A84\",gesl:\"\u22DB\uFE00\",gesles:\"\u2A94\",gfr:\"\uD835\uDD24\",gg:\"\u226B\",ggg:\"\u22D9\",gimel:\"\u2137\",gjcy:\"\u0453\",gl:\"\u2277\",glE:\"\u2A92\",gla:\"\u2AA5\",glj:\"\u2AA4\",gnE:\"\u2269\",gnap:\"\u2A8A\",gnapprox:\"\u2A8A\",gne:\"\u2A88\",gneq:\"\u2A88\",gneqq:\"\u2269\",gnsim:\"\u22E7\",gopf:\"\uD835\uDD58\",grave:\"`\",gscr:\"\u210A\",gsim:\"\u2273\",gsime:\"\u2A8E\",gsiml:\"\u2A90\",gt:\">\",gtcc:\"\u2AA7\",gtcir:\"\u2A7A\",gtdot:\"\u22D7\",gtlPar:\"\u2995\",gtquest:\"\u2A7C\",gtrapprox:\"\u2A86\",gtrarr:\"\u2978\",gtrdot:\"\u22D7\",gtreqless:\"\u22DB\",gtreqqless:\"\u2A8C\",gtrless:\"\u2277\",gtrsim:\"\u2273\",gvertneqq:\"\u2269\uFE00\",gvnE:\"\u2269\uFE00\",hArr:\"\u21D4\",hairsp:\"\u200A\",half:\"\u00BD\",hamilt:\"\u210B\",hardcy:\"\u044A\",harr:\"\u2194\",harrcir:\"\u2948\",harrw:\"\u21AD\",hbar:\"\u210F\",hcirc:\"\u0125\",hearts:\"\u2665\",heartsuit:\"\u2665\",hellip:\"\u2026\",hercon:\"\u22B9\",hfr:\"\uD835\uDD25\",hksearow:\"\u2925\",hkswarow:\"\u2926\",hoarr:\"\u21FF\",homtht:\"\u223B\",hookleftarrow:\"\u21A9\",hookrightarrow:\"\u21AA\",hopf:\"\uD835\uDD59\",horbar:\"\u2015\",hscr:\"\uD835\uDCBD\",hslash:\"\u210F\",hstrok:\"\u0127\",hybull:\"\u2043\",hyphen:\"\u2010\",iacute:\"\u00ED\",ic:\"\u2063\",icirc:\"\u00EE\",icy:\"\u0438\",iecy:\"\u0435\",iexcl:\"\u00A1\",iff:\"\u21D4\",ifr:\"\uD835\uDD26\",igrave:\"\u00EC\",ii:\"\u2148\",iiiint:\"\u2A0C\",iiint:\"\u222D\",iinfin:\"\u29DC\",iiota:\"\u2129\",ijlig:\"\u0133\",imacr:\"\u012B\",image:\"\u2111\",imagline:\"\u2110\",imagpart:\"\u2111\",imath:\"\u0131\",imof:\"\u22B7\",imped:\"\u01B5\",in:\"\u2208\",incare:\"\u2105\",infin:\"\u221E\",infintie:\"\u29DD\",inodot:\"\u0131\",int:\"\u222B\",intcal:\"\u22BA\",integers:\"\u2124\",intercal:\"\u22BA\",intlarhk:\"\u2A17\",intprod:\"\u2A3C\",iocy:\"\u0451\",iogon:\"\u012F\",iopf:\"\uD835\uDD5A\",iota:\"\u03B9\",iprod:\"\u2A3C\",iquest:\"\u00BF\",iscr:\"\uD835\uDCBE\",isin:\"\u2208\",isinE:\"\u22F9\",isindot:\"\u22F5\",isins:\"\u22F4\",isinsv:\"\u22F3\",isinv:\"\u2208\",it:\"\u2062\",itilde:\"\u0129\",iukcy:\"\u0456\",iuml:\"\u00EF\",jcirc:\"\u0135\",jcy:\"\u0439\",jfr:\"\uD835\uDD27\",jmath:\"\u0237\",jopf:\"\uD835\uDD5B\",jscr:\"\uD835\uDCBF\",jsercy:\"\u0458\",jukcy:\"\u0454\",kappa:\"\u03BA\",kappav:\"\u03F0\",kcedil:\"\u0137\",kcy:\"\u043A\",kfr:\"\uD835\uDD28\",kgreen:\"\u0138\",khcy:\"\u0445\",kjcy:\"\u045C\",kopf:\"\uD835\uDD5C\",kscr:\"\uD835\uDCC0\",lAarr:\"\u21DA\",lArr:\"\u21D0\",lAtail:\"\u291B\",lBarr:\"\u290E\",lE:\"\u2266\",lEg:\"\u2A8B\",lHar:\"\u2962\",lacute:\"\u013A\",laemptyv:\"\u29B4\",lagran:\"\u2112\",lambda:\"\u03BB\",lang:\"\u27E8\",langd:\"\u2991\",langle:\"\u27E8\",lap:\"\u2A85\",laquo:\"\u00AB\",larr:\"\u2190\",larrb:\"\u21E4\",larrbfs:\"\u291F\",larrfs:\"\u291D\",larrhk:\"\u21A9\",larrlp:\"\u21AB\",larrpl:\"\u2939\",larrsim:\"\u2973\",larrtl:\"\u21A2\",lat:\"\u2AAB\",latail:\"\u2919\",late:\"\u2AAD\",lates:\"\u2AAD\uFE00\",lbarr:\"\u290C\",lbbrk:\"\u2772\",lbrace:\"{\",lbrack:\"[\",lbrke:\"\u298B\",lbrksld:\"\u298F\",lbrkslu:\"\u298D\",lcaron:\"\u013E\",lcedil:\"\u013C\",lceil:\"\u2308\",lcub:\"{\",lcy:\"\u043B\",ldca:\"\u2936\",ldquo:\"\u201C\",ldquor:\"\u201E\",ldrdhar:\"\u2967\",ldrushar:\"\u294B\",ldsh:\"\u21B2\",le:\"\u2264\",leftarrow:\"\u2190\",leftarrowtail:\"\u21A2\",leftharpoondown:\"\u21BD\",leftharpoonup:\"\u21BC\",leftleftarrows:\"\u21C7\",leftrightarrow:\"\u2194\",leftrightarrows:\"\u21C6\",leftrightharpoons:\"\u21CB\",leftrightsquigarrow:\"\u21AD\",leftthreetimes:\"\u22CB\",leg:\"\u22DA\",leq:\"\u2264\",leqq:\"\u2266\",leqslant:\"\u2A7D\",les:\"\u2A7D\",lescc:\"\u2AA8\",lesdot:\"\u2A7F\",lesdoto:\"\u2A81\",lesdotor:\"\u2A83\",lesg:\"\u22DA\uFE00\",lesges:\"\u2A93\",lessapprox:\"\u2A85\",lessdot:\"\u22D6\",lesseqgtr:\"\u22DA\",lesseqqgtr:\"\u2A8B\",lessgtr:\"\u2276\",lesssim:\"\u2272\",lfisht:\"\u297C\",lfloor:\"\u230A\",lfr:\"\uD835\uDD29\",lg:\"\u2276\",lgE:\"\u2A91\",lhard:\"\u21BD\",lharu:\"\u21BC\",lharul:\"\u296A\",lhblk:\"\u2584\",ljcy:\"\u0459\",ll:\"\u226A\",llarr:\"\u21C7\",llcorner:\"\u231E\",llhard:\"\u296B\",lltri:\"\u25FA\",lmidot:\"\u0140\",lmoust:\"\u23B0\",lmoustache:\"\u23B0\",lnE:\"\u2268\",lnap:\"\u2A89\",lnapprox:\"\u2A89\",lne:\"\u2A87\",lneq:\"\u2A87\",lneqq:\"\u2268\",lnsim:\"\u22E6\",loang:\"\u27EC\",loarr:\"\u21FD\",lobrk:\"\u27E6\",longleftarrow:\"\u27F5\",longleftrightarrow:\"\u27F7\",longmapsto:\"\u27FC\",longrightarrow:\"\u27F6\",looparrowleft:\"\u21AB\",looparrowright:\"\u21AC\",lopar:\"\u2985\",lopf:\"\uD835\uDD5D\",loplus:\"\u2A2D\",lotimes:\"\u2A34\",lowast:\"\u2217\",lowbar:\"_\",loz:\"\u25CA\",lozenge:\"\u25CA\",lozf:\"\u29EB\",lpar:\"(\",lparlt:\"\u2993\",lrarr:\"\u21C6\",lrcorner:\"\u231F\",lrhar:\"\u21CB\",lrhard:\"\u296D\",lrm:\"\u200E\",lrtri:\"\u22BF\",lsaquo:\"\u2039\",lscr:\"\uD835\uDCC1\",lsh:\"\u21B0\",lsim:\"\u2272\",lsime:\"\u2A8D\",lsimg:\"\u2A8F\",lsqb:\"[\",lsquo:\"\u2018\",lsquor:\"\u201A\",lstrok:\"\u0142\",lt:\"<\",ltcc:\"\u2AA6\",ltcir:\"\u2A79\",ltdot:\"\u22D6\",lthree:\"\u22CB\",ltimes:\"\u22C9\",ltlarr:\"\u2976\",ltquest:\"\u2A7B\",ltrPar:\"\u2996\",ltri:\"\u25C3\",ltrie:\"\u22B4\",ltrif:\"\u25C2\",lurdshar:\"\u294A\",luruhar:\"\u2966\",lvertneqq:\"\u2268\uFE00\",lvnE:\"\u2268\uFE00\",mDDot:\"\u223A\",macr:\"\u00AF\",male:\"\u2642\",malt:\"\u2720\",maltese:\"\u2720\",map:\"\u21A6\",mapsto:\"\u21A6\",mapstodown:\"\u21A7\",mapstoleft:\"\u21A4\",mapstoup:\"\u21A5\",marker:\"\u25AE\",mcomma:\"\u2A29\",mcy:\"\u043C\",mdash:\"\u2014\",measuredangle:\"\u2221\",mfr:\"\uD835\uDD2A\",mho:\"\u2127\",micro:\"\u00B5\",mid:\"\u2223\",midast:\"*\",midcir:\"\u2AF0\",middot:\"\u00B7\",minus:\"\u2212\",minusb:\"\u229F\",minusd:\"\u2238\",minusdu:\"\u2A2A\",mlcp:\"\u2ADB\",mldr:\"\u2026\",mnplus:\"\u2213\",models:\"\u22A7\",mopf:\"\uD835\uDD5E\",mp:\"\u2213\",mscr:\"\uD835\uDCC2\",mstpos:\"\u223E\",mu:\"\u03BC\",multimap:\"\u22B8\",mumap:\"\u22B8\",nGg:\"\u22D9\u0338\",nGt:\"\u226B\u20D2\",nGtv:\"\u226B\u0338\",nLeftarrow:\"\u21CD\",nLeftrightarrow:\"\u21CE\",nLl:\"\u22D8\u0338\",nLt:\"\u226A\u20D2\",nLtv:\"\u226A\u0338\",nRightarrow:\"\u21CF\",nVDash:\"\u22AF\",nVdash:\"\u22AE\",nabla:\"\u2207\",nacute:\"\u0144\",nang:\"\u2220\u20D2\",nap:\"\u2249\",napE:\"\u2A70\u0338\",napid:\"\u224B\u0338\",napos:\"\u0149\",napprox:\"\u2249\",natur:\"\u266E\",natural:\"\u266E\",naturals:\"\u2115\",nbsp:\"\u00A0\",nbump:\"\u224E\u0338\",nbumpe:\"\u224F\u0338\",ncap:\"\u2A43\",ncaron:\"\u0148\",ncedil:\"\u0146\",ncong:\"\u2247\",ncongdot:\"\u2A6D\u0338\",ncup:\"\u2A42\",ncy:\"\u043D\",ndash:\"\u2013\",ne:\"\u2260\",neArr:\"\u21D7\",nearhk:\"\u2924\",nearr:\"\u2197\",nearrow:\"\u2197\",nedot:\"\u2250\u0338\",nequiv:\"\u2262\",nesear:\"\u2928\",nesim:\"\u2242\u0338\",nexist:\"\u2204\",nexists:\"\u2204\",nfr:\"\uD835\uDD2B\",ngE:\"\u2267\u0338\",nge:\"\u2271\",ngeq:\"\u2271\",ngeqq:\"\u2267\u0338\",ngeqslant:\"\u2A7E\u0338\",nges:\"\u2A7E\u0338\",ngsim:\"\u2275\",ngt:\"\u226F\",ngtr:\"\u226F\",nhArr:\"\u21CE\",nharr:\"\u21AE\",nhpar:\"\u2AF2\",ni:\"\u220B\",nis:\"\u22FC\",nisd:\"\u22FA\",niv:\"\u220B\",njcy:\"\u045A\",nlArr:\"\u21CD\",nlE:\"\u2266\u0338\",nlarr:\"\u219A\",nldr:\"\u2025\",nle:\"\u2270\",nleftarrow:\"\u219A\",nleftrightarrow:\"\u21AE\",nleq:\"\u2270\",nleqq:\"\u2266\u0338\",nleqslant:\"\u2A7D\u0338\",nles:\"\u2A7D\u0338\",nless:\"\u226E\",nlsim:\"\u2274\",nlt:\"\u226E\",nltri:\"\u22EA\",nltrie:\"\u22EC\",nmid:\"\u2224\",nopf:\"\uD835\uDD5F\",not:\"\u00AC\",notin:\"\u2209\",notinE:\"\u22F9\u0338\",notindot:\"\u22F5\u0338\",notinva:\"\u2209\",notinvb:\"\u22F7\",notinvc:\"\u22F6\",notni:\"\u220C\",notniva:\"\u220C\",notnivb:\"\u22FE\",notnivc:\"\u22FD\",npar:\"\u2226\",nparallel:\"\u2226\",nparsl:\"\u2AFD\u20E5\",npart:\"\u2202\u0338\",npolint:\"\u2A14\",npr:\"\u2280\",nprcue:\"\u22E0\",npre:\"\u2AAF\u0338\",nprec:\"\u2280\",npreceq:\"\u2AAF\u0338\",nrArr:\"\u21CF\",nrarr:\"\u219B\",nrarrc:\"\u2933\u0338\",nrarrw:\"\u219D\u0338\",nrightarrow:\"\u219B\",nrtri:\"\u22EB\",nrtrie:\"\u22ED\",nsc:\"\u2281\",nsccue:\"\u22E1\",nsce:\"\u2AB0\u0338\",nscr:\"\uD835\uDCC3\",nshortmid:\"\u2224\",nshortparallel:\"\u2226\",nsim:\"\u2241\",nsime:\"\u2244\",nsimeq:\"\u2244\",nsmid:\"\u2224\",nspar:\"\u2226\",nsqsube:\"\u22E2\",nsqsupe:\"\u22E3\",nsub:\"\u2284\",nsubE:\"\u2AC5\u0338\",nsube:\"\u2288\",nsubset:\"\u2282\u20D2\",nsubseteq:\"\u2288\",nsubseteqq:\"\u2AC5\u0338\",nsucc:\"\u2281\",nsucceq:\"\u2AB0\u0338\",nsup:\"\u2285\",nsupE:\"\u2AC6\u0338\",nsupe:\"\u2289\",nsupset:\"\u2283\u20D2\",nsupseteq:\"\u2289\",nsupseteqq:\"\u2AC6\u0338\",ntgl:\"\u2279\",ntilde:\"\u00F1\",ntlg:\"\u2278\",ntriangleleft:\"\u22EA\",ntrianglelefteq:\"\u22EC\",ntriangleright:\"\u22EB\",ntrianglerighteq:\"\u22ED\",nu:\"\u03BD\",num:\"#\",numero:\"\u2116\",numsp:\"\u2007\",nvDash:\"\u22AD\",nvHarr:\"\u2904\",nvap:\"\u224D\u20D2\",nvdash:\"\u22AC\",nvge:\"\u2265\u20D2\",nvgt:\">\u20D2\",nvinfin:\"\u29DE\",nvlArr:\"\u2902\",nvle:\"\u2264\u20D2\",nvlt:\"<\u20D2\",nvltrie:\"\u22B4\u20D2\",nvrArr:\"\u2903\",nvrtrie:\"\u22B5\u20D2\",nvsim:\"\u223C\u20D2\",nwArr:\"\u21D6\",nwarhk:\"\u2923\",nwarr:\"\u2196\",nwarrow:\"\u2196\",nwnear:\"\u2927\",oS:\"\u24C8\",oacute:\"\u00F3\",oast:\"\u229B\",ocir:\"\u229A\",ocirc:\"\u00F4\",ocy:\"\u043E\",odash:\"\u229D\",odblac:\"\u0151\",odiv:\"\u2A38\",odot:\"\u2299\",odsold:\"\u29BC\",oelig:\"\u0153\",ofcir:\"\u29BF\",ofr:\"\uD835\uDD2C\",ogon:\"\u02DB\",ograve:\"\u00F2\",ogt:\"\u29C1\",ohbar:\"\u29B5\",ohm:\"\u03A9\",oint:\"\u222E\",olarr:\"\u21BA\",olcir:\"\u29BE\",olcross:\"\u29BB\",oline:\"\u203E\",olt:\"\u29C0\",omacr:\"\u014D\",omega:\"\u03C9\",omicron:\"\u03BF\",omid:\"\u29B6\",ominus:\"\u2296\",oopf:\"\uD835\uDD60\",opar:\"\u29B7\",operp:\"\u29B9\",oplus:\"\u2295\",or:\"\u2228\",orarr:\"\u21BB\",ord:\"\u2A5D\",order:\"\u2134\",orderof:\"\u2134\",ordf:\"\u00AA\",ordm:\"\u00BA\",origof:\"\u22B6\",oror:\"\u2A56\",orslope:\"\u2A57\",orv:\"\u2A5B\",oscr:\"\u2134\",oslash:\"\u00F8\",osol:\"\u2298\",otilde:\"\u00F5\",otimes:\"\u2297\",otimesas:\"\u2A36\",ouml:\"\u00F6\",ovbar:\"\u233D\",par:\"\u2225\",para:\"\u00B6\",parallel:\"\u2225\",parsim:\"\u2AF3\",parsl:\"\u2AFD\",part:\"\u2202\",pcy:\"\u043F\",percnt:\"%\",period:\".\",permil:\"\u2030\",perp:\"\u22A5\",pertenk:\"\u2031\",pfr:\"\uD835\uDD2D\",phi:\"\u03C6\",phiv:\"\u03D5\",phmmat:\"\u2133\",phone:\"\u260E\",pi:\"\u03C0\",pitchfork:\"\u22D4\",piv:\"\u03D6\",planck:\"\u210F\",planckh:\"\u210E\",plankv:\"\u210F\",plus:\"+\",plusacir:\"\u2A23\",plusb:\"\u229E\",pluscir:\"\u2A22\",plusdo:\"\u2214\",plusdu:\"\u2A25\",pluse:\"\u2A72\",plusmn:\"\u00B1\",plussim:\"\u2A26\",plustwo:\"\u2A27\",pm:\"\u00B1\",pointint:\"\u2A15\",popf:\"\uD835\uDD61\",pound:\"\u00A3\",pr:\"\u227A\",prE:\"\u2AB3\",prap:\"\u2AB7\",prcue:\"\u227C\",pre:\"\u2AAF\",prec:\"\u227A\",precapprox:\"\u2AB7\",preccurlyeq:\"\u227C\",preceq:\"\u2AAF\",precnapprox:\"\u2AB9\",precneqq:\"\u2AB5\",precnsim:\"\u22E8\",precsim:\"\u227E\",prime:\"\u2032\",primes:\"\u2119\",prnE:\"\u2AB5\",prnap:\"\u2AB9\",prnsim:\"\u22E8\",prod:\"\u220F\",profalar:\"\u232E\",profline:\"\u2312\",profsurf:\"\u2313\",prop:\"\u221D\",propto:\"\u221D\",prsim:\"\u227E\",prurel:\"\u22B0\",pscr:\"\uD835\uDCC5\",psi:\"\u03C8\",puncsp:\"\u2008\",qfr:\"\uD835\uDD2E\",qint:\"\u2A0C\",qopf:\"\uD835\uDD62\",qprime:\"\u2057\",qscr:\"\uD835\uDCC6\",quaternions:\"\u210D\",quatint:\"\u2A16\",quest:\"?\",questeq:\"\u225F\",quot:'\"',rAarr:\"\u21DB\",rArr:\"\u21D2\",rAtail:\"\u291C\",rBarr:\"\u290F\",rHar:\"\u2964\",race:\"\u223D\u0331\",racute:\"\u0155\",radic:\"\u221A\",raemptyv:\"\u29B3\",rang:\"\u27E9\",rangd:\"\u2992\",range:\"\u29A5\",rangle:\"\u27E9\",raquo:\"\u00BB\",rarr:\"\u2192\",rarrap:\"\u2975\",rarrb:\"\u21E5\",rarrbfs:\"\u2920\",rarrc:\"\u2933\",rarrfs:\"\u291E\",rarrhk:\"\u21AA\",rarrlp:\"\u21AC\",rarrpl:\"\u2945\",rarrsim:\"\u2974\",rarrtl:\"\u21A3\",rarrw:\"\u219D\",ratail:\"\u291A\",ratio:\"\u2236\",rationals:\"\u211A\",rbarr:\"\u290D\",rbbrk:\"\u2773\",rbrace:\"}\",rbrack:\"]\",rbrke:\"\u298C\",rbrksld:\"\u298E\",rbrkslu:\"\u2990\",rcaron:\"\u0159\",rcedil:\"\u0157\",rceil:\"\u2309\",rcub:\"}\",rcy:\"\u0440\",rdca:\"\u2937\",rdldhar:\"\u2969\",rdquo:\"\u201D\",rdquor:\"\u201D\",rdsh:\"\u21B3\",real:\"\u211C\",realine:\"\u211B\",realpart:\"\u211C\",reals:\"\u211D\",rect:\"\u25AD\",reg:\"\u00AE\",rfisht:\"\u297D\",rfloor:\"\u230B\",rfr:\"\uD835\uDD2F\",rhard:\"\u21C1\",rharu:\"\u21C0\",rharul:\"\u296C\",rho:\"\u03C1\",rhov:\"\u03F1\",rightarrow:\"\u2192\",rightarrowtail:\"\u21A3\",rightharpoondown:\"\u21C1\",rightharpoonup:\"\u21C0\",rightleftarrows:\"\u21C4\",rightleftharpoons:\"\u21CC\",rightrightarrows:\"\u21C9\",rightsquigarrow:\"\u219D\",rightthreetimes:\"\u22CC\",ring:\"\u02DA\",risingdotseq:\"\u2253\",rlarr:\"\u21C4\",rlhar:\"\u21CC\",rlm:\"\u200F\",rmoust:\"\u23B1\",rmoustache:\"\u23B1\",rnmid:\"\u2AEE\",roang:\"\u27ED\",roarr:\"\u21FE\",robrk:\"\u27E7\",ropar:\"\u2986\",ropf:\"\uD835\uDD63\",roplus:\"\u2A2E\",rotimes:\"\u2A35\",rpar:\")\",rpargt:\"\u2994\",rppolint:\"\u2A12\",rrarr:\"\u21C9\",rsaquo:\"\u203A\",rscr:\"\uD835\uDCC7\",rsh:\"\u21B1\",rsqb:\"]\",rsquo:\"\u2019\",rsquor:\"\u2019\",rthree:\"\u22CC\",rtimes:\"\u22CA\",rtri:\"\u25B9\",rtrie:\"\u22B5\",rtrif:\"\u25B8\",rtriltri:\"\u29CE\",ruluhar:\"\u2968\",rx:\"\u211E\",sacute:\"\u015B\",sbquo:\"\u201A\",sc:\"\u227B\",scE:\"\u2AB4\",scap:\"\u2AB8\",scaron:\"\u0161\",sccue:\"\u227D\",sce:\"\u2AB0\",scedil:\"\u015F\",scirc:\"\u015D\",scnE:\"\u2AB6\",scnap:\"\u2ABA\",scnsim:\"\u22E9\",scpolint:\"\u2A13\",scsim:\"\u227F\",scy:\"\u0441\",sdot:\"\u22C5\",sdotb:\"\u22A1\",sdote:\"\u2A66\",seArr:\"\u21D8\",searhk:\"\u2925\",searr:\"\u2198\",searrow:\"\u2198\",sect:\"\u00A7\",semi:\";\",seswar:\"\u2929\",setminus:\"\u2216\",setmn:\"\u2216\",sext:\"\u2736\",sfr:\"\uD835\uDD30\",sfrown:\"\u2322\",sharp:\"\u266F\",shchcy:\"\u0449\",shcy:\"\u0448\",shortmid:\"\u2223\",shortparallel:\"\u2225\",shy:\"\u00AD\",sigma:\"\u03C3\",sigmaf:\"\u03C2\",sigmav:\"\u03C2\",sim:\"\u223C\",simdot:\"\u2A6A\",sime:\"\u2243\",simeq:\"\u2243\",simg:\"\u2A9E\",simgE:\"\u2AA0\",siml:\"\u2A9D\",simlE:\"\u2A9F\",simne:\"\u2246\",simplus:\"\u2A24\",simrarr:\"\u2972\",slarr:\"\u2190\",smallsetminus:\"\u2216\",smashp:\"\u2A33\",smeparsl:\"\u29E4\",smid:\"\u2223\",smile:\"\u2323\",smt:\"\u2AAA\",smte:\"\u2AAC\",smtes:\"\u2AAC\uFE00\",softcy:\"\u044C\",sol:\"/\",solb:\"\u29C4\",solbar:\"\u233F\",sopf:\"\uD835\uDD64\",spades:\"\u2660\",spadesuit:\"\u2660\",spar:\"\u2225\",sqcap:\"\u2293\",sqcaps:\"\u2293\uFE00\",sqcup:\"\u2294\",sqcups:\"\u2294\uFE00\",sqsub:\"\u228F\",sqsube:\"\u2291\",sqsubset:\"\u228F\",sqsubseteq:\"\u2291\",sqsup:\"\u2290\",sqsupe:\"\u2292\",sqsupset:\"\u2290\",sqsupseteq:\"\u2292\",squ:\"\u25A1\",square:\"\u25A1\",squarf:\"\u25AA\",squf:\"\u25AA\",srarr:\"\u2192\",sscr:\"\uD835\uDCC8\",ssetmn:\"\u2216\",ssmile:\"\u2323\",sstarf:\"\u22C6\",star:\"\u2606\",starf:\"\u2605\",straightepsilon:\"\u03F5\",straightphi:\"\u03D5\",strns:\"\u00AF\",sub:\"\u2282\",subE:\"\u2AC5\",subdot:\"\u2ABD\",sube:\"\u2286\",subedot:\"\u2AC3\",submult:\"\u2AC1\",subnE:\"\u2ACB\",subne:\"\u228A\",subplus:\"\u2ABF\",subrarr:\"\u2979\",subset:\"\u2282\",subseteq:\"\u2286\",subseteqq:\"\u2AC5\",subsetneq:\"\u228A\",subsetneqq:\"\u2ACB\",subsim:\"\u2AC7\",subsub:\"\u2AD5\",subsup:\"\u2AD3\",succ:\"\u227B\",succapprox:\"\u2AB8\",succcurlyeq:\"\u227D\",succeq:\"\u2AB0\",succnapprox:\"\u2ABA\",succneqq:\"\u2AB6\",succnsim:\"\u22E9\",succsim:\"\u227F\",sum:\"\u2211\",sung:\"\u266A\",sup1:\"\u00B9\",sup2:\"\u00B2\",sup3:\"\u00B3\",sup:\"\u2283\",supE:\"\u2AC6\",supdot:\"\u2ABE\",supdsub:\"\u2AD8\",supe:\"\u2287\",supedot:\"\u2AC4\",suphsol:\"\u27C9\",suphsub:\"\u2AD7\",suplarr:\"\u297B\",supmult:\"\u2AC2\",supnE:\"\u2ACC\",supne:\"\u228B\",supplus:\"\u2AC0\",supset:\"\u2283\",supseteq:\"\u2287\",supseteqq:\"\u2AC6\",supsetneq:\"\u228B\",supsetneqq:\"\u2ACC\",supsim:\"\u2AC8\",supsub:\"\u2AD4\",supsup:\"\u2AD6\",swArr:\"\u21D9\",swarhk:\"\u2926\",swarr:\"\u2199\",swarrow:\"\u2199\",swnwar:\"\u292A\",szlig:\"\u00DF\",target:\"\u2316\",tau:\"\u03C4\",tbrk:\"\u23B4\",tcaron:\"\u0165\",tcedil:\"\u0163\",tcy:\"\u0442\",tdot:\"\u20DB\",telrec:\"\u2315\",tfr:\"\uD835\uDD31\",there4:\"\u2234\",therefore:\"\u2234\",theta:\"\u03B8\",thetasym:\"\u03D1\",thetav:\"\u03D1\",thickapprox:\"\u2248\",thicksim:\"\u223C\",thinsp:\"\u2009\",thkap:\"\u2248\",thksim:\"\u223C\",thorn:\"\u00FE\",tilde:\"\u02DC\",times:\"\u00D7\",timesb:\"\u22A0\",timesbar:\"\u2A31\",timesd:\"\u2A30\",tint:\"\u222D\",toea:\"\u2928\",top:\"\u22A4\",topbot:\"\u2336\",topcir:\"\u2AF1\",topf:\"\uD835\uDD65\",topfork:\"\u2ADA\",tosa:\"\u2929\",tprime:\"\u2034\",trade:\"\u2122\",triangle:\"\u25B5\",triangledown:\"\u25BF\",triangleleft:\"\u25C3\",trianglelefteq:\"\u22B4\",triangleq:\"\u225C\",triangleright:\"\u25B9\",trianglerighteq:\"\u22B5\",tridot:\"\u25EC\",trie:\"\u225C\",triminus:\"\u2A3A\",triplus:\"\u2A39\",trisb:\"\u29CD\",tritime:\"\u2A3B\",trpezium:\"\u23E2\",tscr:\"\uD835\uDCC9\",tscy:\"\u0446\",tshcy:\"\u045B\",tstrok:\"\u0167\",twixt:\"\u226C\",twoheadleftarrow:\"\u219E\",twoheadrightarrow:\"\u21A0\",uArr:\"\u21D1\",uHar:\"\u2963\",uacute:\"\u00FA\",uarr:\"\u2191\",ubrcy:\"\u045E\",ubreve:\"\u016D\",ucirc:\"\u00FB\",ucy:\"\u0443\",udarr:\"\u21C5\",udblac:\"\u0171\",udhar:\"\u296E\",ufisht:\"\u297E\",ufr:\"\uD835\uDD32\",ugrave:\"\u00F9\",uharl:\"\u21BF\",uharr:\"\u21BE\",uhblk:\"\u2580\",ulcorn:\"\u231C\",ulcorner:\"\u231C\",ulcrop:\"\u230F\",ultri:\"\u25F8\",umacr:\"\u016B\",uml:\"\u00A8\",uogon:\"\u0173\",uopf:\"\uD835\uDD66\",uparrow:\"\u2191\",updownarrow:\"\u2195\",upharpoonleft:\"\u21BF\",upharpoonright:\"\u21BE\",uplus:\"\u228E\",upsi:\"\u03C5\",upsih:\"\u03D2\",upsilon:\"\u03C5\",upuparrows:\"\u21C8\",urcorn:\"\u231D\",urcorner:\"\u231D\",urcrop:\"\u230E\",uring:\"\u016F\",urtri:\"\u25F9\",uscr:\"\uD835\uDCCA\",utdot:\"\u22F0\",utilde:\"\u0169\",utri:\"\u25B5\",utrif:\"\u25B4\",uuarr:\"\u21C8\",uuml:\"\u00FC\",uwangle:\"\u29A7\",vArr:\"\u21D5\",vBar:\"\u2AE8\",vBarv:\"\u2AE9\",vDash:\"\u22A8\",vangrt:\"\u299C\",varepsilon:\"\u03F5\",varkappa:\"\u03F0\",varnothing:\"\u2205\",varphi:\"\u03D5\",varpi:\"\u03D6\",varpropto:\"\u221D\",varr:\"\u2195\",varrho:\"\u03F1\",varsigma:\"\u03C2\",varsubsetneq:\"\u228A\uFE00\",varsubsetneqq:\"\u2ACB\uFE00\",varsupsetneq:\"\u228B\uFE00\",varsupsetneqq:\"\u2ACC\uFE00\",vartheta:\"\u03D1\",vartriangleleft:\"\u22B2\",vartriangleright:\"\u22B3\",vcy:\"\u0432\",vdash:\"\u22A2\",vee:\"\u2228\",veebar:\"\u22BB\",veeeq:\"\u225A\",vellip:\"\u22EE\",verbar:\"|\",vert:\"|\",vfr:\"\uD835\uDD33\",vltri:\"\u22B2\",vnsub:\"\u2282\u20D2\",vnsup:\"\u2283\u20D2\",vopf:\"\uD835\uDD67\",vprop:\"\u221D\",vrtri:\"\u22B3\",vscr:\"\uD835\uDCCB\",vsubnE:\"\u2ACB\uFE00\",vsubne:\"\u228A\uFE00\",vsupnE:\"\u2ACC\uFE00\",vsupne:\"\u228B\uFE00\",vzigzag:\"\u299A\",wcirc:\"\u0175\",wedbar:\"\u2A5F\",wedge:\"\u2227\",wedgeq:\"\u2259\",weierp:\"\u2118\",wfr:\"\uD835\uDD34\",wopf:\"\uD835\uDD68\",wp:\"\u2118\",wr:\"\u2240\",wreath:\"\u2240\",wscr:\"\uD835\uDCCC\",xcap:\"\u22C2\",xcirc:\"\u25EF\",xcup:\"\u22C3\",xdtri:\"\u25BD\",xfr:\"\uD835\uDD35\",xhArr:\"\u27FA\",xharr:\"\u27F7\",xi:\"\u03BE\",xlArr:\"\u27F8\",xlarr:\"\u27F5\",xmap:\"\u27FC\",xnis:\"\u22FB\",xodot:\"\u2A00\",xopf:\"\uD835\uDD69\",xoplus:\"\u2A01\",xotime:\"\u2A02\",xrArr:\"\u27F9\",xrarr:\"\u27F6\",xscr:\"\uD835\uDCCD\",xsqcup:\"\u2A06\",xuplus:\"\u2A04\",xutri:\"\u25B3\",xvee:\"\u22C1\",xwedge:\"\u22C0\",yacute:\"\u00FD\",yacy:\"\u044F\",ycirc:\"\u0177\",ycy:\"\u044B\",yen:\"\u00A5\",yfr:\"\uD835\uDD36\",yicy:\"\u0457\",yopf:\"\uD835\uDD6A\",yscr:\"\uD835\uDCCE\",yucy:\"\u044E\",yuml:\"\u00FF\",zacute:\"\u017A\",zcaron:\"\u017E\",zcy:\"\u0437\",zdot:\"\u017C\",zeetrf:\"\u2128\",zeta:\"\u03B6\",zfr:\"\uD835\uDD37\",zhcy:\"\u0436\",zigrarr:\"\u21DD\",zopf:\"\uD835\uDD6B\",zscr:\"\uD835\uDCCF\",zwj:\"\u200D\",zwnj:\"\u200C\"},ut={}.hasOwnProperty,at={name:\"characterReference\",tokenize:function(e,t,n){const r=this;let o,c,l=0;return function(t){return e.enter(\"characterReference\"),e.enter(\"characterReferenceMarker\"),e.consume(t),e.exit(\"characterReferenceMarker\"),s};function s(t){return 35===t?(e.enter(\"characterReferenceMarkerNumeric\"),e.consume(t),e.exit(\"characterReferenceMarkerNumeric\"),f):(e.enter(\"characterReferenceValue\"),o=31,c=i,p(t))}function f(t){return 88===t||120===t?(e.enter(\"characterReferenceMarkerHexadecimal\"),e.consume(t),e.exit(\"characterReferenceMarkerHexadecimal\"),e.enter(\"characterReferenceValue\"),o=6,c=a,p):(e.enter(\"characterReferenceValue\"),o=7,c=u,p(t))}function p(u){if(59===u&&l){const o=e.exit(\"characterReferenceValue\");return c!==i||function(e){return!!ut.call(ct,e)&&ct[e]}(r.sliceSerialize(o))?(e.enter(\"characterReferenceMarker\"),e.consume(u),e.exit(\"characterReferenceMarker\"),e.exit(\"characterReference\"),t):n(u)}return c(u)&&l++<o?(e.consume(u),p):n(u)}}},lt={name:\"characterEscape\",tokenize:function(e,t,n){return function(t){return e.enter(\"characterEscape\"),e.enter(\"escapeMarker\"),e.consume(t),e.exit(\"escapeMarker\"),r};function r(r){return l(r)?(e.enter(\"characterEscapeValue\"),e.consume(r),e.exit(\"characterEscapeValue\"),e.exit(\"characterEscape\"),t):n(r)}}},st={name:\"lineEnding\",tokenize:function(e,t){return function(n){return e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),h(e,t,\"linePrefix\")}}},ft={name:\"labelEnd\",tokenize:function(e,t,n){const r=this;let i,o,c=r.events.length;for(;c--;)if((\"labelImage\"===r.events[c][1].type||\"labelLink\"===r.events[c][1].type)&&!r.events[c][1]._balanced){i=r.events[c][1];break}return function(t){return i?i._inactive?s(t):(o=r.parser.defined.includes(J(r.sliceSerialize({start:i.end,end:r.now()}))),e.enter(\"labelEnd\"),e.enter(\"labelMarker\"),e.consume(t),e.exit(\"labelMarker\"),e.exit(\"labelEnd\"),u):n(t)};function u(t){return 40===t?e.attempt(pt,l,o?l:s)(t):91===t?e.attempt(dt,l,o?a:s)(t):o?l(t):s(t)}function a(t){return e.attempt(mt,l,s)(t)}function l(e){return t(e)}function s(e){return i._balanced=!0,n(e)}},resolveTo:function(e,t){let n,r,i,o,c=e.length,u=0;for(;c--;)if(n=e[c][1],r){if(\"link\"===n.type||\"labelLink\"===n.type&&n._inactive)break;\"enter\"===e[c][0]&&\"labelLink\"===n.type&&(n._inactive=!0)}else if(i){if(\"enter\"===e[c][0]&&(\"labelImage\"===n.type||\"labelLink\"===n.type)&&!n._balanced&&(r=c,\"labelLink\"!==n.type)){u=2;break}}else\"labelEnd\"===n.type&&(i=c);const a={type:\"labelLink\"===e[r][1].type?\"link\":\"image\",start:Object.assign({},e[r][1].start),end:Object.assign({},e[e.length-1][1].end)},l={type:\"label\",start:Object.assign({},e[r][1].start),end:Object.assign({},e[i][1].end)},s={type:\"labelText\",start:Object.assign({},e[r+u+2][1].end),end:Object.assign({},e[i-2][1].start)};return o=[[\"enter\",a,t],[\"enter\",l,t]],o=ve(o,e.slice(r+1,r+u+3)),o=ve(o,[[\"enter\",s,t]]),o=ve(o,Pe(t.parser.constructs.insideSpan.null,e.slice(r+u+4,i-3),t)),o=ve(o,[[\"exit\",s,t],e[i-2],e[i-1],[\"exit\",l,t]]),o=ve(o,e.slice(i+1)),o=ve(o,[[\"exit\",a,t]]),xe(e,r,e.length,o),e},resolveAll:function(e){let t=-1;for(;++t<e.length;){const n=e[t][1];\"labelImage\"!==n.type&&\"labelLink\"!==n.type&&\"labelEnd\"!==n.type||(e.splice(t+1,\"labelImage\"===n.type?4:2),n.type=\"data\",t++)}return e}},pt={tokenize:function(e,t,n){return function(t){return e.enter(\"resource\"),e.enter(\"resourceMarker\"),e.consume(t),e.exit(\"resourceMarker\"),r};function r(t){return f(t)?b(e,i)(t):i(t)}function i(t){return 41===t?l(t):Ue(e,o,c,\"resourceDestination\",\"resourceDestinationLiteral\",\"resourceDestinationLiteralMarker\",\"resourceDestinationRaw\",\"resourceDestinationString\",32)(t)}function o(t){return f(t)?b(e,u)(t):l(t)}function c(e){return n(e)}function u(t){return 34===t||39===t||40===t?Qe(e,a,n,\"resourceTitle\",\"resourceTitleMarker\",\"resourceTitleString\")(t):l(t)}function a(t){return f(t)?b(e,l)(t):l(t)}function l(r){return 41===r?(e.enter(\"resourceMarker\"),e.consume(r),e.exit(\"resourceMarker\"),e.exit(\"resource\"),t):n(r)}}},dt={tokenize:function(e,t,n){const r=this;return function(t){return Ge.call(r,e,i,o,\"reference\",\"referenceMarker\",\"referenceString\")(t)};function i(e){return r.parser.defined.includes(J(r.sliceSerialize(r.events[r.events.length-1][1]).slice(1,-1)))?t(e):n(e)}function o(e){return n(e)}}},mt={tokenize:function(e,t,n){return function(t){return e.enter(\"reference\"),e.enter(\"referenceMarker\"),e.consume(t),e.exit(\"referenceMarker\"),r};function r(r){return 93===r?(e.enter(\"referenceMarker\"),e.consume(r),e.exit(\"referenceMarker\"),e.exit(\"reference\"),t):n(r)}}},gt={name:\"labelStartImage\",tokenize:function(e,t,n){const r=this;return function(t){return e.enter(\"labelImage\"),e.enter(\"labelImageMarker\"),e.consume(t),e.exit(\"labelImageMarker\"),i};function i(t){return 91===t?(e.enter(\"labelMarker\"),e.consume(t),e.exit(\"labelMarker\"),e.exit(\"labelImage\"),o):n(t)}function o(e){return 94===e&&\"_hiddenFootnoteSupport\"in r.parser.constructs?n(e):t(e)}},resolveAll:ft.resolveAll};function ht(e){return null===e||f(e)||m(e)?1:d(e)?2:void 0}const bt={name:\"attention\",tokenize:function(e,t){const n=this.parser.constructs.attentionMarkers.null,r=this.previous,i=ht(r);let o;return function(t){return o=t,e.enter(\"attentionSequence\"),c(t)};function c(u){if(u===o)return e.consume(u),c;const a=e.exit(\"attentionSequence\"),l=ht(u),s=!l||2===l&&i||n.includes(u),f=!i||2===i&&l||n.includes(r);return a._open=Boolean(42===o?s:s&&(i||!f)),a._close=Boolean(42===o?f:f&&(l||!s)),t(u)}},resolveAll:function(e,t){let n,r,i,o,c,u,a,l,s=-1;for(;++s<e.length;)if(\"enter\"===e[s][0]&&\"attentionSequence\"===e[s][1].type&&e[s][1]._close)for(n=s;n--;)if(\"exit\"===e[n][0]&&\"attentionSequence\"===e[n][1].type&&e[n][1]._open&&t.sliceSerialize(e[n][1]).charCodeAt(0)===t.sliceSerialize(e[s][1]).charCodeAt(0)){if((e[n][1]._close||e[s][1]._open)&&(e[s][1].end.offset-e[s][1].start.offset)%3&&!((e[n][1].end.offset-e[n][1].start.offset+e[s][1].end.offset-e[s][1].start.offset)%3))continue;u=e[n][1].end.offset-e[n][1].start.offset>1&&e[s][1].end.offset-e[s][1].start.offset>1?2:1;const f=Object.assign({},e[n][1].end),p=Object.assign({},e[s][1].start);xt(f,-u),xt(p,u),o={type:u>1?\"strongSequence\":\"emphasisSequence\",start:f,end:Object.assign({},e[n][1].end)},c={type:u>1?\"strongSequence\":\"emphasisSequence\",start:Object.assign({},e[s][1].start),end:p},i={type:u>1?\"strongText\":\"emphasisText\",start:Object.assign({},e[n][1].end),end:Object.assign({},e[s][1].start)},r={type:u>1?\"strong\":\"emphasis\",start:Object.assign({},o.start),end:Object.assign({},c.end)},e[n][1].end=Object.assign({},o.start),e[s][1].start=Object.assign({},c.end),a=[],e[n][1].end.offset-e[n][1].start.offset&&(a=ve(a,[[\"enter\",e[n][1],t],[\"exit\",e[n][1],t]])),a=ve(a,[[\"enter\",r,t],[\"enter\",o,t],[\"exit\",o,t],[\"enter\",i,t]]),a=ve(a,Pe(t.parser.constructs.insideSpan.null,e.slice(n+1,s),t)),a=ve(a,[[\"exit\",i,t],[\"enter\",c,t],[\"exit\",c,t],[\"exit\",r,t]]),e[s][1].end.offset-e[s][1].start.offset?(l=2,a=ve(a,[[\"enter\",e[s][1],t],[\"exit\",e[s][1],t]])):l=0,xe(e,n-1,s-n+3,a),s=n+a.length-l-2;break}for(s=-1;++s<e.length;)\"attentionSequence\"===e[s][1].type&&(e[s][1].type=\"data\");return e}};function xt(e,t){e.column+=t,e.offset+=t,e._bufferIndex+=t}const vt={name:\"autolink\",tokenize:function(e,t,n){let u=0;return function(t){return e.enter(\"autolink\"),e.enter(\"autolinkMarker\"),e.consume(t),e.exit(\"autolinkMarker\"),e.enter(\"autolinkProtocol\"),a};function a(t){return r(t)?(e.consume(t),l):p(t)}function l(e){return 43===e||45===e||46===e||i(e)?(u=1,s(e)):p(e)}function s(t){return 58===t?(e.consume(t),u=0,f):(43===t||45===t||46===t||i(t))&&u++<32?(e.consume(t),s):(u=0,p(t))}function f(r){return 62===r?(e.exit(\"autolinkProtocol\"),e.enter(\"autolinkMarker\"),e.consume(r),e.exit(\"autolinkMarker\"),e.exit(\"autolink\"),t):null===r||32===r||60===r||c(r)?n(r):(e.consume(r),f)}function p(t){return 64===t?(e.consume(t),d):o(t)?(e.consume(t),p):n(t)}function d(e){return i(e)?m(e):n(e)}function m(n){return 46===n?(e.consume(n),u=0,d):62===n?(e.exit(\"autolinkProtocol\").type=\"autolinkEmail\",e.enter(\"autolinkMarker\"),e.consume(n),e.exit(\"autolinkMarker\"),e.exit(\"autolink\"),t):g(n)}function g(t){if((45===t||i(t))&&u++<63){const n=45===t?g:m;return e.consume(t),n}return n(t)}}},kt={name:\"htmlText\",tokenize:function(e,t,n){const o=this;let c,u,a;return function(t){return e.enter(\"htmlText\"),e.enter(\"htmlTextData\"),e.consume(t),l};function l(t){return 33===t?(e.consume(t),d):47===t?(e.consume(t),T):63===t?(e.consume(t),S):r(t)?(e.consume(t),A):n(t)}function d(t){return 45===t?(e.consume(t),m):91===t?(e.consume(t),u=0,v):r(t)?(e.consume(t),q):n(t)}function m(t){return 45===t?(e.consume(t),x):n(t)}function g(t){return null===t?n(t):45===t?(e.consume(t),b):s(t)?(a=g,N(t)):(e.consume(t),g)}function b(t){return 45===t?(e.consume(t),x):g(t)}function x(e){return 62===e?P(e):45===e?b(e):g(e)}function v(t){return t===\"CDATA[\".charCodeAt(u++)?(e.consume(t),6===u?k:v):n(t)}function k(t){return null===t?n(t):93===t?(e.consume(t),y):s(t)?(a=k,N(t)):(e.consume(t),k)}function y(t){return 93===t?(e.consume(t),w):k(t)}function w(t){return 62===t?P(t):93===t?(e.consume(t),w):k(t)}function q(t){return null===t||62===t?P(t):s(t)?(a=q,N(t)):(e.consume(t),q)}function S(t){return null===t?n(t):63===t?(e.consume(t),L):s(t)?(a=S,N(t)):(e.consume(t),S)}function L(e){return 62===e?P(e):S(e)}function T(t){return r(t)?(e.consume(t),D):n(t)}function D(t){return 45===t||i(t)?(e.consume(t),D):E(t)}function E(t){return s(t)?(a=E,N(t)):p(t)?(e.consume(t),E):P(t)}function A(t){return 45===t||i(t)?(e.consume(t),A):47===t||62===t||f(t)?C(t):n(t)}function C(t){return 47===t?(e.consume(t),P):58===t||95===t||r(t)?(e.consume(t),F):s(t)?(a=C,N(t)):p(t)?(e.consume(t),C):P(t)}function F(t){return 45===t||46===t||58===t||95===t||i(t)?(e.consume(t),F):z(t)}function z(t){return 61===t?(e.consume(t),I):s(t)?(a=z,N(t)):p(t)?(e.consume(t),z):C(t)}function I(t){return null===t||60===t||61===t||62===t||96===t?n(t):34===t||39===t?(e.consume(t),c=t,M):s(t)?(a=I,N(t)):p(t)?(e.consume(t),I):(e.consume(t),R)}function M(t){return t===c?(e.consume(t),c=void 0,O):null===t?n(t):s(t)?(a=M,N(t)):(e.consume(t),M)}function R(t){return null===t||34===t||39===t||60===t||61===t||96===t?n(t):47===t||62===t||f(t)?C(t):(e.consume(t),R)}function O(e){return 47===e||62===e||f(e)?C(e):n(e)}function P(r){return 62===r?(e.consume(r),e.exit(\"htmlTextData\"),e.exit(\"htmlText\"),t):n(r)}function N(t){return e.exit(\"htmlTextData\"),e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),V}function V(t){return p(t)?h(e,_,\"linePrefix\",o.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)(t):_(t)}function _(t){return e.enter(\"htmlTextData\"),a(t)}}},yt={name:\"labelStartLink\",tokenize:function(e,t,n){const r=this;return function(t){return e.enter(\"labelLink\"),e.enter(\"labelMarker\"),e.consume(t),e.exit(\"labelMarker\"),e.exit(\"labelLink\"),i};function i(e){return 94===e&&\"_hiddenFootnoteSupport\"in r.parser.constructs?n(e):t(e)}},resolveAll:ft.resolveAll},wt={name:\"hardBreakEscape\",tokenize:function(e,t,n){return function(t){return e.enter(\"hardBreakEscape\"),e.consume(t),r};function r(r){return s(r)?(e.exit(\"hardBreakEscape\"),t(r)):n(r)}}},qt={name:\"codeText\",tokenize:function(e,t,n){let r,i,o=0;return function(t){return e.enter(\"codeText\"),e.enter(\"codeTextSequence\"),c(t)};function c(t){return 96===t?(e.consume(t),o++,c):(e.exit(\"codeTextSequence\"),u(t))}function u(t){return null===t?n(t):32===t?(e.enter(\"space\"),e.consume(t),e.exit(\"space\"),u):96===t?(i=e.enter(\"codeTextSequence\"),r=0,l(t)):s(t)?(e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),u):(e.enter(\"codeTextData\"),a(t))}function a(t){return null===t||32===t||96===t||s(t)?(e.exit(\"codeTextData\"),u(t)):(e.consume(t),a)}function l(n){return 96===n?(e.consume(n),r++,l):r===o?(e.exit(\"codeTextSequence\"),e.exit(\"codeText\"),t(n)):(i.type=\"codeTextData\",a(n))}},resolve:function(e){let t,n,r=e.length-4,i=3;if(!(\"lineEnding\"!==e[i][1].type&&\"space\"!==e[i][1].type||\"lineEnding\"!==e[r][1].type&&\"space\"!==e[r][1].type))for(t=i;++t<r;)if(\"codeTextData\"===e[t][1].type){e[i][1].type=\"codeTextPadding\",e[r][1].type=\"codeTextPadding\",i+=2,r-=2;break}for(t=i-1,r++;++t<=r;)void 0===n?t!==r&&\"lineEnding\"!==e[t][1].type&&(n=t):t!==r&&\"lineEnding\"!==e[t][1].type||(e[n][1].type=\"codeTextData\",t!==n+2&&(e[n][1].end=e[t-1][1].end,e.splice(n+2,t-n-2),r-=t-n-2,t=n+2),n=void 0);return e},previous:function(e){return 96!==e||\"characterEscape\"===this.events[this.events.length-1][1].type}},St={42:_e,43:_e,45:_e,48:_e,49:_e,50:_e,51:_e,52:_e,53:_e,54:_e,55:_e,56:_e,57:_e,62:He},Lt={91:We},Tt={[-2]:Je,[-1]:Je,32:Je},Dt={35:Ke,42:Ve,45:[Xe,Ve],60:tt,61:Xe,95:Ve,96:ot,126:ot},Et={38:at,92:lt},At={[-5]:st,[-4]:st,[-3]:st,33:gt,38:at,42:bt,60:[vt,kt],91:yt,92:[wt,lt],93:ft,95:bt,96:qt},Ct={null:[bt,Fe]},Ft={null:[42,95]},zt={null:[]};function It(e){const t={defined:[],lazy:{},constructs:function(e){const t={};let n=-1;for(;++n<e.length;)ye(t,e[n]);return t}([n,...(e||{}).extensions||[]]),content:r(qe),document:r(Se),flow:r(Ce),string:r(ze),text:r(Ie)};return t;function r(e){return function(n){return Ne(t,e,n)}}}function Mt(e){for(;!Te(e););return e}const Rt=/[\\0\\t\\n\\r]/g;function Ot(){let e,t=1,n=\"\",r=!0;return function(i,o,c){const u=[];let a,l,s,f,p;for(i=n+(\"string\"==typeof i?i.toString():new TextDecoder(o||void 0).decode(i)),s=0,n=\"\",r&&(65279===i.charCodeAt(0)&&s++,r=void 0);s<i.length;){if(Rt.lastIndex=s,a=Rt.exec(i),f=a&&void 0!==a.index?a.index:i.length,p=i.charCodeAt(f),!a){n=i.slice(s);break}if(10===p&&s===f&&e)u.push(-3),e=void 0;else switch(e&&(u.push(-5),e=void 0),s<f&&(u.push(i.slice(s,f)),t+=f-s),p){case 0:u.push(65533),t++;break;case 9:for(l=4*Math.ceil(t/4),u.push(-2);t++<l;)u.push(-1);break;case 10:u.push(-4),t=1;break;default:e=!0,t=1}s=f+1}return c&&(e&&u.push(-5),n&&u.push(n),u.push(null)),u}}var Pt=exports;for(var Nt in t)Pt[Nt]=t[Nt];t.__esModule&&Object.defineProperty(Pt,\"__esModule\",{value:!0})})();", "// @ts-check\n\n\"use strict\";\n\n// Regular expression for matching common newline characters\n// See NEWLINES_RE in markdown-it/lib/rules_core/normalize.js\nmodule.exports.newLineRe = /\\r\\n?|\\n/g;\n\n// Regular expression for matching next lines\nmodule.exports.nextLinesRe = /[\\r\\n][\\s\\S]*$/;\n", "// @ts-check\n\n\"use strict\";\n\n// @ts-ignore\nconst {\n  directive, gfmAutolinkLiteral, gfmFootnote, gfmTable, math,\n  parse, postprocess, preprocess\n  // @ts-ignore\n} = require(\"markdownlint-micromark\");\nconst { newLineRe } = require(\"./shared.js\");\n\nconst flatTokensSymbol = Symbol(\"flat-tokens\");\n\n/** @typedef {import(\"markdownlint-micromark\").Event} Event */\n/** @typedef {import(\"markdownlint-micromark\").ParseOptions} ParseOptions */\n/** @typedef {import(\"markdownlint-micromark\").TokenType} TokenType */\n/** @typedef {import(\"../lib/markdownlint.js\").MicromarkToken} Token */\n\n/**\n * Returns whether a token is an htmlFlow type containing an HTML comment.\n *\n * @param {Token} token Micromark token.\n * @returns {boolean} True iff token is htmlFlow containing a comment.\n */\nfunction isHtmlFlowComment(token) {\n  const { text, type } = token;\n  if (\n    (type === \"htmlFlow\") &&\n    text.startsWith(\"<!--\") &&\n    text.endsWith(\"-->\")\n  ) {\n    const comment = text.slice(4, -3);\n    return (\n      !comment.startsWith(\">\") &&\n      !comment.startsWith(\"->\") &&\n      !comment.endsWith(\"-\")\n      // The following condition from the CommonMark specification is commented\n      // to avoid parsing HTML comments that include \"--\" because that is NOT a\n      // condition of the HTML specification.\n      // https://spec.commonmark.org/0.30/#raw-html\n      // https://html.spec.whatwg.org/multipage/syntax.html#comments\n      // && !comment.includes(\"--\")\n    );\n  }\n  return false;\n}\n\n/**\n * Parses a Markdown document and returns Micromark events.\n *\n * @param {string} markdown Markdown document.\n * @param {ParseOptions} [micromarkOptions] Options for micromark.\n * @param {boolean} [referencesDefined] Treat references as defined.\n * @returns {Event[]} Micromark events.\n */\nfunction getMicromarkEvents(\n  markdown,\n  micromarkOptions = {},\n  referencesDefined = true\n) {\n\n  // Customize options object to add useful extensions\n  micromarkOptions.extensions = micromarkOptions.extensions || [];\n  micromarkOptions.extensions.push(\n    directive(),\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmTable(),\n    math()\n  );\n\n  // Use micromark to parse document into Events\n  const encoding = undefined;\n  const eol = true;\n  const parseContext = parse(micromarkOptions);\n  if (referencesDefined) {\n    // Customize ParseContext to treat all references as defined\n    parseContext.defined.includes = (searchElement) => searchElement.length > 0;\n  }\n  const chunks = preprocess()(markdown, encoding, eol);\n  const events = postprocess(parseContext.document().write(chunks));\n  return events;\n}\n\n/**\n * Parses a Markdown document and returns (frozen) tokens.\n *\n * @param {string} markdown Markdown document.\n * @param {ParseOptions} micromarkOptions Options for micromark.\n * @param {boolean} referencesDefined Treat references as defined.\n * @param {number} lineDelta Offset to apply to start/end line.\n * @param {Token} [ancestor] Parent of top-most tokens.\n * @returns {Token[]} Micromark tokens (frozen).\n */\nfunction micromarkParseWithOffset(\n  markdown,\n  micromarkOptions,\n  referencesDefined,\n  lineDelta,\n  ancestor\n) {\n  // Use micromark to parse document into Events\n  const events = getMicromarkEvents(\n    markdown, micromarkOptions, referencesDefined\n  );\n\n  // Create Token objects\n  const document = [];\n  let flatTokens = [];\n  /** @type {Token} */\n  const root = {\n    \"type\": \"data\",\n    \"startLine\": -1,\n    \"startColumn\": -1,\n    \"endLine\": -1,\n    \"endColumn\": -1,\n    \"text\": \"ROOT\",\n    \"children\": document,\n    \"parent\": null\n  };\n  const history = [ root ];\n  let current = root;\n  // eslint-disable-next-line jsdoc/valid-types\n  /** @type ParseOptions | null */\n  let reparseOptions = null;\n  let lines = null;\n  let skipHtmlFlowChildren = false;\n  for (const event of events) {\n    const [ kind, token, context ] = event;\n    const { type, start, end } = token;\n    const { \"column\": startColumn, \"line\": startLine } = start;\n    const { \"column\": endColumn, \"line\": endLine } = end;\n    const text = context.sliceSerialize(token);\n    if ((kind === \"enter\") && !skipHtmlFlowChildren) {\n      const previous = current;\n      history.push(previous);\n      current = {\n        type,\n        \"startLine\": startLine + lineDelta,\n        startColumn,\n        \"endLine\": endLine + lineDelta,\n        endColumn,\n        text,\n        \"children\": [],\n        \"parent\": ((previous === root) ? (ancestor || null) : previous)\n      };\n      previous.children.push(current);\n      flatTokens.push(current);\n      if ((current.type === \"htmlFlow\") && !isHtmlFlowComment(current)) {\n        skipHtmlFlowChildren = true;\n        if (!reparseOptions || !lines) {\n          reparseOptions = {\n            ...micromarkOptions,\n            \"extensions\": [\n              {\n                \"disable\": {\n                  \"null\": [ \"codeIndented\", \"htmlFlow\" ]\n                }\n              }\n            ]\n          };\n          lines = markdown.split(newLineRe);\n        }\n        const reparseMarkdown = lines\n          .slice(current.startLine - 1, current.endLine)\n          .join(\"\\n\");\n        const tokens = micromarkParseWithOffset(\n          reparseMarkdown,\n          reparseOptions,\n          referencesDefined,\n          current.startLine - 1,\n          current\n        );\n        current.children = tokens;\n        // Avoid stack overflow of Array.push(...spread)\n        // eslint-disable-next-line unicorn/prefer-spread\n        flatTokens = flatTokens.concat(tokens[flatTokensSymbol]);\n      }\n    } else if (kind === \"exit\") {\n      if (type === \"htmlFlow\") {\n        skipHtmlFlowChildren = false;\n      }\n      if (!skipHtmlFlowChildren) {\n        Object.freeze(current.children);\n        Object.freeze(current);\n        // @ts-ignore\n        current = history.pop();\n      }\n    }\n  }\n\n  // Return document\n  Object.defineProperty(document, flatTokensSymbol, { \"value\": flatTokens });\n  Object.freeze(document);\n  return document;\n}\n\n/**\n * Parses a Markdown document and returns (frozen) tokens.\n *\n * @param {string} markdown Markdown document.\n * @param {ParseOptions} [micromarkOptions] Options for micromark.\n * @param {boolean} [referencesDefined] Treat references as defined.\n * @returns {Token[]} Micromark tokens (frozen).\n */\nfunction micromarkParse(\n  markdown,\n  micromarkOptions = {},\n  referencesDefined = true\n) {\n  return micromarkParseWithOffset(\n    markdown,\n    micromarkOptions,\n    referencesDefined,\n    0\n  );\n}\n\n/**\n * @callback AllowedPredicate\n * @param {Token} token Micromark token.\n * @returns {boolean} True iff allowed.\n */\n\n/**\n * @callback TransformPredicate\n * @param {Token} token Micromark token.\n * @returns {Token[]} Child tokens.\n */\n\n/**\n * Filter a list of Micromark tokens by predicate.\n *\n * @param {Token[]} tokens Micromark tokens.\n * @param {AllowedPredicate} [allowed] Allowed token predicate.\n * @param {TransformPredicate} [transformChildren] Transform predicate.\n * @returns {Token[]} Filtered tokens.\n */\nfunction filterByPredicate(tokens, allowed, transformChildren) {\n  allowed = allowed || (() => true);\n  const result = [];\n  const queue = [\n    {\n      \"array\": tokens,\n      \"index\": 0\n    }\n  ];\n  while (queue.length > 0) {\n    const current = queue[queue.length - 1];\n    const { array, index } = current;\n    if (index < array.length) {\n      const token = array[current.index++];\n      if (allowed(token)) {\n        result.push(token);\n      }\n      const { children } = token;\n      if (children.length > 0) {\n        const transformed =\n          transformChildren ? transformChildren(token) : children;\n        queue.push(\n          {\n            \"array\": transformed,\n            \"index\": 0\n          }\n        );\n      }\n    } else {\n      queue.pop();\n    }\n  }\n  return result;\n}\n\n/**\n * Filter a list of Micromark tokens by type.\n *\n * @param {Token[]} tokens Micromark tokens.\n * @param {TokenType[]} types Types to allow.\n * @returns {Token[]} Filtered tokens.\n */\nfunction filterByTypes(tokens, types) {\n  const predicate = (token) => types.includes(token.type);\n  const flatTokens = tokens[flatTokensSymbol];\n  if (flatTokens) {\n    return flatTokens.filter(predicate);\n  }\n  return filterByPredicate(tokens, predicate);\n}\n\n/**\n * Gets the heading level of a Micromark heading tokan.\n *\n * @param {Token} heading Micromark heading token.\n * @returns {number} Heading level.\n */\nfunction getHeadingLevel(heading) {\n  const headingSequence = filterByTypes(\n    heading.children,\n    [ \"atxHeadingSequence\", \"setextHeadingLineSequence\" ]\n  );\n  let level = 1;\n  const { text } = headingSequence[0];\n  if (text[0] === \"#\") {\n    level = Math.min(text.length, 6);\n  } else if (text[0] === \"-\") {\n    level = 2;\n  }\n  return level;\n}\n\n/**\n * HTML tag information.\n *\n * @typedef {Object} HtmlTagInfo\n * @property {boolean} close True iff close tag.\n * @property {string} name Tag name.\n */\n\n/**\n * Gets information about the tag in an HTML token.\n *\n * @param {Token} token Micromark token.\n * @returns {HtmlTagInfo | null} HTML tag information.\n */\nfunction getHtmlTagInfo(token) {\n  const htmlTagNameRe = /^<([^!>][^/\\s>]*)/;\n  if (token.type === \"htmlText\") {\n    const match = htmlTagNameRe.exec(token.text);\n    if (match) {\n      const name = match[1];\n      const close = name.startsWith(\"/\");\n      return {\n        close,\n        \"name\": close ? name.slice(1) : name\n      };\n    }\n  }\n  return null;\n}\n\n/**\n * Gets the nearest parent of the specified type for a Micromark token.\n *\n * @param {Token} token Micromark token.\n * @param {TokenType[]} types Types to allow.\n * @returns {Token | null} Parent token.\n */\nfunction getTokenParentOfType(token, types) {\n  /** @type {Token | null} */\n  let current = token;\n  while ((current = current.parent) && !types.includes(current.type)) {\n    // Empty\n  }\n  return current;\n}\n\n/**\n * Get the text of the first match from a list of Micromark tokens by type.\n *\n * @param {Token[]} tokens Micromark tokens.\n * @param {TokenType} type Type to match.\n * @returns {string | null} Text of token.\n */\nfunction getTokenTextByType(tokens, type) {\n  const filtered = tokens.filter((token) => token.type === type);\n  return (filtered.length > 0) ? filtered[0].text : null;\n}\n\n/**\n * Determines if a Micromark token has an htmlFlow-type parent.\n *\n * @param {Token} token Micromark token.\n * @returns {boolean} True iff the token has an htmlFlow-type parent.\n */\nfunction inHtmlFlow(token) {\n  return getTokenParentOfType(token, [ \"htmlFlow\" ]) !== null;\n}\n\n/**\n * Determines a list of Micromark tokens matches and returns a subset.\n *\n * @param {Token[]} tokens Micromark tokens.\n * @param {TokenType[]} matchTypes Types to match.\n * @param {TokenType[]} [resultTypes] Types to return.\n * @returns {Token[] | null} Matching tokens.\n */\nfunction matchAndGetTokensByType(tokens, matchTypes, resultTypes) {\n  if (tokens.length !== matchTypes.length) {\n    return null;\n  }\n  resultTypes = resultTypes || matchTypes;\n  const result = [];\n  // eslint-disable-next-line unicorn/no-for-loop\n  for (let i = 0; i < matchTypes.length; i++) {\n    if (tokens[i].type !== matchTypes[i]) {\n      return null;\n    } else if (resultTypes.includes(matchTypes[i])) {\n      result.push(tokens[i]);\n    }\n  }\n  return result;\n}\n\n/**\n * Returns the specified token iff it is of the desired type.\n *\n * @param {Token} token Micromark token candidate.\n * @param {TokenType} type Desired type.\n * @returns {Token | null} Token instance.\n */\nfunction tokenIfType(token, type) {\n  return (token && (token.type === type)) ? token : null;\n}\n\n/**\n * Set containing token types that do not contain content.\n *\n * @type {Set<TokenType>}\n */\nconst nonContentTokens = new Set([\n  \"blockQuoteMarker\",\n  \"blockQuotePrefix\",\n  \"blockQuotePrefixWhitespace\",\n  \"lineEnding\",\n  \"lineEndingBlank\",\n  \"linePrefix\",\n  \"listItemIndent\"\n]);\n\nmodule.exports = {\n  \"parse\": micromarkParse,\n  filterByPredicate,\n  filterByTypes,\n  getHeadingLevel,\n  getHtmlTagInfo,\n  getMicromarkEvents,\n  getTokenParentOfType,\n  getTokenTextByType,\n  inHtmlFlow,\n  isHtmlFlowComment,\n  matchAndGetTokensByType,\n  nonContentTokens,\n  tokenIfType\n};\n", "// @ts-check\n\n\"use strict\";\n\nmodule.exports.deprecatedRuleNames = [];\nmodule.exports.fixableRuleNames = [\n  \"MD004\", \"MD005\", \"MD007\", \"MD009\", \"MD010\", \"MD011\",\n  \"MD012\", \"MD014\", \"MD018\", \"MD019\", \"MD020\", \"MD021\",\n  \"MD022\", \"MD023\", \"MD026\", \"MD027\", \"MD030\", \"MD031\",\n  \"MD032\", \"MD034\", \"MD037\", \"MD038\", \"MD039\", \"MD044\",\n  \"MD047\", \"MD049\", \"MD050\", \"MD051\", \"MD053\", \"MD054\"\n];\nmodule.exports.homepage = \"https://github.com/DavidAnson/markdownlint\";\nmodule.exports.version = \"0.34.0\";\n", "// @ts-check\n\n\"use strict\";\n\nconst micromark = require(\"./micromark.cjs\");\n\nconst { newLineRe, nextLinesRe } = require(\"./shared.js\");\n\nmodule.exports.newLineRe = newLineRe;\nmodule.exports.nextLinesRe = nextLinesRe;\n\n// Regular expression for matching common front matter (YAML and TOML)\nmodule.exports.frontMatterRe =\n  /((^---\\s*$[\\s\\S]+?^---\\s*)|(^\\+\\+\\+\\s*$[\\s\\S]+?^(\\+\\+\\+|\\.\\.\\.)\\s*)|(^\\{\\s*$[\\s\\S]+?^\\}\\s*))(\\r\\n|\\r|\\n|$)/m;\n\n// Regular expression for matching the start of inline disable/enable comments\nconst inlineCommentStartRe =\n  /(<!--\\s*markdownlint-(disable|enable|capture|restore|disable-file|enable-file|disable-line|disable-next-line|configure-file))(?:\\s|-->)/gi;\nmodule.exports.inlineCommentStartRe = inlineCommentStartRe;\n\n// Regular expressions for range matching\nmodule.exports.listItemMarkerRe = /^([\\s>]*)(?:[*+-]|\\d+[.)])\\s+/;\nmodule.exports.orderedListItemMarkerRe = /^[\\s>]*0*(\\d+)[.)]/;\n\n// Regular expression for blockquote prefixes\nconst blockquotePrefixRe = /^[>\\s]*/;\nmodule.exports.blockquotePrefixRe = blockquotePrefixRe;\n\n// Regular expression for link reference definitions\nconst linkReferenceDefinitionRe = /^ {0,3}\\[([^\\]]*[^\\\\])\\]:/;\nmodule.exports.linkReferenceDefinitionRe = linkReferenceDefinitionRe;\n\n// Regular expression for identifying an HTML entity at the end of a line\nmodule.exports.endOfLineHtmlEntityRe =\n  /&(?:#\\d+|#[xX][\\da-fA-F]+|[a-zA-Z]{2,31}|blk\\d{2}|emsp1[34]|frac\\d{2}|sup\\d|there4);$/;\n\n// Regular expression for identifying a GitHub emoji code at the end of a line\nmodule.exports.endOfLineGemojiCodeRe =\n  /:(?:[abmovx]|[-+]1|100|1234|(?:1st|2nd|3rd)_place_medal|8ball|clock\\d{1,4}|e-mail|non-potable_water|o2|t-rex|u5272|u5408|u55b6|u6307|u6708|u6709|u6e80|u7121|u7533|u7981|u7a7a|[a-z]{2,15}2?|[a-z]{1,14}(?:_[a-z\\d]{1,16})+):$/;\n\n// All punctuation characters (normal and full-width)\nconst allPunctuation = \".,;:!?\u3002\uFF0C\uFF1B\uFF1A\uFF01\uFF1F\";\nmodule.exports.allPunctuation = allPunctuation;\n\n// All punctuation characters without question mark (normal and full-width)\nmodule.exports.allPunctuationNoQuestion = allPunctuation.replace(/[?\uFF1F]/gu, \"\");\n\n/**\n * Returns true iff the input is a Number.\n *\n * @param {Object} obj Object of unknown type.\n * @returns {boolean} True iff obj is a Number.\n */\nfunction isNumber(obj) {\n  return typeof obj === \"number\";\n}\nmodule.exports.isNumber = isNumber;\n\n/**\n * Returns true iff the input is a String.\n *\n * @param {Object} obj Object of unknown type.\n * @returns {boolean} True iff obj is a String.\n */\nfunction isString(obj) {\n  return typeof obj === \"string\";\n}\nmodule.exports.isString = isString;\n\n/**\n * Returns true iff the input String is empty.\n *\n * @param {string} str String of unknown length.\n * @returns {boolean} True iff the input String is empty.\n */\nfunction isEmptyString(str) {\n  return str.length === 0;\n}\nmodule.exports.isEmptyString = isEmptyString;\n\n/**\n * Returns true iff the input is an Object.\n *\n * @param {Object} obj Object of unknown type.\n * @returns {boolean} True iff obj is an Object.\n */\nfunction isObject(obj) {\n  return !!obj && (typeof obj === \"object\") && !Array.isArray(obj);\n}\nmodule.exports.isObject = isObject;\n\n/**\n * Returns true iff the input is a URL.\n *\n * @param {Object} obj Object of unknown type.\n * @returns {boolean} True iff obj is a URL.\n */\nfunction isUrl(obj) {\n  return !!obj && (Object.getPrototypeOf(obj) === URL.prototype);\n}\nmodule.exports.isUrl = isUrl;\n\n/**\n * Clones the input if it is an Array.\n *\n * @param {Object} arr Object of unknown type.\n * @returns {Object} Clone of obj iff obj is an Array.\n */\nfunction cloneIfArray(arr) {\n  return Array.isArray(arr) ? [ ...arr ] : arr;\n}\nmodule.exports.cloneIfArray = cloneIfArray;\n\n/**\n * Clones the input if it is a URL.\n *\n * @param {Object} url Object of unknown type.\n * @returns {Object} Clone of obj iff obj is a URL.\n */\nfunction cloneIfUrl(url) {\n  return isUrl(url) ? new URL(url) : url;\n}\nmodule.exports.cloneIfUrl = cloneIfUrl;\n\n/**\n * Gets a Regular Expression for matching the specified HTML attribute.\n *\n * @param {string} name HTML attribute name.\n * @returns {RegExp} Regular Expression for matching.\n */\nmodule.exports.getHtmlAttributeRe = function getHtmlAttributeRe(name) {\n  return new RegExp(`\\\\s${name}\\\\s*=\\\\s*['\"]?([^'\"\\\\s>]*)`, \"iu\");\n};\n\n/**\n * Returns true iff the input line is blank (contains nothing, whitespace, or\n * comments (unclosed start/end comments allowed)).\n *\n * @param {string} line Input line.\n * @returns {boolean} True iff line is blank.\n */\nfunction isBlankLine(line) {\n  const startComment = \"<!--\";\n  const endComment = \"-->\";\n  const removeComments = (s) => {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const start = s.indexOf(startComment);\n      const end = s.indexOf(endComment);\n      if ((end !== -1) && ((start === -1) || (end < start))) {\n        // Unmatched end comment is first\n        s = s.slice(end + endComment.length);\n      } else if ((start !== -1) && (end !== -1)) {\n        // Start comment is before end comment\n        s = s.slice(0, start) + s.slice(end + endComment.length);\n      } else if ((start !== -1) && (end === -1)) {\n        // Unmatched start comment is last\n        s = s.slice(0, start);\n      } else {\n        // No more comments to remove\n        return s;\n      }\n    }\n  };\n  return (\n    !line ||\n    !line.trim() ||\n    !removeComments(line).replace(/>/g, \"\").trim()\n  );\n}\nmodule.exports.isBlankLine = isBlankLine;\n\n/**\n * Compare function for Array.prototype.sort for ascending order of numbers.\n *\n * @param {number} a First number.\n * @param {number} b Second number.\n * @returns {number} Positive value if a>b, negative value if b<a, 0 otherwise.\n */\nmodule.exports.numericSortAscending = function numericSortAscending(a, b) {\n  return a - b;\n};\n\n// Returns true iff the sorted array contains the specified element\nmodule.exports.includesSorted = function includesSorted(array, element) {\n  let left = 0;\n  let right = array.length - 1;\n  while (left <= right) {\n    // eslint-disable-next-line no-bitwise\n    const mid = (left + right) >> 1;\n    if (array[mid] < element) {\n      left = mid + 1;\n    } else if (array[mid] > element) {\n      right = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Replaces the content of properly-formatted CommonMark comments with \".\"\n// This preserves the line/column information for the rest of the document\n// https://spec.commonmark.org/0.29/#html-blocks\n// https://spec.commonmark.org/0.29/#html-comment\nconst htmlCommentBegin = \"<!--\";\nconst htmlCommentEnd = \"-->\";\nconst safeCommentCharacter = \".\";\nconst startsWithPipeRe = /^ *\\|/;\nconst notCrLfRe = /[^\\r\\n]/g;\nconst notSpaceCrLfRe = /[^ \\r\\n]/g;\nconst trailingSpaceRe = / +[\\r\\n]/g;\nconst replaceTrailingSpace = (s) => s.replace(notCrLfRe, safeCommentCharacter);\nmodule.exports.clearHtmlCommentText = function clearHtmlCommentText(text) {\n  let i = 0;\n  while ((i = text.indexOf(htmlCommentBegin, i)) !== -1) {\n    const j = text.indexOf(htmlCommentEnd, i + 2);\n    if (j === -1) {\n      // Un-terminated comments are treated as text\n      break;\n    }\n    // If the comment has content...\n    if (j > i + htmlCommentBegin.length) {\n      const content = text.slice(i + htmlCommentBegin.length, j);\n      const lastLf = text.lastIndexOf(\"\\n\", i) + 1;\n      const preText = text.slice(lastLf, i);\n      const isBlock = preText.trim().length === 0;\n      const couldBeTable = startsWithPipeRe.test(preText);\n      const spansTableCells = couldBeTable && content.includes(\"\\n\");\n      const isValid =\n        isBlock ||\n        !(\n          spansTableCells ||\n          content.startsWith(\">\") ||\n          content.startsWith(\"->\") ||\n          content.endsWith(\"-\") ||\n          content.includes(\"--\")\n        );\n      // If a valid block/inline comment...\n      if (isValid) {\n        const clearedContent = content\n          .replace(notSpaceCrLfRe, safeCommentCharacter)\n          .replace(trailingSpaceRe, replaceTrailingSpace);\n        text =\n          text.slice(0, i + htmlCommentBegin.length) +\n          clearedContent +\n          text.slice(j);\n      }\n    }\n    i = j + htmlCommentEnd.length;\n  }\n  return text;\n};\n\n// Escapes a string for use in a RegExp\nmodule.exports.escapeForRegExp = function escapeForRegExp(str) {\n  return str.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n};\n\n/**\n * Return the string representation of a fence markup character.\n *\n * @param {string} markup Fence string.\n * @returns {string} String representation.\n */\nmodule.exports.fencedCodeBlockStyleFor =\n  function fencedCodeBlockStyleFor(markup) {\n    switch (markup[0]) {\n      case \"~\":\n        return \"tilde\";\n      default:\n        return \"backtick\";\n    }\n  };\n\n/**\n * Return the string representation of a emphasis or strong markup character.\n *\n * @param {string} markup Emphasis or strong string.\n * @returns {\"asterisk\" | \"underscore\"} String representation.\n */\nmodule.exports.emphasisOrStrongStyleFor =\n  function emphasisOrStrongStyleFor(markup) {\n    switch (markup[0]) {\n      case \"*\":\n        return \"asterisk\";\n      default:\n        return \"underscore\";\n    }\n  };\n\n/**\n * Return the number of characters of indent for a token.\n *\n * @param {Object} token MarkdownItToken instance.\n * @returns {number} Characters of indent.\n */\nfunction indentFor(token) {\n  const line = token.line.replace(/^[\\s>]*(> |>)/, \"\");\n  return line.length - line.trimStart().length;\n}\nmodule.exports.indentFor = indentFor;\n\n// Returns the heading style for a heading token\nmodule.exports.headingStyleFor = function headingStyleFor(token) {\n  if ((token.map[1] - token.map[0]) === 1) {\n    if (/[^\\\\]#\\s*$/.test(token.line)) {\n      return \"atx_closed\";\n    }\n    return \"atx\";\n  }\n  return \"setext\";\n};\n\n/**\n * Return the string representation of an unordered list marker.\n *\n * @param {Object} token MarkdownItToken instance.\n * @returns {\"asterisk\" | \"dash\" | \"plus\"} String representation.\n */\nmodule.exports.unorderedListStyleFor = function unorderedListStyleFor(token) {\n  switch (token.markup) {\n    case \"-\":\n      return \"dash\";\n    case \"+\":\n      return \"plus\";\n    // case \"*\":\n    default:\n      return \"asterisk\";\n  }\n};\n\n/**\n * @callback TokenCallback\n * @param {MarkdownItToken} token Current token.\n * @returns {void}\n */\n\n/**\n * Calls the provided function for each matching token.\n *\n * @param {Object} params RuleParams instance.\n * @param {string} type Token type identifier.\n * @param {TokenCallback} handler Callback function.\n * @returns {void}\n */\nfunction filterTokens(params, type, handler) {\n  for (const token of params.parsers.markdownit.tokens) {\n    if (token.type === type) {\n      handler(token);\n    }\n  }\n}\nmodule.exports.filterTokens = filterTokens;\n\n/**\n * @typedef {Array} LineMetadata\n */\n\n/**\n * Gets a line metadata array.\n *\n * @param {Object} params RuleParams instance.\n * @returns {LineMetadata} Line metadata.\n */\nfunction getLineMetadata(params) {\n  const lineMetadata = params.lines.map(\n    (line, index) => [ line, index, false, 0, false, false, false ]\n  );\n  filterTokens(params, \"fence\", (token) => {\n    lineMetadata[token.map[0]][3] = 1;\n    lineMetadata[token.map[1] - 1][3] = -1;\n    for (let i = token.map[0] + 1; i < token.map[1] - 1; i++) {\n      lineMetadata[i][2] = true;\n    }\n  });\n  filterTokens(params, \"code_block\", (token) => {\n    for (let i = token.map[0]; i < token.map[1]; i++) {\n      lineMetadata[i][2] = true;\n    }\n  });\n  filterTokens(params, \"table_open\", (token) => {\n    for (let i = token.map[0]; i < token.map[1]; i++) {\n      lineMetadata[i][4] = true;\n    }\n  });\n  filterTokens(params, \"list_item_open\", (token) => {\n    let count = 1;\n    for (let i = token.map[0]; i < token.map[1]; i++) {\n      lineMetadata[i][5] = count;\n      count++;\n    }\n  });\n  filterTokens(params, \"hr\", (token) => {\n    lineMetadata[token.map[0]][6] = true;\n  });\n  return lineMetadata;\n}\nmodule.exports.getLineMetadata = getLineMetadata;\n\n/**\n * @callback EachLineCallback\n * @param {string} line Line content.\n * @param {number} lineIndex Line index (0-based).\n * @param {boolean} inCode Iff in a code block.\n * @param {number} onFence + if open, - if closed, 0 otherwise.\n * @param {boolean} inTable Iff in a table.\n * @param {boolean} inItem Iff in a list item.\n * @param {boolean} inBreak Iff in semantic break.\n * @returns {void}\n */\n\n/**\n * Calls the provided function for each line.\n *\n * @param {LineMetadata} lineMetadata Line metadata object.\n * @param {EachLineCallback} handler Function taking (line, lineIndex, inCode,\n * onFence, inTable, inItem, inBreak).\n * @returns {void}\n */\nfunction forEachLine(lineMetadata, handler) {\n  for (const metadata of lineMetadata) {\n    // @ts-ignore\n    handler(...metadata);\n  }\n}\nmodule.exports.forEachLine = forEachLine;\n\n// Returns (nested) lists as a flat array (in order)\nmodule.exports.flattenLists = function flattenLists(tokens) {\n  const flattenedLists = [];\n  const stack = [];\n  let current = null;\n  let nesting = 0;\n  const nestingStack = [];\n  let lastWithMap = { \"map\": [ 0, 1 ] };\n  for (const token of tokens) {\n    if ((token.type === \"bullet_list_open\") ||\n        (token.type === \"ordered_list_open\")) {\n      // Save current context and start a new one\n      stack.push(current);\n      current = {\n        \"unordered\": (token.type === \"bullet_list_open\"),\n        \"parentsUnordered\": !current ||\n          (current.unordered && current.parentsUnordered),\n        \"open\": token,\n        \"indent\": indentFor(token),\n        \"parentIndent\": (current && current.indent) || 0,\n        \"items\": [],\n        \"nesting\": nesting,\n        \"lastLineIndex\": -1,\n        \"insert\": flattenedLists.length\n      };\n      nesting++;\n    } else if ((token.type === \"bullet_list_close\") ||\n               (token.type === \"ordered_list_close\")) {\n      // Finalize current context and restore previous\n      current.lastLineIndex = lastWithMap.map[1];\n      flattenedLists.splice(current.insert, 0, current);\n      delete current.insert;\n      current = stack.pop();\n      nesting--;\n    } else if (token.type === \"list_item_open\") {\n      // Add list item\n      current.items.push(token);\n    } else if (token.type === \"blockquote_open\") {\n      nestingStack.push(nesting);\n      nesting = 0;\n    } else if (token.type === \"blockquote_close\") {\n      nesting = nestingStack.pop() || 0;\n    }\n    if (token.map) {\n      // Track last token with map\n      lastWithMap = token;\n    }\n  }\n  return flattenedLists;\n};\n\n// Calls the provided function for each heading's content\nmodule.exports.forEachHeading = function forEachHeading(params, handler) {\n  let heading = null;\n  for (const token of params.parsers.markdownit.tokens) {\n    if (token.type === \"heading_open\") {\n      heading = token;\n    } else if (token.type === \"heading_close\") {\n      heading = null;\n    } else if ((token.type === \"inline\") && heading) {\n      handler(heading, token.content, token);\n    }\n  }\n};\n\n/**\n * @callback InlineCodeSpanCallback\n * @param {string} code Code content.\n * @param {number} lineIndex Line index (0-based).\n * @param {number} columnIndex Column index (0-based).\n * @param {number} ticks Count of backticks.\n * @returns {void}\n */\n\n/**\n * Calls the provided function for each inline code span's content.\n *\n * @param {string} input Markdown content.\n * @param {InlineCodeSpanCallback} handler Callback function taking (code,\n * lineIndex, columnIndex, ticks).\n * @returns {void}\n */\nfunction forEachInlineCodeSpan(input, handler) {\n  const backtickRe = /`+/g;\n  let match = null;\n  const backticksLengthAndIndex = [];\n  while ((match = backtickRe.exec(input)) !== null) {\n    backticksLengthAndIndex.push([ match[0].length, match.index ]);\n  }\n  const newLinesIndex = [];\n  while ((match = newLineRe.exec(input)) !== null) {\n    newLinesIndex.push(match.index);\n  }\n  let lineIndex = 0;\n  let lineStartIndex = 0;\n  let k = 0;\n  for (let i = 0; i < backticksLengthAndIndex.length - 1; i++) {\n    const [ startLength, startIndex ] = backticksLengthAndIndex[i];\n    if ((startIndex === 0) || (input[startIndex - 1] !== \"\\\\\")) {\n      for (let j = i + 1; j < backticksLengthAndIndex.length; j++) {\n        const [ endLength, endIndex ] = backticksLengthAndIndex[j];\n        if (startLength === endLength) {\n          for (; k < newLinesIndex.length; k++) {\n            const newLineIndex = newLinesIndex[k];\n            if (startIndex < newLineIndex) {\n              break;\n            }\n            lineIndex++;\n            lineStartIndex = newLineIndex + 1;\n          }\n          const columnIndex = startIndex - lineStartIndex + startLength;\n          handler(\n            input.slice(startIndex + startLength, endIndex),\n            lineIndex,\n            columnIndex,\n            startLength\n          );\n          i = j;\n          break;\n        }\n      }\n    }\n  }\n}\nmodule.exports.forEachInlineCodeSpan = forEachInlineCodeSpan;\n\n/**\n * Adds ellipsis to the left/right/middle of the specified text.\n *\n * @param {string} text Text to ellipsify.\n * @param {boolean} [start] True iff the start of the text is important.\n * @param {boolean} [end] True iff the end of the text is important.\n * @returns {string} Ellipsified text.\n */\nfunction ellipsify(text, start, end) {\n  if (text.length <= 30) {\n    // Nothing to do\n  } else if (start && end) {\n    text = text.slice(0, 15) + \"...\" + text.slice(-15);\n  } else if (end) {\n    text = \"...\" + text.slice(-30);\n  } else {\n    text = text.slice(0, 30) + \"...\";\n  }\n  return text;\n}\nmodule.exports.ellipsify = ellipsify;\n\n/**\n * Adds a generic error object via the onError callback.\n *\n * @param {Object} onError RuleOnError instance.\n * @param {number} lineNumber Line number.\n * @param {string} [detail] Error details.\n * @param {string} [context] Error context.\n * @param {number[]} [range] Column and length of error.\n * @param {Object} [fixInfo] RuleOnErrorFixInfo instance.\n * @returns {void}\n */\nfunction addError(onError, lineNumber, detail, context, range, fixInfo) {\n  onError({\n    lineNumber,\n    detail,\n    context,\n    range,\n    fixInfo\n  });\n}\nmodule.exports.addError = addError;\n\n// Adds an error object with details conditionally via the onError callback\nmodule.exports.addErrorDetailIf = function addErrorDetailIf(\n  onError, lineNumber, expected, actual, detail, context, range, fixInfo) {\n  if (expected !== actual) {\n    addError(\n      onError,\n      lineNumber,\n      \"Expected: \" + expected + \"; Actual: \" + actual +\n        (detail ? \"; \" + detail : \"\"),\n      context,\n      range,\n      fixInfo);\n  }\n};\n\n// Adds an error object with context via the onError callback\nmodule.exports.addErrorContext = function addErrorContext(\n  onError, lineNumber, context, left, right, range, fixInfo) {\n  context = ellipsify(context, left, right);\n  addError(onError, lineNumber, undefined, context, range, fixInfo);\n};\n\n/**\n * Returns an array of code block and span content ranges.\n *\n * @param {Object} params RuleParams instance.\n * @param {Object} lineMetadata Line metadata object.\n * @returns {number[][]} Array of ranges (lineIndex, columnIndex, length).\n */\nmodule.exports.codeBlockAndSpanRanges = (params, lineMetadata) => {\n  const exclusions = [];\n  // Add code block ranges (excludes fences)\n  forEachLine(lineMetadata, (line, lineIndex, inCode, onFence) => {\n    if (inCode && !onFence) {\n      exclusions.push([ lineIndex, 0, line.length ]);\n    }\n  });\n  // Add code span ranges (excludes ticks)\n  filterTokens(params, \"inline\", (token) => {\n    if (token.children.some((child) => child.type === \"code_inline\")) {\n      const tokenLines = params.lines.slice(token.map[0], token.map[1]);\n      forEachInlineCodeSpan(\n        tokenLines.join(\"\\n\"),\n        (code, lineIndex, columnIndex) => {\n          const codeLines = code.split(newLineRe);\n          for (const [ i, line ] of codeLines.entries()) {\n            exclusions.push([\n              token.lineNumber - 1 + lineIndex + i,\n              i ? 0 : columnIndex,\n              line.length\n            ]);\n          }\n        }\n      );\n    }\n  });\n  return exclusions;\n};\n\n/**\n * Determines whether the specified range is within another range.\n *\n * @param {number[][]} ranges Array of ranges (line, index, length).\n * @param {number} lineIndex Line index to check.\n * @param {number} index Index to check.\n * @param {number} length Length to check.\n * @returns {boolean} True iff the specified range is within.\n */\nconst withinAnyRange = (ranges, lineIndex, index, length) => (\n  !ranges.every((span) => (\n    (lineIndex !== span[0]) ||\n    (index < span[1]) ||\n    (index + length > span[1] + span[2])\n  ))\n);\nmodule.exports.withinAnyRange = withinAnyRange;\n\n// Returns a range object for a line by applying a RegExp\nmodule.exports.rangeFromRegExp = function rangeFromRegExp(line, regexp) {\n  let range = null;\n  const match = line.match(regexp);\n  if (match) {\n    const column = match.index + 1;\n    const length = match[0].length;\n    range = [ column, length ];\n  }\n  return range;\n};\n\n// Determines if the front matter includes a title\nmodule.exports.frontMatterHasTitle =\n  function frontMatterHasTitle(frontMatterLines, frontMatterTitlePattern) {\n    const ignoreFrontMatter =\n      (frontMatterTitlePattern !== undefined) && !frontMatterTitlePattern;\n    const frontMatterTitleRe =\n      new RegExp(\n        String(frontMatterTitlePattern || \"^\\\\s*\\\"?title\\\"?\\\\s*[:=]\"),\n        \"i\"\n      );\n    return !ignoreFrontMatter &&\n      frontMatterLines.some((line) => frontMatterTitleRe.test(line));\n  };\n\n/**\n * Returns an object with information about reference links and images.\n *\n * @param {import(\"../helpers/micromark.cjs\").Token[]} tokens Micromark tokens.\n * @returns {Object} Reference link/image data.\n */\nfunction getReferenceLinkImageData(tokens) {\n  const normalizeReference = (s) => s.toLowerCase().trim().replace(/\\s+/g, \" \");\n  const definitions = new Map();\n  const definitionLineIndices = [];\n  const duplicateDefinitions = [];\n  const references = new Map();\n  const shortcuts = new Map();\n  const filteredTokens =\n    micromark.filterByTypes(\n      tokens,\n      [\n        // definitionLineIndices\n        \"definition\", \"gfmFootnoteDefinition\",\n        // definitions and definitionLineIndices\n        \"definitionLabelString\", \"gfmFootnoteDefinitionLabelString\",\n        // references and shortcuts\n        \"gfmFootnoteCall\", \"image\", \"link\"\n      ]\n    );\n  for (const token of filteredTokens) {\n    let labelPrefix = \"\";\n    // eslint-disable-next-line default-case\n    switch (token.type) {\n      case \"definition\":\n      case \"gfmFootnoteDefinition\":\n        // definitionLineIndices\n        for (let i = token.startLine; i <= token.endLine; i++) {\n          definitionLineIndices.push(i - 1);\n        }\n        break;\n      case \"gfmFootnoteDefinitionLabelString\":\n        labelPrefix = \"^\";\n      case \"definitionLabelString\": // eslint-disable-line no-fallthrough\n        {\n          // definitions and definitionLineIndices\n          const reference = normalizeReference(`${labelPrefix}${token.text}`);\n          if (definitions.has(reference)) {\n            duplicateDefinitions.push([ reference, token.startLine - 1 ]);\n          } else {\n            let destinationString = null;\n            const parent =\n              micromark.getTokenParentOfType(token, [ \"definition\" ]);\n            if (parent) {\n              destinationString = micromark.getTokenTextByType(\n                micromark.filterByPredicate(parent.children),\n                \"definitionDestinationString\"\n              );\n            }\n            definitions.set(\n              reference,\n              [ token.startLine - 1, destinationString ]\n            );\n          }\n        }\n        break;\n      case \"gfmFootnoteCall\":\n      case \"image\":\n      case \"link\":\n        {\n          let isShortcut = false;\n          let isFullOrCollapsed = false;\n          let labelText = null;\n          let referenceStringText = null;\n          const shortcutCandidate =\n            micromark.matchAndGetTokensByType(token.children, [ \"label\" ]);\n          if (shortcutCandidate) {\n            labelText =\n              micromark.getTokenTextByType(\n                shortcutCandidate[0].children, \"labelText\"\n              );\n            isShortcut = (labelText !== null);\n          }\n          const fullAndCollapsedCandidate =\n            micromark.matchAndGetTokensByType(\n              token.children, [ \"label\", \"reference\" ]\n            );\n          if (fullAndCollapsedCandidate) {\n            labelText =\n              micromark.getTokenTextByType(\n                fullAndCollapsedCandidate[0].children, \"labelText\"\n              );\n            referenceStringText =\n              micromark.getTokenTextByType(\n                fullAndCollapsedCandidate[1].children, \"referenceString\"\n              );\n            isFullOrCollapsed = (labelText !== null);\n          }\n          const footnote = micromark.matchAndGetTokensByType(\n            token.children,\n            [\n              \"gfmFootnoteCallLabelMarker\", \"gfmFootnoteCallMarker\",\n              \"gfmFootnoteCallString\", \"gfmFootnoteCallLabelMarker\"\n            ],\n            [ \"gfmFootnoteCallMarker\", \"gfmFootnoteCallString\" ]\n          );\n          if (footnote) {\n            const callMarkerText = footnote[0].text;\n            const callString = footnote[1].text;\n            labelText = `${callMarkerText}${callString}`;\n            isShortcut = true;\n          }\n          // Track shortcuts separately due to ambiguity in \"text [text] text\"\n          if (isShortcut || isFullOrCollapsed) {\n            const referenceDatum = [\n              token.startLine - 1,\n              token.startColumn - 1,\n              token.text.length,\n              // @ts-ignore\n              labelText.length,\n              (referenceStringText || \"\").length\n            ];\n            const reference =\n              normalizeReference(referenceStringText || labelText);\n            const dictionary = isShortcut ? shortcuts : references;\n            const referenceData = dictionary.get(reference) || [];\n            referenceData.push(referenceDatum);\n            dictionary.set(reference, referenceData);\n          }\n        }\n        break;\n    }\n  }\n  return {\n    references,\n    shortcuts,\n    definitions,\n    duplicateDefinitions,\n    definitionLineIndices\n  };\n}\nmodule.exports.getReferenceLinkImageData = getReferenceLinkImageData;\n\n/**\n * Gets the most common line ending, falling back to the platform default.\n *\n * @param {string} input Markdown content to analyze.\n * @param {Object} [os] Node.js \"os\" module.\n * @returns {string} Preferred line ending.\n */\nfunction getPreferredLineEnding(input, os) {\n  let cr = 0;\n  let lf = 0;\n  let crlf = 0;\n  const endings = input.match(newLineRe) || [];\n  for (const ending of endings) {\n    // eslint-disable-next-line default-case\n    switch (ending) {\n      case \"\\r\":\n        cr++;\n        break;\n      case \"\\n\":\n        lf++;\n        break;\n      case \"\\r\\n\":\n        crlf++;\n        break;\n    }\n  }\n  let preferredLineEnding = null;\n  if (!cr && !lf && !crlf) {\n    preferredLineEnding = (os && os.EOL) || \"\\n\";\n  } else if ((lf >= crlf) && (lf >= cr)) {\n    preferredLineEnding = \"\\n\";\n  } else if (crlf >= cr) {\n    preferredLineEnding = \"\\r\\n\";\n  } else {\n    preferredLineEnding = \"\\r\";\n  }\n  return preferredLineEnding;\n}\nmodule.exports.getPreferredLineEnding = getPreferredLineEnding;\n\n/**\n * Normalizes the fields of a RuleOnErrorFixInfo instance.\n *\n * @param {Object} fixInfo RuleOnErrorFixInfo instance.\n * @param {number} [lineNumber] Line number.\n * @returns {Object} Normalized RuleOnErrorFixInfo instance.\n */\nfunction normalizeFixInfo(fixInfo, lineNumber) {\n  return {\n    \"lineNumber\": fixInfo.lineNumber || lineNumber,\n    \"editColumn\": fixInfo.editColumn || 1,\n    \"deleteCount\": fixInfo.deleteCount || 0,\n    \"insertText\": fixInfo.insertText || \"\"\n  };\n}\n\n/**\n * Fixes the specified error on a line of Markdown content.\n *\n * @param {string} line Line of Markdown content.\n * @param {Object} fixInfo RuleOnErrorFixInfo instance.\n * @param {string} [lineEnding] Line ending to use.\n * @returns {string | null} Fixed content.\n */\nfunction applyFix(line, fixInfo, lineEnding) {\n  const { editColumn, deleteCount, insertText } = normalizeFixInfo(fixInfo);\n  const editIndex = editColumn - 1;\n  return (deleteCount === -1) ?\n    null :\n    line.slice(0, editIndex) +\n    insertText.replace(/\\n/g, lineEnding || \"\\n\") +\n    line.slice(editIndex + deleteCount);\n}\nmodule.exports.applyFix = applyFix;\n\n/**\n * Applies as many fixes as possible to Markdown content.\n *\n * @param {string} input Lines of Markdown content.\n * @param {Object[]} errors RuleOnErrorInfo instances.\n * @returns {string} Corrected content.\n */\nfunction applyFixes(input, errors) {\n  const lineEnding = getPreferredLineEnding(input, require(\"node:os\"));\n  const lines = input.split(newLineRe);\n  // Normalize fixInfo objects\n  let fixInfos = errors\n    .filter((error) => error.fixInfo)\n    .map((error) => normalizeFixInfo(error.fixInfo, error.lineNumber));\n  // Sort bottom-to-top, line-deletes last, right-to-left, long-to-short\n  fixInfos.sort((a, b) => {\n    const aDeletingLine = (a.deleteCount === -1);\n    const bDeletingLine = (b.deleteCount === -1);\n    return (\n      (b.lineNumber - a.lineNumber) ||\n      (aDeletingLine ? 1 : (bDeletingLine ? -1 : 0)) ||\n      (b.editColumn - a.editColumn) ||\n      (b.insertText.length - a.insertText.length)\n    );\n  });\n  // Remove duplicate entries (needed for following collapse step)\n  let lastFixInfo = {};\n  fixInfos = fixInfos.filter((fixInfo) => {\n    const unique = (\n      (fixInfo.lineNumber !== lastFixInfo.lineNumber) ||\n      (fixInfo.editColumn !== lastFixInfo.editColumn) ||\n      (fixInfo.deleteCount !== lastFixInfo.deleteCount) ||\n      (fixInfo.insertText !== lastFixInfo.insertText)\n    );\n    lastFixInfo = fixInfo;\n    return unique;\n  });\n  // Collapse insert/no-delete and no-insert/delete for same line/column\n  lastFixInfo = {\n    \"lineNumber\": -1\n  };\n  for (const fixInfo of fixInfos) {\n    if (\n      (fixInfo.lineNumber === lastFixInfo.lineNumber) &&\n      (fixInfo.editColumn === lastFixInfo.editColumn) &&\n      !fixInfo.insertText &&\n      (fixInfo.deleteCount > 0) &&\n      lastFixInfo.insertText &&\n      !lastFixInfo.deleteCount) {\n      fixInfo.insertText = lastFixInfo.insertText;\n      lastFixInfo.lineNumber = 0;\n    }\n    lastFixInfo = fixInfo;\n  }\n  fixInfos = fixInfos.filter((fixInfo) => fixInfo.lineNumber);\n  // Apply all (remaining/updated) fixes\n  let lastLineIndex = -1;\n  let lastEditIndex = -1;\n  for (const fixInfo of fixInfos) {\n    const { lineNumber, editColumn, deleteCount } = fixInfo;\n    const lineIndex = lineNumber - 1;\n    const editIndex = editColumn - 1;\n    if (\n      (lineIndex !== lastLineIndex) ||\n      (deleteCount === -1) ||\n      ((editIndex + deleteCount) <=\n        (lastEditIndex - ((deleteCount > 0) ? 0 : 1)))\n    ) {\n      // @ts-ignore\n      lines[lineIndex] = applyFix(lines[lineIndex], fixInfo, lineEnding);\n    }\n    lastLineIndex = lineIndex;\n    lastEditIndex = editIndex;\n  }\n  // Return corrected input\n  return lines.filter((line) => line !== null).join(lineEnding);\n}\nmodule.exports.applyFixes = applyFixes;\n\n/**\n * Expands a path with a tilde to an absolute path.\n *\n * @param {string} file Path that may begin with a tilde.\n * @param {Object} os Node.js \"os\" module.\n * @returns {string} Absolute path (or original path).\n */\nfunction expandTildePath(file, os) {\n  const homedir = os && os.homedir && os.homedir();\n  return homedir ? file.replace(/^~($|\\/|\\\\)/, `${homedir}$1`) : file;\n}\nmodule.exports.expandTildePath = expandTildePath;\n\n// Copied from markdownlint.js to avoid TypeScript compiler import() issue.\n/**\n * @typedef {Object} MarkdownItToken\n * @property {string[][]} attrs HTML attributes.\n * @property {boolean} block Block-level token.\n * @property {MarkdownItToken[]} children Child nodes.\n * @property {string} content Tag contents.\n * @property {boolean} hidden Ignore element.\n * @property {string} info Fence info.\n * @property {number} level Nesting level.\n * @property {number[]} map Beginning/ending line numbers.\n * @property {string} markup Markup text.\n * @property {Object} meta Arbitrary data.\n * @property {number} nesting Level change.\n * @property {string} tag HTML tag name.\n * @property {string} type Token type.\n * @property {number} lineNumber Line number (1-based).\n * @property {string} line Line content.\n */\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf, filterTokens } = require(\"../helpers\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD001\", \"heading-increment\" ],\n  \"description\": \"Heading levels should only increment by one level at a time\",\n  \"tags\": [ \"headings\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD001(params, onError) {\n    let prevLevel = 0;\n    filterTokens(params, \"heading_open\", function forToken(token) {\n      const level = Number.parseInt(token.tag.slice(1), 10);\n      if (prevLevel && (level > prevLevel)) {\n        addErrorDetailIf(onError, token.lineNumber,\n          \"h\" + (prevLevel + 1), \"h\" + level);\n      }\n      prevLevel = level;\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf, filterTokens, headingStyleFor } =\n  require(\"../helpers\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD003\", \"heading-style\" ],\n  \"description\": \"Heading style\",\n  \"tags\": [ \"headings\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD003(params, onError) {\n    let style = String(params.config.style || \"consistent\");\n    filterTokens(params, \"heading_open\", function forToken(token) {\n      const styleForToken = headingStyleFor(token);\n      if (style === \"consistent\") {\n        style = styleForToken;\n      }\n      if (styleForToken !== style) {\n        const h12 = /h[12]/.test(token.tag);\n        const setextWithAtx =\n          (style === \"setext_with_atx\") &&\n            ((h12 && (styleForToken === \"setext\")) ||\n            (!h12 && (styleForToken === \"atx\")));\n        const setextWithAtxClosed =\n          (style === \"setext_with_atx_closed\") &&\n            ((h12 && (styleForToken === \"setext\")) ||\n            (!h12 && (styleForToken === \"atx_closed\")));\n        if (!setextWithAtx && !setextWithAtxClosed) {\n          let expected = style;\n          if (style === \"setext_with_atx\") {\n            expected = h12 ? \"setext\" : \"atx\";\n          } else if (style === \"setext_with_atx_closed\") {\n            expected = h12 ? \"setext\" : \"atx_closed\";\n          }\n          addErrorDetailIf(onError, token.lineNumber,\n            expected, styleForToken);\n        }\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst map = new Map();\n\nmodule.exports.set = (keyValuePairs) => {\n  for (const [ key, value ] of Object.entries(keyValuePairs)) {\n    map.set(key, value);\n  }\n};\nmodule.exports.clear = () => map.clear();\n\nmodule.exports.codeBlockAndSpanRanges =\n  () => map.get(\"codeBlockAndSpanRanges\");\nmodule.exports.flattenedLists =\n  () => map.get(\"flattenedLists\");\nmodule.exports.lineMetadata =\n  () => map.get(\"lineMetadata\");\nmodule.exports.referenceLinkImageData =\n  () => map.get(\"referenceLinkImageData\");\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf, listItemMarkerRe, unorderedListStyleFor } =\n  require(\"../helpers\");\nconst { flattenedLists } = require(\"./cache\");\n\nconst expectedStyleToMarker = {\n  \"dash\": \"-\",\n  \"plus\": \"+\",\n  \"asterisk\": \"*\"\n};\nconst differentItemStyle = {\n  \"dash\": \"plus\",\n  \"plus\": \"asterisk\",\n  \"asterisk\": \"dash\"\n};\nconst validStyles = Object.keys(expectedStyleToMarker);\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD004\", \"ul-style\" ],\n  \"description\": \"Unordered list style\",\n  \"tags\": [ \"bullet\", \"ul\" ],\n  \"parser\": \"none\",\n  \"function\": function MD004(params, onError) {\n    const style = String(params.config.style || \"consistent\");\n    let expectedStyle = style;\n    const nestingStyles = [];\n    for (const list of flattenedLists()) {\n      if (list.unordered) {\n        if (expectedStyle === \"consistent\") {\n          expectedStyle = unorderedListStyleFor(list.items[0]);\n        }\n        for (const item of list.items) {\n          const itemStyle = unorderedListStyleFor(item);\n          if (style === \"sublist\") {\n            const nesting = list.nesting;\n            if (!nestingStyles[nesting]) {\n              nestingStyles[nesting] =\n                (itemStyle === nestingStyles[nesting - 1]) ?\n                  differentItemStyle[itemStyle] :\n                  itemStyle;\n            }\n            expectedStyle = nestingStyles[nesting];\n          }\n          if (!validStyles.includes(expectedStyle)) {\n            expectedStyle = validStyles[0];\n          }\n          let range = null;\n          let fixInfo = null;\n          const match = item.line.match(listItemMarkerRe);\n          if (match) {\n            const column = match.index + 1;\n            const length = match[0].length;\n            range = [ column, length ];\n            fixInfo = {\n              \"editColumn\": match[1].length + 1,\n              \"deleteCount\": 1,\n              \"insertText\": expectedStyleToMarker[expectedStyle]\n            };\n          }\n          addErrorDetailIf(\n            onError,\n            item.lineNumber,\n            expectedStyle,\n            itemStyle,\n            null,\n            null,\n            range,\n            fixInfo\n          );\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, addErrorDetailIf } = require(\"../helpers\");\nconst { filterByTypes, inHtmlFlow } = require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD005\", \"list-indent\" ],\n  \"description\": \"Inconsistent indentation for list items at the same level\",\n  \"tags\": [ \"bullet\", \"ul\", \"indentation\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD005(params, onError) {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const lists = filterByTypes(\n      micromarkTokens,\n      [ \"listOrdered\", \"listUnordered\" ]\n    ).filter((list) => !inHtmlFlow(list));\n    for (const list of lists) {\n      const expectedIndent = list.startColumn - 1;\n      let expectedEnd = 0;\n      let endMatching = false;\n      const listItemPrefixes =\n        list.children.filter((token) => (token.type === \"listItemPrefix\"));\n      for (const listItemPrefix of listItemPrefixes) {\n        const lineNumber = listItemPrefix.startLine;\n        const actualIndent = listItemPrefix.startColumn - 1;\n        const range = [ 1, listItemPrefix.endColumn - 1 ];\n        if (list.type === \"listUnordered\") {\n          addErrorDetailIf(\n            onError,\n            lineNumber,\n            expectedIndent,\n            actualIndent,\n            null,\n            null,\n            range\n            // No fixInfo; MD007 handles this scenario better\n          );\n        } else {\n          const markerLength = listItemPrefix.text.trim().length;\n          const actualEnd = listItemPrefix.startColumn + markerLength - 1;\n          expectedEnd = expectedEnd || actualEnd;\n          if ((expectedIndent !== actualIndent) || endMatching) {\n            if (expectedEnd === actualEnd) {\n              endMatching = true;\n            } else {\n              const detail = endMatching ?\n                `Expected: (${expectedEnd}); Actual: (${actualEnd})` :\n                `Expected: ${expectedIndent}; Actual: ${actualIndent}`;\n              const expected = endMatching ?\n                expectedEnd - markerLength :\n                expectedIndent;\n              const actual = endMatching ?\n                actualEnd - markerLength :\n                actualIndent;\n              addError(\n                onError,\n                lineNumber,\n                detail,\n                undefined,\n                range,\n                {\n                  \"editColumn\": Math.min(actual, expected) + 1,\n                  \"deleteCount\": Math.max(actual - expected, 0),\n                  \"insertText\": \"\".padEnd(Math.max(expected - actual, 0))\n                }\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf } = require(\"../helpers\");\nconst { filterByTypes, getTokenParentOfType, inHtmlFlow } =\n  require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"markdownlint-micromark\").TokenType[] */\nconst unorderedListTypes =\n  [ \"blockQuotePrefix\", \"listItemPrefix\", \"listUnordered\" ];\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"markdownlint-micromark\").TokenType[] */\nconst unorderedParentTypes =\n  [ \"blockQuote\", \"listOrdered\", \"listUnordered\" ];\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD007\", \"ul-indent\" ],\n  \"description\": \"Unordered list indentation\",\n  \"tags\": [ \"bullet\", \"ul\", \"indentation\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD007(params, onError) {\n    const indent = Number(params.config.indent || 2);\n    const startIndented = !!params.config.start_indented;\n    const startIndent = Number(params.config.start_indent || indent);\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const unorderedListNesting = new Map();\n    let lastBlockQuotePrefix = null;\n    const tokens = filterByTypes(micromarkTokens, unorderedListTypes);\n    for (const token of tokens) {\n      const { endColumn, parent, startColumn, startLine, type } = token;\n      if (type === \"blockQuotePrefix\") {\n        lastBlockQuotePrefix = token;\n      } else if (type === \"listUnordered\") {\n        let nesting = 0;\n        /** @type {import(\"../helpers/micromark.cjs\").Token | null} */\n        let current = token;\n        while (\n          (current = getTokenParentOfType(current, unorderedParentTypes))\n        ) {\n          if (current.type === \"listUnordered\") {\n            nesting++;\n            // eslint-disable-next-line no-continue\n            continue;\n          } else if (current.type === \"listOrdered\") {\n            nesting = -1;\n          }\n          break;\n        }\n        if (nesting >= 0) {\n          unorderedListNesting.set(token, nesting);\n        }\n      } else if (!inHtmlFlow(token)) {\n        // listItemPrefix\n        const nesting = unorderedListNesting.get(parent);\n        if (nesting !== undefined) {\n          // listItemPrefix for listUnordered\n          const expectedIndent =\n            (startIndented ? startIndent : 0) + (nesting * indent);\n          const blockQuoteAdjustment =\n            (lastBlockQuotePrefix?.endLine === startLine) ?\n              (lastBlockQuotePrefix.endColumn - 1) :\n              0;\n          const actualIndent = startColumn - 1 - blockQuoteAdjustment;\n          const range = [ 1, endColumn - 1 ];\n          const fixInfo = {\n            \"editColumn\": startColumn - actualIndent,\n            \"deleteCount\": Math.max(actualIndent - expectedIndent, 0),\n            \"insertText\": \"\".padEnd(Math.max(expectedIndent - actualIndent, 0))\n          };\n          addErrorDetailIf(\n            onError,\n            startLine,\n            expectedIndent,\n            actualIndent,\n            undefined,\n            undefined,\n            range,\n            fixInfo\n          );\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, filterTokens, forEachLine, includesSorted,\n  numericSortAscending } = require(\"../helpers\");\nconst { lineMetadata } = require(\"./cache\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD009\", \"no-trailing-spaces\" ],\n  \"description\": \"Trailing spaces\",\n  \"tags\": [ \"whitespace\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD009(params, onError) {\n    let brSpaces = params.config.br_spaces;\n    brSpaces = Number((brSpaces === undefined) ? 2 : brSpaces);\n    const listItemEmptyLines = !!params.config.list_item_empty_lines;\n    const strict = !!params.config.strict;\n    const listItemLineNumbers = [];\n    if (listItemEmptyLines) {\n      filterTokens(params, \"list_item_open\", (token) => {\n        for (let i = token.map[0]; i < token.map[1]; i++) {\n          listItemLineNumbers.push(i + 1);\n        }\n      });\n      listItemLineNumbers.sort(numericSortAscending);\n    }\n    const paragraphLineNumbers = [];\n    const codeInlineLineNumbers = [];\n    if (strict) {\n      filterTokens(params, \"paragraph_open\", (token) => {\n        for (let i = token.map[0]; i < token.map[1] - 1; i++) {\n          paragraphLineNumbers.push(i + 1);\n        }\n      });\n      const addLineNumberRange = (start, end) => {\n        for (let i = start; i < end; i++) {\n          codeInlineLineNumbers.push(i);\n        }\n      };\n      filterTokens(params, \"inline\", (token) => {\n        let start = 0;\n        for (const child of token.children) {\n          if (start > 0) {\n            addLineNumberRange(start, child.lineNumber);\n            start = 0;\n          }\n          if (child.type === \"code_inline\") {\n            start = child.lineNumber;\n          }\n        }\n        if (start > 0) {\n          addLineNumberRange(start, token.map[1]);\n        }\n      });\n    }\n    const expected = (brSpaces < 2) ? 0 : brSpaces;\n    forEachLine(lineMetadata(), (line, lineIndex, inCode) => {\n      const lineNumber = lineIndex + 1;\n      const trailingSpaces = line.length - line.trimEnd().length;\n      if (\n        trailingSpaces &&\n        !inCode &&\n        !includesSorted(listItemLineNumbers, lineNumber) &&\n        (\n          (expected !== trailingSpaces) ||\n          (strict &&\n            (!includesSorted(paragraphLineNumbers, lineNumber) ||\n             includesSorted(codeInlineLineNumbers, lineNumber)))\n        )\n      ) {\n        const column = line.length - trailingSpaces + 1;\n        addError(\n          onError,\n          lineNumber,\n          \"Expected: \" + (expected === 0 ? \"\" : \"0 or \") +\n            expected + \"; Actual: \" + trailingSpaces,\n          undefined,\n          [ column, trailingSpaces ],\n          {\n            \"editColumn\": column,\n            \"deleteCount\": trailingSpaces\n          });\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, filterTokens, forEachLine, withinAnyRange } =\n  require(\"../helpers\");\nconst { codeBlockAndSpanRanges, lineMetadata } = require(\"./cache\");\n\nconst tabRe = /\\t+/g;\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD010\", \"no-hard-tabs\" ],\n  \"description\": \"Hard tabs\",\n  \"tags\": [ \"whitespace\", \"hard_tab\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD010(params, onError) {\n    const codeBlocks = params.config.code_blocks;\n    const includeCode = (codeBlocks === undefined) ? true : !!codeBlocks;\n    const ignoreCodeLanguages = new Set(\n      (params.config.ignore_code_languages || [])\n        .map((language) => language.toLowerCase())\n    );\n    const spacesPerTab = params.config.spaces_per_tab;\n    const spaceMultiplier = (spacesPerTab === undefined) ?\n      1 :\n      Math.max(0, Number(spacesPerTab));\n    const exclusions = includeCode ? [] : codeBlockAndSpanRanges();\n    filterTokens(params, \"fence\", (token) => {\n      const language = token.info.trim().toLowerCase();\n      if (ignoreCodeLanguages.has(language)) {\n        for (let i = token.map[0] + 1; i < token.map[1] - 1; i++) {\n          exclusions.push([ i, 0, params.lines[i].length ]);\n        }\n      }\n    });\n    forEachLine(lineMetadata(), (line, lineIndex, inCode) => {\n      if (includeCode || !inCode) {\n        let match = null;\n        while ((match = tabRe.exec(line)) !== null) {\n          const { index } = match;\n          const column = index + 1;\n          const length = match[0].length;\n          if (!withinAnyRange(exclusions, lineIndex, index, length)) {\n            addError(\n              onError,\n              lineIndex + 1,\n              \"Column: \" + column,\n              undefined,\n              [ column, length ],\n              {\n                \"editColumn\": column,\n                \"deleteCount\": length,\n                \"insertText\": \"\".padEnd(length * spaceMultiplier)\n              }\n            );\n          }\n        }\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, forEachLine, withinAnyRange } = require(\"../helpers\");\nconst { codeBlockAndSpanRanges, lineMetadata } = require(\"./cache\");\n\nconst reversedLinkRe =\n  /(^|[^\\\\])\\(([^()]+)\\)\\[([^\\]^][^\\]]*)\\](?!\\()/g;\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD011\", \"no-reversed-links\" ],\n  \"description\": \"Reversed link syntax\",\n  \"tags\": [ \"links\" ],\n  \"parser\": \"none\",\n  \"function\": function MD011(params, onError) {\n    const exclusions = codeBlockAndSpanRanges();\n    forEachLine(lineMetadata(), (line, lineIndex, inCode, onFence) => {\n      if (!inCode && !onFence) {\n        let match = null;\n        while ((match = reversedLinkRe.exec(line)) !== null) {\n          const [ reversedLink, preChar, linkText, linkDestination ] = match;\n          const index = match.index + preChar.length;\n          const length = match[0].length - preChar.length;\n          if (\n            !linkText.endsWith(\"\\\\\") &&\n            !linkDestination.endsWith(\"\\\\\") &&\n            !withinAnyRange(exclusions, lineIndex, index, length)\n          ) {\n            addError(\n              onError,\n              lineIndex + 1,\n              reversedLink.slice(preChar.length),\n              undefined,\n              [ index + 1, length ],\n              {\n                \"editColumn\": index + 1,\n                \"deleteCount\": length,\n                \"insertText\": `[${linkText}](${linkDestination})`\n              }\n            );\n          }\n        }\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf, forEachLine } = require(\"../helpers\");\nconst { lineMetadata } = require(\"./cache\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD012\", \"no-multiple-blanks\" ],\n  \"description\": \"Multiple consecutive blank lines\",\n  \"tags\": [ \"whitespace\", \"blank_lines\" ],\n  \"parser\": \"none\",\n  \"function\": function MD012(params, onError) {\n    const maximum = Number(params.config.maximum || 1);\n    let count = 0;\n    forEachLine(lineMetadata(), (line, lineIndex, inCode) => {\n      count = (inCode || (line.trim().length > 0)) ? 0 : count + 1;\n      if (maximum < count) {\n        addErrorDetailIf(\n          onError,\n          lineIndex + 1,\n          maximum,\n          count,\n          null,\n          null,\n          null,\n          {\n            \"deleteCount\": -1\n          });\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf, filterTokens, forEachHeading, forEachLine,\n  includesSorted } = require(\"../helpers\");\nconst { lineMetadata, referenceLinkImageData } = require(\"./cache\");\n\nconst longLineRePrefix = \"^.{\";\nconst longLineRePostfixRelaxed = \"}.*\\\\s.*$\";\nconst longLineRePostfixStrict = \"}.+$\";\nconst linkOrImageOnlyLineRe = /^[es]*(?:lT?L|I)[ES]*$/;\nconst sternModeRe = /^(?:[#>\\s]*\\s)?\\S*$/;\nconst tokenTypeMap = {\n  \"em_open\": \"e\",\n  \"em_close\": \"E\",\n  \"image\": \"I\",\n  \"link_open\": \"l\",\n  \"link_close\": \"L\",\n  \"strong_open\": \"s\",\n  \"strong_close\": \"S\",\n  \"text\": \"T\"\n};\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD013\", \"line-length\" ],\n  \"description\": \"Line length\",\n  \"tags\": [ \"line_length\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD013(params, onError) {\n    const lineLength = Number(params.config.line_length || 80);\n    const headingLineLength =\n      Number(params.config.heading_line_length || lineLength);\n    const codeLineLength =\n      Number(params.config.code_block_line_length || lineLength);\n    const strict = !!params.config.strict;\n    const stern = !!params.config.stern;\n    const longLineRePostfix =\n      (strict || stern) ? longLineRePostfixStrict : longLineRePostfixRelaxed;\n    const longLineRe =\n      new RegExp(longLineRePrefix + lineLength + longLineRePostfix);\n    const longHeadingLineRe =\n      new RegExp(longLineRePrefix + headingLineLength + longLineRePostfix);\n    const longCodeLineRe =\n      new RegExp(longLineRePrefix + codeLineLength + longLineRePostfix);\n    const codeBlocks = params.config.code_blocks;\n    const includeCodeBlocks = (codeBlocks === undefined) ? true : !!codeBlocks;\n    const tables = params.config.tables;\n    const includeTables = (tables === undefined) ? true : !!tables;\n    const headings = params.config.headings;\n    const includeHeadings = (headings === undefined) ? true : !!headings;\n    const headingLineNumbers = [];\n    forEachHeading(params, (heading) => {\n      headingLineNumbers.push(heading.lineNumber);\n    });\n    const linkOnlyLineNumbers = [];\n    filterTokens(params, \"inline\", (token) => {\n      let childTokenTypes = \"\";\n      for (const child of token.children) {\n        if (child.type !== \"text\" || child.content !== \"\") {\n          childTokenTypes += tokenTypeMap[child.type] || \"x\";\n        }\n      }\n      if (linkOrImageOnlyLineRe.test(childTokenTypes)) {\n        linkOnlyLineNumbers.push(token.lineNumber);\n      }\n    });\n    const { definitionLineIndices } = referenceLinkImageData();\n    forEachLine(lineMetadata(), (line, lineIndex, inCode, onFence, inTable) => {\n      const lineNumber = lineIndex + 1;\n      const isHeading = includesSorted(headingLineNumbers, lineNumber);\n      const length = inCode ?\n        codeLineLength :\n        (isHeading ? headingLineLength : lineLength);\n      const lengthRe = inCode ?\n        longCodeLineRe :\n        (isHeading ? longHeadingLineRe : longLineRe);\n      if ((includeCodeBlocks || !inCode) &&\n          (includeTables || !inTable) &&\n          (includeHeadings || !isHeading) &&\n          !includesSorted(definitionLineIndices, lineIndex) &&\n          (strict ||\n           (!(stern && sternModeRe.test(line)) &&\n            !includesSorted(linkOnlyLineNumbers, lineNumber))) &&\n          lengthRe.test(line)) {\n        addErrorDetailIf(\n          onError,\n          lineNumber,\n          length,\n          line.length,\n          null,\n          null,\n          [ length + 1, line.length - length ]);\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, filterTokens } = require(\"../helpers\");\n\nconst dollarCommandRe = /^(\\s*)(\\$\\s+)/;\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD014\", \"commands-show-output\" ],\n  \"description\": \"Dollar signs used before commands without showing output\",\n  \"tags\": [ \"code\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD014(params, onError) {\n    for (const type of [ \"code_block\", \"fence\" ]) {\n      filterTokens(params, type, (token) => {\n        const margin = (token.type === \"fence\") ? 1 : 0;\n        const dollarInstances = [];\n        let allDollars = true;\n        for (let i = token.map[0] + margin; i < token.map[1] - margin; i++) {\n          const line = params.lines[i];\n          const lineTrim = line.trim();\n          if (lineTrim) {\n            const match = dollarCommandRe.exec(line);\n            if (match) {\n              const column = match[1].length + 1;\n              const length = match[2].length;\n              dollarInstances.push([ i, lineTrim, column, length ]);\n            } else {\n              allDollars = false;\n            }\n          }\n        }\n        if (allDollars) {\n          for (const instance of dollarInstances) {\n            const [ i, lineTrim, column, length ] = instance;\n            addErrorContext(\n              onError,\n              // @ts-ignore\n              i + 1,\n              lineTrim,\n              null,\n              null,\n              [ column, length ],\n              {\n                \"editColumn\": column,\n                \"deleteCount\": length\n              }\n            );\n          }\n        }\n      });\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, forEachLine } = require(\"../helpers\");\nconst { lineMetadata } = require(\"./cache\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD018\", \"no-missing-space-atx\" ],\n  \"description\": \"No space after hash on atx style heading\",\n  \"tags\": [ \"headings\", \"atx\", \"spaces\" ],\n  \"parser\": \"none\",\n  \"function\": function MD018(params, onError) {\n    forEachLine(lineMetadata(), (line, lineIndex, inCode) => {\n      if (!inCode &&\n        /^#+[^# \\t]/.test(line) &&\n        !/#\\s*$/.test(line) &&\n        !line.startsWith(\"#\uFE0F\u20E3\")) {\n        // @ts-ignore\n        const hashCount = /^#+/.exec(line)[0].length;\n        addErrorContext(\n          onError,\n          lineIndex + 1,\n          line.trim(),\n          null,\n          null,\n          [ 1, hashCount + 1 ],\n          {\n            \"editColumn\": hashCount + 1,\n            \"insertText\": \" \"\n          }\n        );\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, filterTokens, headingStyleFor } =\n  require(\"../helpers\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD019\", \"no-multiple-space-atx\" ],\n  \"description\": \"Multiple spaces after hash on atx style heading\",\n  \"tags\": [ \"headings\", \"atx\", \"spaces\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD019(params, onError) {\n    filterTokens(params, \"heading_open\", (token) => {\n      if (headingStyleFor(token) === \"atx\") {\n        const { line, lineNumber } = token;\n        const match = /^(#+)([ \\t]{2,})\\S/.exec(line);\n        if (match) {\n          const [\n            ,\n            { \"length\": hashLength },\n            { \"length\": spacesLength }\n          ] = match;\n          addErrorContext(\n            onError,\n            lineNumber,\n            line.trim(),\n            null,\n            null,\n            [ 1, hashLength + spacesLength + 1 ],\n            {\n              \"editColumn\": hashLength + 1,\n              \"deleteCount\": spacesLength - 1\n            }\n          );\n        }\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, forEachLine } = require(\"../helpers\");\nconst { lineMetadata } = require(\"./cache\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD020\", \"no-missing-space-closed-atx\" ],\n  \"description\": \"No space inside hashes on closed atx style heading\",\n  \"tags\": [ \"headings\", \"atx_closed\", \"spaces\" ],\n  \"parser\": \"none\",\n  \"function\": function MD020(params, onError) {\n    forEachLine(lineMetadata(), (line, lineIndex, inCode) => {\n      if (!inCode) {\n        const match =\n          /^(#+)([ \\t]*)([^#]*?[^#\\\\])([ \\t]*)((?:\\\\#)?)(#+)(\\s*)$/.exec(line);\n        if (match) {\n          const [\n            ,\n            leftHash,\n            { \"length\": leftSpaceLength },\n            content,\n            { \"length\": rightSpaceLength },\n            rightEscape,\n            rightHash,\n            { \"length\": trailSpaceLength }\n          ] = match;\n          const leftHashLength = leftHash.length;\n          const rightHashLength = rightHash.length;\n          const left = !leftSpaceLength;\n          const right = !rightSpaceLength || rightEscape;\n          const rightEscapeReplacement = rightEscape ? `${rightEscape} ` : \"\";\n          if (left || right) {\n            const range = left ?\n              [\n                1,\n                leftHashLength + 1\n              ] :\n              [\n                line.length - trailSpaceLength - rightHashLength,\n                rightHashLength + 1\n              ];\n            addErrorContext(\n              onError,\n              lineIndex + 1,\n              line.trim(),\n              left,\n              right,\n              range,\n              {\n                \"editColumn\": 1,\n                \"deleteCount\": line.length,\n                \"insertText\":\n                  `${leftHash} ${content} ${rightEscapeReplacement}${rightHash}`\n              }\n            );\n          }\n        }\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, filterTokens, headingStyleFor } =\n  require(\"../helpers\");\n\nconst closedAtxRe = /^(#+)([ \\t]+)([^ \\t]|[^ \\t].*[^ \\t])([ \\t]+)(#+)(\\s*)$/;\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD021\", \"no-multiple-space-closed-atx\" ],\n  \"description\": \"Multiple spaces inside hashes on closed atx style heading\",\n  \"tags\": [ \"headings\", \"atx_closed\", \"spaces\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD021(params, onError) {\n    filterTokens(params, \"heading_open\", (token) => {\n      if (headingStyleFor(token) === \"atx_closed\") {\n        const { line, lineNumber } = token;\n        const match = closedAtxRe.exec(line);\n        if (match) {\n          const [\n            ,\n            leftHash,\n            { \"length\": leftSpaceLength },\n            content,\n            { \"length\": rightSpaceLength },\n            rightHash,\n            { \"length\": trailSpaceLength }\n          ] = match;\n          const left = leftSpaceLength > 1;\n          const right = rightSpaceLength > 1;\n          if (left || right) {\n            const length = line.length;\n            const leftHashLength = leftHash.length;\n            const rightHashLength = rightHash.length;\n            const range = left ?\n              [\n                1,\n                leftHashLength + leftSpaceLength + 1\n              ] :\n              [\n                length - trailSpaceLength - rightHashLength - rightSpaceLength,\n                rightSpaceLength + rightHashLength + 1\n              ];\n            addErrorContext(\n              onError,\n              lineNumber,\n              line.trim(),\n              left,\n              right,\n              range,\n              {\n                \"editColumn\": 1,\n                \"deleteCount\": length,\n                \"insertText\": `${leftHash} ${content} ${rightHash}`\n              }\n            );\n          }\n        }\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf, blockquotePrefixRe, isBlankLine } =\n  require(\"../helpers\");\nconst { filterByTypes, getHeadingLevel, inHtmlFlow } =\n  require(\"../helpers/micromark.cjs\");\n\nconst defaultLines = 1;\n\nconst getLinesFunction = (linesParam) => {\n  if (Array.isArray(linesParam)) {\n    const linesArray = new Array(6).fill(defaultLines);\n    for (const [ index, value ] of [ ...linesParam.entries() ].slice(0, 6)) {\n      linesArray[index] = value;\n    }\n    return (heading) => linesArray[getHeadingLevel(heading) - 1];\n  }\n  // Coerce linesParam to a number\n  const lines = (linesParam === undefined) ? defaultLines : Number(linesParam);\n  return () => lines;\n};\n\nconst getBlockQuote = (str, count) => (\n  (str || \"\")\n    .match(blockquotePrefixRe)[0]\n    .trimEnd()\n    // eslint-disable-next-line unicorn/prefer-spread\n    .concat(\"\\n\")\n    .repeat(count)\n);\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD022\", \"blanks-around-headings\" ],\n  \"description\": \"Headings should be surrounded by blank lines\",\n  \"tags\": [ \"headings\", \"blank_lines\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD022(params, onError) {\n    const getLinesAbove = getLinesFunction(params.config.lines_above);\n    const getLinesBelow = getLinesFunction(params.config.lines_below);\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const { lines } = params;\n    const headings = filterByTypes(\n      micromarkTokens,\n      [ \"atxHeading\", \"setextHeading\" ]\n    ).filter((heading) => !inHtmlFlow(heading));\n    for (const heading of headings) {\n      const { startLine, endLine } = heading;\n      const line = lines[startLine - 1].trim();\n\n      // Check lines above\n      const linesAbove = getLinesAbove(heading);\n      if (linesAbove >= 0) {\n        let actualAbove = 0;\n        for (\n          let i = 0;\n          (i < linesAbove) && isBlankLine(lines[startLine - 2 - i]);\n          i++\n        ) {\n          actualAbove++;\n        }\n        addErrorDetailIf(\n          onError,\n          startLine,\n          linesAbove,\n          actualAbove,\n          \"Above\",\n          line,\n          null,\n          {\n            \"insertText\": getBlockQuote(\n              lines[startLine - 2],\n              linesAbove - actualAbove\n            )\n          }\n        );\n      }\n\n      // Check lines below\n      const linesBelow = getLinesBelow(heading);\n      if (linesBelow >= 0) {\n        let actualBelow = 0;\n        for (\n          let i = 0;\n          (i < linesBelow) && isBlankLine(lines[endLine + i]);\n          i++\n        ) {\n          actualBelow++;\n        }\n        addErrorDetailIf(\n          onError,\n          startLine,\n          linesBelow,\n          actualBelow,\n          \"Below\",\n          line,\n          null,\n          {\n            \"lineNumber\": endLine + 1,\n            \"insertText\": getBlockQuote(\n              lines[endLine],\n              linesBelow - actualBelow\n            )\n          }\n        );\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, filterTokens } = require(\"../helpers\");\n\nconst spaceBeforeHeadingRe = /^(\\s+|[>\\s]+\\s\\s)[^>\\s]/;\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD023\", \"heading-start-left\" ],\n  \"description\": \"Headings must start at the beginning of the line\",\n  \"tags\": [ \"headings\", \"spaces\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD023(params, onError) {\n    filterTokens(params, \"heading_open\", function forToken(token) {\n      const { lineNumber, line } = token;\n      const match = line.match(spaceBeforeHeadingRe);\n      if (match) {\n        const [ prefixAndFirstChar, prefix ] = match;\n        let deleteCount = prefix.length;\n        const prefixLengthNoSpace = prefix.trimEnd().length;\n        if (prefixLengthNoSpace) {\n          deleteCount -= prefixLengthNoSpace - 1;\n        }\n        addErrorContext(\n          onError,\n          lineNumber,\n          line,\n          null,\n          null,\n          [ 1, prefixAndFirstChar.length ],\n          {\n            \"editColumn\": prefixLengthNoSpace + 1,\n            \"deleteCount\": deleteCount\n          });\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, forEachHeading } = require(\"../helpers\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD024\", \"no-duplicate-heading\" ],\n  \"description\": \"Multiple headings with the same content\",\n  \"tags\": [ \"headings\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD024(params, onError) {\n    const siblingsOnly = !!params.config.siblings_only || false;\n    const knownContents = [ null, [] ];\n    let lastLevel = 1;\n    let knownContent = knownContents[lastLevel];\n    forEachHeading(params, (heading, content) => {\n      if (siblingsOnly) {\n        const newLevel = heading.tag.slice(1);\n        while (lastLevel < newLevel) {\n          lastLevel++;\n          knownContents[lastLevel] = [];\n        }\n        while (lastLevel > newLevel) {\n          knownContents[lastLevel] = [];\n          lastLevel--;\n        }\n        knownContent = knownContents[newLevel];\n      }\n      // @ts-ignore\n      if (knownContent.includes(content)) {\n        addErrorContext(\n          onError,\n          heading.lineNumber,\n          heading.line.trim()\n        );\n      } else {\n        // @ts-ignore\n        knownContent.push(content);\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, filterTokens, frontMatterHasTitle } =\n  require(\"../helpers\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD025\", \"single-title\", \"single-h1\" ],\n  \"description\": \"Multiple top-level headings in the same document\",\n  \"tags\": [ \"headings\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD025(params, onError) {\n    const level = Number(params.config.level || 1);\n    const tag = \"h\" + level;\n    const foundFrontMatterTitle =\n      frontMatterHasTitle(\n        params.frontMatterLines,\n        params.config.front_matter_title\n      );\n    let hasTopLevelHeading = false;\n    filterTokens(params, \"heading_open\", function forToken(token) {\n      if (token.tag === tag) {\n        if (hasTopLevelHeading || foundFrontMatterTitle) {\n          addErrorContext(onError, token.lineNumber,\n            token.line.trim());\n        } else if (token.lineNumber === 1) {\n          hasTopLevelHeading = true;\n        }\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, allPunctuationNoQuestion, endOfLineGemojiCodeRe,\n  endOfLineHtmlEntityRe, escapeForRegExp } = require(\"../helpers\");\nconst { filterByTypes } = require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD026\", \"no-trailing-punctuation\" ],\n  \"description\": \"Trailing punctuation in heading\",\n  \"tags\": [ \"headings\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD026(params, onError) {\n    let punctuation = params.config.punctuation;\n    punctuation = String(\n      (punctuation === undefined) ? allPunctuationNoQuestion : punctuation\n    );\n    const trailingPunctuationRe =\n      new RegExp(\"\\\\s*[\" + escapeForRegExp(punctuation) + \"]+$\");\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const headings = filterByTypes(micromarkTokens, [ \"atxHeadingText\", \"setextHeadingText\" ]);\n    for (const heading of headings) {\n      const { endColumn, endLine, text } = heading;\n      const match = trailingPunctuationRe.exec(text);\n      if (\n        match &&\n        !endOfLineHtmlEntityRe.test(text) &&\n        !endOfLineGemojiCodeRe.test(text)\n      ) {\n        const fullMatch = match[0];\n        const length = fullMatch.length;\n        const column = endColumn - length;\n        addError(\n          onError,\n          endLine,\n          `Punctuation: '${fullMatch}'`,\n          undefined,\n          [ column, length ],\n          {\n            \"editColumn\": column,\n            \"deleteCount\": length\n          }\n        );\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext } = require(\"../helpers\");\nconst { filterByTypes } = require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [\"MD027\", \"no-multiple-space-blockquote\"],\n  \"description\": \"Multiple spaces after blockquote symbol\",\n  \"tags\": [\"blockquote\", \"whitespace\", \"indentation\"],\n  \"parser\": \"micromark\",\n  \"function\": function MD027(params, onError) {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    for (const token of filterByTypes(micromarkTokens, [ \"linePrefix\" ])) {\n      const siblings = token.parent?.children || micromarkTokens;\n      if (siblings[siblings.indexOf(token) - 1]?.type === \"blockQuotePrefix\") {\n        const { startColumn, startLine, text } = token;\n        const { length } = text;\n        const line = params.lines[startLine - 1];\n        addErrorContext(\n          onError,\n          startLine,\n          line,\n          null,\n          null,\n          [ startColumn, length ],\n          {\n            \"editColumn\": startColumn,\n            \"deleteCount\": length\n          }\n        );\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError } = require(\"../helpers\");\nconst { filterByTypes } = require(\"../helpers/micromark.cjs\");\n\nconst ignoreTypes = new Set([ \"lineEnding\", \"listItemIndent\", \"linePrefix\" ]);\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD028\", \"no-blanks-blockquote\" ],\n  \"description\": \"Blank line inside blockquote\",\n  \"tags\": [ \"blockquote\", \"whitespace\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD028(params, onError) {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    for (const token of filterByTypes(micromarkTokens, [ \"blockQuote\" ])) {\n      const errorLineNumbers = [];\n      const siblings = token.parent?.children || micromarkTokens;\n      for (let i = siblings.indexOf(token) + 1; i < siblings.length; i++) {\n        const sibling = siblings[i];\n        const { startLine, type } = sibling;\n        if (type === \"lineEndingBlank\") {\n          // Possible blank between blockquotes\n          errorLineNumbers.push(startLine);\n        } else if (ignoreTypes.has(type)) {\n          // Ignore invisible formatting\n        } else if (type === \"blockQuote\") {\n          // Blockquote followed by blockquote\n          for (const lineNumber of errorLineNumbers) {\n            addError(onError, lineNumber);\n          }\n          break;\n        } else {\n          // Blockquote not followed by blockquote\n          break;\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf, listItemMarkerRe, orderedListItemMarkerRe,\n  rangeFromRegExp } = require(\"../helpers\");\nconst { flattenedLists } = require(\"./cache\");\n\nconst listStyleExamples = {\n  \"one\": \"1/1/1\",\n  \"ordered\": \"1/2/3\",\n  \"zero\": \"0/0/0\"\n};\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD029\", \"ol-prefix\" ],\n  \"description\": \"Ordered list item prefix\",\n  \"tags\": [ \"ol\" ],\n  \"parser\": \"none\",\n  \"function\": function MD029(params, onError) {\n    const style = String(params.config.style || \"one_or_ordered\");\n    const filteredLists = flattenedLists().filter((list) => !list.unordered);\n    for (const list of filteredLists) {\n      const { items } = list;\n      let current = 1;\n      let incrementing = false;\n      // Check for incrementing number pattern 1/2/3 or 0/1/2\n      if (items.length >= 2) {\n        const first = orderedListItemMarkerRe.exec(items[0].line);\n        const second = orderedListItemMarkerRe.exec(items[1].line);\n        if (first && second) {\n          const [ , firstNumber ] = first;\n          const [ , secondNumber ] = second;\n          if ((secondNumber !== \"1\") || (firstNumber === \"0\")) {\n            incrementing = true;\n            if (firstNumber === \"0\") {\n              current = 0;\n            }\n          }\n        }\n      }\n      // Determine effective style\n      let listStyle = style;\n      if (listStyle === \"one_or_ordered\") {\n        listStyle = incrementing ? \"ordered\" : \"one\";\n      }\n      // Force expected value for 0/0/0 and 1/1/1 patterns\n      if (listStyle === \"zero\") {\n        current = 0;\n      } else if (listStyle === \"one\") {\n        current = 1;\n      }\n      // Validate each list item marker\n      for (const item of items) {\n        const match = orderedListItemMarkerRe.exec(item.line);\n        if (match) {\n          addErrorDetailIf(onError, item.lineNumber,\n            String(current), match[1],\n            \"Style: \" + listStyleExamples[listStyle], null,\n            rangeFromRegExp(item.line, listItemMarkerRe));\n          if (listStyle === \"ordered\") {\n            current++;\n          }\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf } = require(\"../helpers\");\nconst { filterByTypes } = require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD030\", \"list-marker-space\" ],\n  \"description\": \"Spaces after list markers\",\n  \"tags\": [ \"ol\", \"ul\", \"whitespace\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD030(params, onError) {\n    const ulSingle = Number(params.config.ul_single || 1);\n    const olSingle = Number(params.config.ol_single || 1);\n    const ulMulti = Number(params.config.ul_multi || 1);\n    const olMulti = Number(params.config.ol_multi || 1);\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const lists = filterByTypes(micromarkTokens, [ \"listOrdered\", \"listUnordered\" ]);\n    for (const list of lists) {\n      const ordered = (list.type === \"listOrdered\");\n      const listItemPrefixes =\n        list.children.filter((token) => (token.type === \"listItemPrefix\"));\n      const allSingleLine =\n        (list.endLine - list.startLine + 1) === listItemPrefixes.length;\n      const expectedSpaces = ordered ?\n        (allSingleLine ? olSingle : olMulti) :\n        (allSingleLine ? ulSingle : ulMulti);\n      for (const listItemPrefix of listItemPrefixes) {\n        const range = [\n          listItemPrefix.startColumn,\n          listItemPrefix.endColumn - listItemPrefix.startColumn\n        ];\n        const listItemPrefixWhitespaces = listItemPrefix.children.filter(\n          (token) => (token.type === \"listItemPrefixWhitespace\")\n        );\n        for (const listItemPrefixWhitespace of listItemPrefixWhitespaces) {\n          const { endColumn, startColumn, startLine } =\n            listItemPrefixWhitespace;\n          const actualSpaces = endColumn - startColumn;\n          const fixInfo = {\n            \"editColumn\": startColumn,\n            \"deleteCount\": actualSpaces,\n            \"insertText\": \"\".padEnd(expectedSpaces)\n          };\n          addErrorDetailIf(\n            onError,\n            startLine,\n            expectedSpaces,\n            actualSpaces,\n            null,\n            null,\n            range,\n            fixInfo\n          );\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, forEachLine, isBlankLine } = require(\"../helpers\");\nconst { lineMetadata } = require(\"./cache\");\n\nconst codeFencePrefixRe = /^(.*?)[`~]/;\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD031\", \"blanks-around-fences\" ],\n  \"description\": \"Fenced code blocks should be surrounded by blank lines\",\n  \"tags\": [ \"code\", \"blank_lines\" ],\n  \"parser\": \"none\",\n  \"function\": function MD031(params, onError) {\n    const listItems = params.config.list_items;\n    const includeListItems = (listItems === undefined) ? true : !!listItems;\n    const { lines } = params;\n    forEachLine(lineMetadata(), (line, i, inCode, onFence, inTable, inItem) => {\n      const onTopFence = (onFence > 0);\n      const onBottomFence = (onFence < 0);\n      if ((includeListItems || !inItem) &&\n          ((onTopFence && !isBlankLine(lines[i - 1])) ||\n           (onBottomFence && !isBlankLine(lines[i + 1])))) {\n        const [ , prefix ] = line.match(codeFencePrefixRe) || [];\n        const fixInfo = (prefix === undefined) ? null : {\n          \"lineNumber\": i + (onTopFence ? 1 : 2),\n          \"insertText\": `${prefix.replace(/[^>]/g, \" \").trim()}\\n`\n        };\n        addErrorContext(\n          onError,\n          i + 1,\n          lines[i].trim(),\n          null,\n          null,\n          null,\n          fixInfo);\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, blockquotePrefixRe, isBlankLine } = require(\"../helpers\");\nconst { filterByPredicate, nonContentTokens } = require(\"../helpers/micromark.cjs\");\n\nconst isList = (token) => (\n  (token.type === \"listOrdered\") || (token.type === \"listUnordered\")\n);\nconst addBlankLineError = (onError, lines, lineIndex, lineNumber) => {\n  const line = lines[lineIndex];\n  const quotePrefix = line.match(blockquotePrefixRe)[0].trimEnd();\n  addErrorContext(\n    onError,\n    lineIndex + 1,\n    line.trim(),\n    null,\n    null,\n    null,\n    {\n      lineNumber,\n      \"insertText\": `${quotePrefix}\\n`\n    }\n  );\n};\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD032\", \"blanks-around-lists\" ],\n  \"description\": \"Lists should be surrounded by blank lines\",\n  \"tags\": [ \"bullet\", \"ul\", \"ol\", \"blank_lines\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD032(params, onError) {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const { lines } = params;\n\n    // For every top-level list...\n    const topLevelLists = filterByPredicate(\n      micromarkTokens,\n      isList,\n      (token) => (\n        (isList(token) || (token.type === \"htmlFlow\")) ? [] : token.children\n      )\n    );\n    for (const list of topLevelLists) {\n\n      // Look for a blank line above the list\n      const firstIndex = list.startLine - 1;\n      if (!isBlankLine(lines[firstIndex - 1])) {\n        addBlankLineError(onError, lines, firstIndex);\n      }\n\n      // Find the \"visual\" end of the list\n      let endLine = list.endLine;\n      const flattenedChildren = filterByPredicate(list.children);\n      for (const child of flattenedChildren.reverse()) {\n        if (!nonContentTokens.has(child.type)) {\n          endLine = child.endLine;\n          break;\n        }\n      }\n\n      // Look for a blank line below the list\n      const lastIndex = endLine - 1;\n      if (!isBlankLine(lines[lastIndex + 1])) {\n        addBlankLineError(onError, lines, lastIndex, lastIndex + 2);\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, nextLinesRe } = require(\"../helpers\");\nconst { filterByTypes, getHtmlTagInfo } =\n  require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD033\", \"no-inline-html\" ],\n  \"description\": \"Inline HTML\",\n  \"tags\": [ \"html\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD033(params, onError) {\n    let allowedElements = params.config.allowed_elements;\n    allowedElements = Array.isArray(allowedElements) ? allowedElements : [];\n    allowedElements = allowedElements.map((element) => element.toLowerCase());\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    for (const token of filterByTypes(micromarkTokens, [ \"htmlText\" ])) {\n      const htmlTagInfo = getHtmlTagInfo(token);\n      if (\n        htmlTagInfo &&\n        !htmlTagInfo.close &&\n        !allowedElements.includes(htmlTagInfo.name.toLowerCase())\n      ) {\n        const range = [\n          token.startColumn,\n          token.text.replace(nextLinesRe, \"\").length\n        ];\n        addError(\n          onError,\n          token.startLine,\n          \"Element: \" + htmlTagInfo.name,\n          undefined,\n          range\n        );\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext } = require(\"../helpers\");\nconst { filterByPredicate, filterByTypes, getHtmlTagInfo, inHtmlFlow, parse } =\n  require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD034\", \"no-bare-urls\" ],\n  \"description\": \"Bare URL used\",\n  \"tags\": [ \"links\", \"url\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD034(params, onError) {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const literalAutolinks = (tokens) => (\n      filterByPredicate(\n        tokens,\n        (token) => {\n          if ((token.type === \"literalAutolink\") && !inHtmlFlow(token)) {\n            // Detect and ignore https://github.com/micromark/micromark/issues/164\n            const siblings = token.parent?.children;\n              // Commented-out due to not being able to exercise in test/code coverage\n              // || micromarkTokens;\n            const index = siblings?.indexOf(token);\n            // @ts-ignore\n            const prev = siblings?.at(index - 1);\n            // @ts-ignore\n            const next = siblings?.at(index + 1);\n            return !(\n              prev &&\n              next &&\n              (prev.type === \"data\") &&\n              (next.type === \"data\") &&\n              prev.text.endsWith(\"<\") &&\n              next.text.startsWith(\">\")\n            );\n          }\n          return false;\n        },\n        (token) => {\n          const { children } = token;\n          const result = [];\n          for (let i = 0; i < children.length; i++) {\n            const current = children[i];\n            const openTagInfo = getHtmlTagInfo(current);\n            if (openTagInfo && !openTagInfo.close) {\n              let count = 1;\n              for (let j = i + 1; j < children.length; j++) {\n                const candidate = children[j];\n                const closeTagInfo = getHtmlTagInfo(candidate);\n                if (closeTagInfo && (openTagInfo.name === closeTagInfo.name)) {\n                  if (closeTagInfo.close) {\n                    count--;\n                    if (count === 0) {\n                      i = j;\n                      break;\n                    }\n                  } else {\n                    count++;\n                  }\n                }\n              }\n            } else {\n              result.push(current);\n            }\n          }\n          return result;\n        }\n      )\n    );\n    const autoLinks = filterByTypes(micromarkTokens, [ \"literalAutolink\" ]);\n    if (autoLinks.length > 0) {\n      // Re-parse with correct link/image reference definition handling\n      const document = params.lines.join(\"\\n\");\n      const tokens = parse(document, undefined, false);\n      for (const token of literalAutolinks(tokens)) {\n        const range = [\n          token.startColumn,\n          token.endColumn - token.startColumn\n        ];\n        const fixInfo = {\n          \"editColumn\": range[0],\n          \"deleteCount\": range[1],\n          \"insertText\": `<${token.text}>`\n        };\n        addErrorContext(\n          onError,\n          token.startLine,\n          token.text,\n          null,\n          null,\n          range,\n          fixInfo\n        );\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf } = require(\"../helpers\");\nconst { filterByTypes } = require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD035\", \"hr-style\" ],\n  \"description\": \"Horizontal rule style\",\n  \"tags\": [ \"hr\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD035(params, onError) {\n    let style = String(params.config.style || \"consistent\").trim();\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const thematicBreaks = filterByTypes(micromarkTokens, [ \"thematicBreak\" ]);\n    for (const token of thematicBreaks) {\n      const { startLine, text } = token;\n      if (style === \"consistent\") {\n        style = text;\n      }\n      addErrorDetailIf(onError, startLine, style, text);\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, allPunctuation } = require(\"../helpers\");\nconst { filterByTypes, matchAndGetTokensByType } = require(\"../helpers/micromark.cjs\");\n\n/** @typedef {import(\"../helpers/micromark.cjs\").TokenType} TokenType */\n/** @type {Map<TokenType, TokenType[]>} */\nconst emphasisAndChildrenTypes = new Map([\n  [ \"emphasis\", [ \"emphasisSequence\", \"emphasisText\", \"emphasisSequence\" ] ],\n  [ \"strong\", [ \"strongSequence\", \"strongText\", \"strongSequence\" ] ]\n]);\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD036\", \"no-emphasis-as-heading\" ],\n  \"description\": \"Emphasis used instead of a heading\",\n  \"tags\": [ \"headings\", \"emphasis\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD036(params, onError) {\n    let punctuation = params.config.punctuation;\n    punctuation = String((punctuation === undefined) ? allPunctuation : punctuation);\n    const punctuationRe = new RegExp(\"[\" + punctuation + \"]$\");\n    const paragraphTokens =\n      filterByTypes(params.parsers.micromark.tokens, [ \"paragraph\" ]).\n        filter((token) =>\n          (token.parent?.type === \"content\") && !token.parent?.parent && (token.children.length === 1)\n        );\n    for (const paragraphToken of paragraphTokens) {\n      const childToken = paragraphToken.children[0];\n      for (const [ emphasisType, emphasisChildrenTypes ] of emphasisAndChildrenTypes) {\n        if (childToken.type === emphasisType) {\n          const matchingTokens = matchAndGetTokensByType(childToken.children, emphasisChildrenTypes);\n          if (matchingTokens) {\n            const textToken = matchingTokens[1];\n            if (\n              (textToken.children.length === 1) &&\n              (textToken.children[0].type === \"data\") &&\n              !punctuationRe.test(textToken.text)\n            ) {\n              addErrorContext(onError, textToken.startLine, textToken.text);\n            }\n          }\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError } = require(\"../helpers\");\nconst { filterByPredicate, inHtmlFlow } = require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD037\", \"no-space-in-emphasis\" ],\n  \"description\": \"Spaces inside emphasis markers\",\n  \"tags\": [ \"whitespace\", \"emphasis\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD037(params, onError) {\n\n    // Initialize variables\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const { lines } = params;\n    const emphasisTokensByMarker = new Map();\n    for (const marker of [ \"_\", \"__\", \"___\", \"*\", \"**\", \"***\" ]) {\n      emphasisTokensByMarker.set(marker, []);\n    }\n    const tokens = filterByPredicate(\n      micromarkTokens,\n      (token) => token.children.some((child) => child.type === \"data\")\n    );\n    for (const token of tokens) {\n\n      // Build lists of bare tokens for each emphasis marker type\n      for (const emphasisTokens of emphasisTokensByMarker.values()) {\n        emphasisTokens.length = 0;\n      }\n      for (const child of token.children) {\n        const { text, type } = child;\n        if ((type === \"data\") && (text.length <= 3)) {\n          const emphasisTokens = emphasisTokensByMarker.get(text);\n          if (emphasisTokens && !inHtmlFlow(child)) {\n            emphasisTokens.push(child);\n          }\n        }\n      }\n\n      // Process bare tokens for each emphasis marker type\n      for (const entry of emphasisTokensByMarker.entries()) {\n        const [ marker, emphasisTokens ] = entry;\n        for (let i = 0; i + 1 < emphasisTokens.length; i += 2) {\n\n          // Process start token of start/end pair\n          const startToken = emphasisTokens[i];\n          const startLine = lines[startToken.startLine - 1];\n          const startSlice = startLine.slice(startToken.endColumn - 1);\n          const startMatch = startSlice.match(/^\\s+\\S/);\n          if (startMatch) {\n            const [ startSpaceCharacter ] = startMatch;\n            const startContext = `${marker}${startSpaceCharacter}`;\n            addError(\n              onError,\n              startToken.startLine,\n              undefined,\n              startContext,\n              [ startToken.startColumn, startContext.length ],\n              {\n                \"editColumn\": startToken.endColumn,\n                \"deleteCount\": startSpaceCharacter.length - 1\n              }\n            );\n          }\n\n          // Process end token of start/end pair\n          const endToken = emphasisTokens[i + 1];\n          const endLine = lines[endToken.startLine - 1];\n          const endSlice = endLine.slice(0, endToken.startColumn - 1);\n          const endMatch = endSlice.match(/\\S\\s+$/);\n          if (endMatch) {\n            const [ endSpaceCharacter ] = endMatch;\n            const endContext = `${endSpaceCharacter}${marker}`;\n            addError(\n              onError,\n              endToken.startLine,\n              undefined,\n              endContext,\n              [ endToken.endColumn - endContext.length, endContext.length ],\n              {\n                \"editColumn\":\n                  endToken.startColumn - (endSpaceCharacter.length - 1),\n                \"deleteCount\": endSpaceCharacter.length - 1\n              }\n            );\n          }\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext } = require(\"../helpers\");\nconst { filterByTypes, inHtmlFlow, tokenIfType } =\n  require(\"../helpers/micromark.cjs\");\n\nconst leftSpaceRe = /^\\s(?:[^`]|$)/;\nconst rightSpaceRe = /[^`]\\s$/;\nconst trimCodeText = (text, start, end) => {\n  text = text.replace(/^\\s+$/, \"\");\n  if (start) {\n    text = text.replace(/^\\s+?(\\s`|\\S)/, \"$1\");\n  }\n  if (end) {\n    text = text.replace(/(`\\s|\\S)\\s+$/, \"$1\");\n  }\n  return text;\n};\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD038\", \"no-space-in-code\" ],\n  \"description\": \"Spaces inside code span elements\",\n  \"tags\": [ \"whitespace\", \"code\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD038(params, onError) {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const codeTexts = filterByTypes(micromarkTokens, [ \"codeText\" ])\n      .filter((codeText) => !inHtmlFlow(codeText));\n    for (const codeText of codeTexts) {\n      const { children } = codeText;\n      const first = 0;\n      const last = children.length - 1;\n      const startSequence = tokenIfType(children[first], \"codeTextSequence\");\n      const endSequence = tokenIfType(children[last], \"codeTextSequence\");\n      const startData =\n        tokenIfType(children[first + 1], \"codeTextData\") ||\n        tokenIfType(children[first + 2], \"codeTextData\");\n      const endData =\n        tokenIfType(children[last - 1], \"codeTextData\") ||\n        tokenIfType(children[last - 2], \"codeTextData\");\n      if (startSequence && endSequence && startData && endData) {\n        const spaceLeft = leftSpaceRe.test(startData.text);\n        const spaceRight = rightSpaceRe.test(endData.text);\n        if (spaceLeft || spaceRight) {\n          let lineNumber = startSequence.startLine;\n          let range = null;\n          let fixInfo = null;\n          if (startSequence.startLine === endSequence.endLine) {\n            range = [\n              startSequence.startColumn,\n              endSequence.endColumn - startSequence.startColumn\n            ];\n            fixInfo = {\n              \"editColumn\": startSequence.endColumn,\n              \"deleteCount\": endSequence.startColumn - startSequence.endColumn,\n              \"insertText\": trimCodeText(startData.text, true, true)\n            };\n          } else if (spaceLeft && (startSequence.endLine === startData.startLine)) {\n            range = [\n              startSequence.startColumn,\n              startData.endColumn - startSequence.startColumn\n            ];\n            fixInfo = {\n              \"editColumn\": startSequence.endColumn,\n              \"deleteCount\": startData.endColumn - startData.startColumn,\n              \"insertText\": trimCodeText(startData.text, true, false)\n            };\n          } else if (spaceRight && (endData.text.trim().length > 0)) {\n            lineNumber = endSequence.endLine;\n            range = [\n              endData.startColumn,\n              endSequence.endColumn - endData.startColumn\n            ];\n            fixInfo = {\n              \"editColumn\": endData.startColumn,\n              \"deleteCount\": endData.endColumn - endData.startColumn,\n              \"insertText\": trimCodeText(endData.text, false, true)\n            };\n          }\n          if (range) {\n            const context = params\n              .lines[lineNumber - 1]\n              .substring(range[0] - 1, range[0] - 1 + range[1]);\n            addErrorContext(\n              onError,\n              lineNumber,\n              context,\n              spaceLeft,\n              spaceRight,\n              range,\n              fixInfo\n            );\n          }\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, filterTokens } = require(\"../helpers\");\n\nconst spaceInLinkRe =\n  /\\[(?:\\s[^\\]]*|[^\\]]*?\\s)\\](?=(\\([^)]*\\)|\\[[^\\]]*\\]))/;\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD039\", \"no-space-in-links\" ],\n  \"description\": \"Spaces inside link text\",\n  \"tags\": [ \"whitespace\", \"links\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD039(params, onError) {\n    filterTokens(params, \"inline\", (token) => {\n      const { children } = token;\n      let { lineNumber } = token;\n      let inLink = false;\n      let linkText = \"\";\n      let lineIndex = 0;\n      for (const child of children) {\n        const { content, markup, type } = child;\n        if (type === \"link_open\") {\n          inLink = true;\n          linkText = \"\";\n        } else if (type === \"link_close\") {\n          inLink = false;\n          const left = linkText.trimStart().length !== linkText.length;\n          const right = linkText.trimEnd().length !== linkText.length;\n          if (left || right) {\n            const line = params.lines[lineNumber - 1];\n            let range = null;\n            let fixInfo = null;\n            const match = line.slice(lineIndex).match(spaceInLinkRe);\n            if (match) {\n              // @ts-ignore\n              const column = match.index + lineIndex + 1;\n              const length = match[0].length;\n              range = [ column, length ];\n              fixInfo = {\n                \"editColumn\": column + 1,\n                \"deleteCount\": length - 2,\n                \"insertText\": linkText.trim()\n              };\n              lineIndex = column + length - 1;\n            }\n            addErrorContext(\n              onError,\n              lineNumber,\n              `[${linkText}]`,\n              left,\n              right,\n              range,\n              fixInfo\n            );\n          }\n        } else if ((type === \"softbreak\") || (type === \"hardbreak\")) {\n          lineNumber++;\n          lineIndex = 0;\n        } else if (inLink) {\n          linkText += type.endsWith(\"_inline\") ?\n            `${markup}${content}${markup}` :\n            (content || markup);\n        }\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, addErrorContext } = require(\"../helpers\");\nconst { filterByTypes, getTokenTextByType, tokenIfType } =\n  require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD040\", \"fenced-code-language\" ],\n  \"description\": \"Fenced code blocks should have a language specified\",\n  \"tags\": [ \"code\", \"language\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD040(params, onError) {\n    let allowed = params.config.allowed_languages;\n    allowed = Array.isArray(allowed) ? allowed : [];\n    const languageOnly = !!params.config.language_only;\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const fencedCodes = filterByTypes(micromarkTokens, [ \"codeFenced\" ]);\n    for (const fencedCode of fencedCodes) {\n      const openingFence = tokenIfType(fencedCode.children[0], \"codeFencedFence\");\n      if (openingFence) {\n        const { children, startLine, text } = openingFence;\n        const info = getTokenTextByType(children, \"codeFencedFenceInfo\");\n        if (!info) {\n          addErrorContext(onError, startLine, text);\n        } else if ((allowed.length > 0) && !allowed.includes(info)) {\n          addError(onError, startLine, `\"${info}\" is not allowed`);\n        }\n        if (languageOnly && getTokenTextByType(children, \"codeFencedFenceMeta\")) {\n          addError(onError, startLine, `Info string contains more than language: \"${text}\"`);\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, frontMatterHasTitle } = require(\"../helpers\");\nconst { filterByTypes, getHeadingLevel, getHtmlTagInfo, isHtmlFlowComment, nonContentTokens } =\n  require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD041\", \"first-line-heading\", \"first-line-h1\" ],\n  \"description\": \"First line in a file should be a top-level heading\",\n  \"tags\": [ \"headings\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD041(params, onError) {\n    const level = Number(params.config.level || 1);\n    if (!frontMatterHasTitle(params.frontMatterLines, params.config.front_matter_title)) {\n      params.parsers.micromark.tokens.\n        filter((token) => !nonContentTokens.has(token.type) && !isHtmlFlowComment(token)).\n        every((token) => {\n          let isError = true;\n          if ((token.type === \"atxHeading\") || (token.type === \"setextHeading\")) {\n            isError = (getHeadingLevel(token) !== level);\n          } else if (token.type === \"htmlFlow\") {\n            const htmlTexts = filterByTypes(token.children, [ \"htmlText\" ]);\n            const tagInfo = (htmlTexts.length > 0) && getHtmlTagInfo(htmlTexts[0]);\n            isError = !tagInfo || (tagInfo.name.toLowerCase() !== `h${level}`);\n          }\n          if (isError) {\n            addErrorContext(onError, token.startLine, params.lines[token.startLine - 1]);\n          }\n          return false;\n        });\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, escapeForRegExp, filterTokens } =\n  require(\"../helpers\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD042\", \"no-empty-links\" ],\n  \"description\": \"No empty links\",\n  \"tags\": [ \"links\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD042(params, onError) {\n    filterTokens(params, \"inline\", function forToken(token) {\n      let inLink = false;\n      let linkText = \"\";\n      let emptyLink = false;\n      for (const child of token.children) {\n        if (child.type === \"link_open\") {\n          inLink = true;\n          linkText = \"\";\n          for (const attr of child.attrs) {\n            if (attr[0] === \"href\" && (!attr[1] || (attr[1] === \"#\"))) {\n              emptyLink = true;\n            }\n          }\n        } else if (child.type === \"link_close\") {\n          inLink = false;\n          if (emptyLink) {\n            let context = `[${linkText}]`;\n            let range = null;\n            const match = child.line.match(\n              new RegExp(`${escapeForRegExp(context)}\\\\((?:|#|<>)\\\\)`)\n            );\n            if (match) {\n              context = match[0];\n              // @ts-ignore\n              range = [ match.index + 1, match[0].length ];\n            }\n            addErrorContext(\n              onError, child.lineNumber, context, null, null, range\n            );\n            emptyLink = false;\n          }\n        } else if (inLink) {\n          linkText += child.content;\n        }\n      }\n    });\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, addErrorDetailIf, forEachHeading } =\n  require(\"../helpers\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD043\", \"required-headings\" ],\n  \"description\": \"Required heading structure\",\n  \"tags\": [ \"headings\" ],\n  \"parser\": \"markdownit\",\n  \"function\": function MD043(params, onError) {\n    const requiredHeadings = params.config.headings;\n    if (!Array.isArray(requiredHeadings)) {\n      // Nothing to check; avoid doing any work\n      return;\n    }\n    const matchCase = params.config.match_case || false;\n    const levels = {};\n    for (const level of [ 1, 2, 3, 4, 5, 6 ]) {\n      levels[\"h\" + level] = \"######\".substr(-level);\n    }\n    let i = 0;\n    let matchAny = false;\n    let hasError = false;\n    let anyHeadings = false;\n    const getExpected = () => requiredHeadings[i++] || \"[None]\";\n    const handleCase = (str) => (matchCase ? str : str.toLowerCase());\n    forEachHeading(params, (heading, content) => {\n      if (!hasError) {\n        anyHeadings = true;\n        const actual = levels[heading.tag] + \" \" + content;\n        const expected = getExpected();\n        if (expected === \"*\") {\n          const nextExpected = getExpected();\n          if (handleCase(nextExpected) !== handleCase(actual)) {\n            matchAny = true;\n            i--;\n          }\n        } else if (expected === \"+\") {\n          matchAny = true;\n        } else if (handleCase(expected) === handleCase(actual)) {\n          matchAny = false;\n        } else if (matchAny) {\n          i--;\n        } else {\n          addErrorDetailIf(onError, heading.lineNumber,\n            expected, actual);\n          hasError = true;\n        }\n      }\n    });\n    const extraHeadings = requiredHeadings.length - i;\n    if (\n      !hasError &&\n      ((extraHeadings > 1) ||\n        ((extraHeadings === 1) && (requiredHeadings[i] !== \"*\"))) &&\n      (anyHeadings || !requiredHeadings.every((heading) => heading === \"*\"))\n    ) {\n      addErrorContext(onError, params.lines.length,\n        requiredHeadings[i]);\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf, escapeForRegExp, withinAnyRange } =\n  require(\"../helpers\");\nconst { filterByPredicate, filterByTypes, parse } =\n  require(\"../helpers/micromark.cjs\");\n\nconst ignoredChildTypes = new Set(\n  [ \"codeFencedFence\", \"definition\", \"reference\", \"resource\" ]\n);\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD044\", \"proper-names\" ],\n  \"description\": \"Proper names should have the correct capitalization\",\n  \"tags\": [ \"spelling\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD044(params, onError) {\n    let names = params.config.names;\n    names = Array.isArray(names) ? names : [];\n    names.sort((a, b) => (b.length - a.length) || a.localeCompare(b));\n    if (names.length === 0) {\n      // Nothing to check; avoid doing any work\n      return;\n    }\n    const codeBlocks = params.config.code_blocks;\n    const includeCodeBlocks =\n      (codeBlocks === undefined) ? true : !!codeBlocks;\n    const htmlElements = params.config.html_elements;\n    const includeHtmlElements =\n      (htmlElements === undefined) ? true : !!htmlElements;\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const scannedTypes = new Set([ \"data\" ]);\n    if (includeCodeBlocks) {\n      scannedTypes.add(\"codeFlowValue\");\n      scannedTypes.add(\"codeTextData\");\n    }\n    if (includeHtmlElements) {\n      scannedTypes.add(\"htmlFlowData\");\n      scannedTypes.add(\"htmlTextData\");\n    }\n    const contentTokens =\n      filterByPredicate(\n        micromarkTokens,\n        (token) => scannedTypes.has(token.type),\n        (token) => (\n          token.children.filter((t) => !ignoredChildTypes.has(t.type))\n        )\n      );\n    const exclusions = [];\n    const autoLinked = new Set();\n    for (const name of names) {\n      const escapedName = escapeForRegExp(name);\n      const startNamePattern = /^\\W/.test(name) ? \"\" : \"\\\\b_*\";\n      const endNamePattern = /\\W$/.test(name) ? \"\" : \"_*\\\\b\";\n      const namePattern =\n        `(${startNamePattern})(${escapedName})${endNamePattern}`;\n      const nameRe = new RegExp(namePattern, \"gi\");\n      for (const token of contentTokens) {\n        let match = null;\n        while ((match = nameRe.exec(token.text)) !== null) {\n          const [ , leftMatch, nameMatch ] = match;\n          const index = token.startColumn - 1 + match.index + leftMatch.length;\n          const length = nameMatch.length;\n          const lineIndex = token.startLine - 1;\n          if (\n            !withinAnyRange(exclusions, lineIndex, index, length) &&\n            !names.includes(nameMatch)\n          ) {\n            let urlRanges = [];\n            if (!autoLinked.has(token)) {\n              urlRanges = filterByTypes(\n                parse(token.text),\n                [ \"literalAutolink\" ]\n              ).map(\n                (t) => [\n                  lineIndex,\n                  token.startColumn - 1 + t.startColumn - 1,\n                  t.endColumn - t.startColumn\n                ]\n              );\n              exclusions.push(...urlRanges);\n              autoLinked.add(token);\n            }\n            if (!withinAnyRange(urlRanges, lineIndex, index, length)) {\n              const column = index + 1;\n              addErrorDetailIf(\n                onError,\n                token.startLine,\n                name,\n                nameMatch,\n                null,\n                null,\n                [ column, length ],\n                {\n                  \"editColumn\": column,\n                  \"deleteCount\": length,\n                  \"insertText\": name\n                }\n              );\n            }\n          }\n          exclusions.push([ lineIndex, index, length ]);\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, getHtmlAttributeRe, nextLinesRe } = require(\"../helpers\");\nconst { filterByTypes, getHtmlTagInfo } = require(\"../helpers/micromark.cjs\");\n\nconst altRe = getHtmlAttributeRe(\"alt\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD045\", \"no-alt-text\" ],\n  \"description\": \"Images should have alternate text (alt text)\",\n  \"tags\": [ \"accessibility\", \"images\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD045(params, onError) {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n\n    // Process Markdown images\n    const images = filterByTypes(micromarkTokens, [ \"image\" ]);\n    for (const image of images) {\n      const labelTexts = filterByTypes(image.children, [ \"labelText\" ]);\n      if (labelTexts.some((labelText) => labelText.text.length === 0)) {\n        const range = (image.startLine === image.endLine) ?\n          [ image.startColumn, image.endColumn - image.startColumn ] :\n          undefined;\n        addError(\n          onError,\n          image.startLine,\n          undefined,\n          undefined,\n          range\n        );\n      }\n    }\n\n    // Process HTML images\n    const htmlTexts = filterByTypes(micromarkTokens, [ \"htmlText\" ]);\n    for (const htmlText of htmlTexts) {\n      const { startColumn, startLine, text } = htmlText;\n      const htmlTagInfo = getHtmlTagInfo(htmlText);\n      if (\n        htmlTagInfo &&\n        !htmlTagInfo.close &&\n        (htmlTagInfo.name.toLowerCase() === \"img\") &&\n        !altRe.test(text)\n      ) {\n        const range = [\n          startColumn,\n          text.replace(nextLinesRe, \"\").length\n        ];\n        addError(\n          onError,\n          startLine,\n          undefined,\n          undefined,\n          range\n        );\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf } = require(\"../helpers\");\nconst { filterByTypes } = require(\"../helpers/micromark.cjs\");\n\nconst tokenTypeToStyle = {\n  \"codeFenced\": \"fenced\",\n  \"codeIndented\": \"indented\"\n};\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD046\", \"code-block-style\" ],\n  \"description\": \"Code block style\",\n  \"tags\": [ \"code\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD046(params, onError) {\n    let expectedStyle = String(params.config.style || \"consistent\");\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const codeBlocksAndFences = filterByTypes(micromarkTokens, [ \"codeFenced\", \"codeIndented\" ]);\n    for (const token of codeBlocksAndFences) {\n      const { startLine, type } = token;\n      if (expectedStyle === \"consistent\") {\n        expectedStyle = tokenTypeToStyle[type];\n      }\n      addErrorDetailIf(\n        onError,\n        startLine,\n        expectedStyle,\n        tokenTypeToStyle[type]);\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, isBlankLine } = require(\"../helpers\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD047\", \"single-trailing-newline\" ],\n  \"description\": \"Files should end with a single newline character\",\n  \"tags\": [ \"blank_lines\" ],\n  \"parser\": \"none\",\n  \"function\": function MD047(params, onError) {\n    const lastLineNumber = params.lines.length;\n    const lastLine = params.lines[lastLineNumber - 1];\n    if (!isBlankLine(lastLine)) {\n      addError(\n        onError,\n        lastLineNumber,\n        undefined,\n        undefined,\n        [ lastLine.length, 1 ],\n        {\n          \"insertText\": \"\\n\",\n          \"editColumn\": lastLine.length + 1\n        }\n      );\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf, fencedCodeBlockStyleFor } = require(\"../helpers\");\nconst { filterByTypes, tokenIfType } = require(\"../helpers/micromark.cjs\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD048\", \"code-fence-style\" ],\n  \"description\": \"Code fence style\",\n  \"tags\": [ \"code\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD048(params, onError) {\n    const style = String(params.config.style || \"consistent\");\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    let expectedStyle = style;\n    const codeFenceds = filterByTypes(micromarkTokens, [ \"codeFenced\" ]);\n    for (const codeFenced of codeFenceds) {\n      const codeFencedFence = tokenIfType(codeFenced.children[0], \"codeFencedFence\");\n      if (codeFencedFence) {\n        const codeFencedFenceSequence = tokenIfType(codeFencedFence.children[0], \"codeFencedFenceSequence\");\n        if (codeFencedFenceSequence) {\n          const { startLine, text } = codeFencedFenceSequence;\n          if (expectedStyle === \"consistent\") {\n            expectedStyle = fencedCodeBlockStyleFor(text);\n          }\n          addErrorDetailIf(\n            onError,\n            startLine,\n            expectedStyle,\n            fencedCodeBlockStyleFor(text)\n          );\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, emphasisOrStrongStyleFor } = require(\"../helpers\");\nconst { filterByPredicate, tokenIfType } = require(\"../helpers/micromark.cjs\");\n\nconst intrawordRe = /^\\w$/;\n\n/**\n * @param {import(\"./markdownlint\").RuleParams} params Rule parameters.\n * @param {import(\"./markdownlint\").RuleOnError} onError Error-reporting callback.\n * @param {import(\"markdownlint-micromark\").TokenType} type Token type.\n * @param {import(\"markdownlint-micromark\").TokenType} typeSequence Token sequence type.\n * @param {\"*\" | \"**\"} asterisk Asterisk kind.\n * @param {\"_\" | \"__\"} underline Underline kind.\n * @param {\"asterisk\" | \"consistent\" | \"underscore\"} style Style string.\n */\nconst impl =\n  (params, onError, type, typeSequence, asterisk, underline, style = \"consistent\") => {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const { lines } = params;\n    const emphasisTokens = filterByPredicate(\n      micromarkTokens,\n      (token) => token.type === type,\n      (token) => ((token.type === \"htmlFlow\") ? [] : token.children)\n    );\n    for (const token of emphasisTokens) {\n      const { children } = token;\n      const startSequence = tokenIfType(children[0], typeSequence);\n      const endSequence = tokenIfType(children[children.length - 1], typeSequence);\n      if (startSequence && endSequence) {\n        const markupStyle = emphasisOrStrongStyleFor(startSequence.text);\n        if (style === \"consistent\") {\n          style = markupStyle;\n        }\n        if (style !== markupStyle) {\n          const underscoreIntraword = (style === \"underscore\") && (\n            intrawordRe.test(\n              lines[startSequence.startLine - 1][startSequence.startColumn - 2]\n            ) ||\n            intrawordRe.test(\n              lines[endSequence.endLine - 1][endSequence.endColumn - 1]\n            )\n          );\n          if (!underscoreIntraword) {\n            for (const sequence of [ startSequence, endSequence ]) {\n              addError(\n                onError,\n                sequence.startLine,\n                `Expected: ${style}; Actual: ${markupStyle}`,\n                undefined,\n                [ sequence.startColumn, sequence.text.length ],\n                {\n                  \"editColumn\": sequence.startColumn,\n                  \"deleteCount\": sequence.text.length,\n                  \"insertText\": (style === \"asterisk\") ? asterisk : underline\n                }\n              );\n            }\n          }\n        }\n      }\n    }\n  };\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule[] */\nmodule.exports = [\n  {\n    \"names\": [ \"MD049\", \"emphasis-style\" ],\n    \"description\": \"Emphasis style\",\n    \"tags\": [ \"emphasis\" ],\n    \"parser\": \"micromark\",\n    \"function\": function MD049(params, onError) {\n      return impl(\n        params,\n        onError,\n        \"emphasis\",\n        \"emphasisSequence\",\n        \"*\",\n        \"_\",\n        params.config.style || undefined\n      );\n    }\n  },\n  {\n    \"names\": [ \"MD050\", \"strong-style\" ],\n    \"description\": \"Strong style\",\n    \"tags\": [ \"emphasis\" ],\n    \"parser\": \"micromark\",\n    \"function\": function MD050(params, onError) {\n      return impl(\n        params,\n        onError,\n        \"strong\",\n        \"strongSequence\",\n        \"**\",\n        \"__\",\n        params.config.style || undefined\n      );\n    }\n  }\n];\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, addErrorDetailIf, getHtmlAttributeRe } =\n  require(\"../helpers\");\nconst { filterByPredicate, filterByTypes, getHtmlTagInfo } =\n  require(\"../helpers/micromark.cjs\");\n\n// Regular expression for identifying HTML anchor names\nconst idRe = getHtmlAttributeRe(\"id\");\nconst nameRe = getHtmlAttributeRe(\"name\");\nconst anchorRe = /\\{(#[a-z\\d]+(?:[-_][a-z\\d]+)*)\\}/gu;\nconst lineFragmentRe = /^#(?:L\\d+(?:C\\d+)?-L\\d+(?:C\\d+)?|L\\d+)$/;\n\n// Sets for filtering heading tokens during conversion\nconst childrenExclude = new Set([ \"image\", \"reference\", \"resource\" ]);\nconst tokensInclude = new Set(\n  [ \"characterEscapeValue\", \"codeTextData\", \"data\", \"mathTextData\" ]\n);\n\n/**\n * Converts a Markdown heading into an HTML fragment according to the rules\n * used by GitHub.\n *\n * @param {import(\"../helpers/micromark.cjs\").Token} headingText Heading text token.\n * @returns {string} Fragment string for heading.\n */\nfunction convertHeadingToHTMLFragment(headingText) {\n  const inlineText =\n    filterByPredicate(\n      headingText.children,\n      (token) => tokensInclude.has(token.type),\n      (token) => (childrenExclude.has(token.type) ? [] : token.children)\n    )\n      .map((token) => token.text)\n      .join(\"\");\n  return \"#\" + encodeURIComponent(\n    inlineText\n      .toLowerCase()\n      // RegExp source with Ruby's \\p{Word} expanded into its General Categories\n      // https://github.com/gjtorikian/html-pipeline/blob/main/lib/html/pipeline/toc_filter.rb\n      // https://ruby-doc.org/core-3.0.2/Regexp.html\n      .replace(\n        /[^\\p{Letter}\\p{Mark}\\p{Number}\\p{Connector_Punctuation}\\- ]/gu,\n        \"\"\n      )\n      .replace(/ /gu, \"-\")\n  );\n}\n\n/**\n * Unescapes the text of a String-type micromark Token.\n *\n * @param {import(\"../helpers/micromark.cjs\").Token} token String-type micromark Token.\n * @returns {string} Unescaped token text.\n */\nfunction unescapeStringTokenText(token) {\n  return filterByTypes(token.children, [ \"characterEscapeValue\", \"data\" ])\n    .map((child) => child.text)\n    .join(\"\");\n}\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD051\", \"link-fragments\" ],\n  \"description\": \"Link fragments should be valid\",\n  \"tags\": [ \"links\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD051(params, onError) {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const fragments = new Map();\n\n    // Process headings\n    const headingTexts = filterByTypes(micromarkTokens, [ \"atxHeadingText\", \"setextHeadingText\" ]);\n    for (const headingText of headingTexts) {\n      const fragment = convertHeadingToHTMLFragment(headingText);\n      if (fragment !== \"#\") {\n        const count = fragments.get(fragment) || 0;\n        if (count) {\n          fragments.set(`${fragment}-${count}`, 0);\n        }\n        fragments.set(fragment, count + 1);\n        let match = null;\n        while ((match = anchorRe.exec(headingText.text)) !== null) {\n          const [ , anchor ] = match;\n          if (!fragments.has(anchor)) {\n            fragments.set(anchor, 1);\n          }\n        }\n      }\n    }\n\n    // Process HTML anchors\n    for (const token of filterByTypes(micromarkTokens, [ \"htmlText\" ])) {\n      const htmlTagInfo = getHtmlTagInfo(token);\n      if (htmlTagInfo && !htmlTagInfo.close) {\n        const anchorMatch = idRe.exec(token.text) ||\n          (htmlTagInfo.name.toLowerCase() === \"a\" && nameRe.exec(token.text));\n        if (anchorMatch && anchorMatch.length > 0) {\n          fragments.set(`#${anchorMatch[1]}`, 0);\n        }\n      }\n    }\n\n    // Process link and definition fragments\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").TokenType[][] */\n    const parentChilds = [\n      [ \"link\", \"resourceDestinationString\" ],\n      [ \"definition\", \"definitionDestinationString\" ]\n    ];\n    for (const [ parentType, definitionType ] of parentChilds) {\n      const links = filterByTypes(micromarkTokens, [ parentType ]);\n      for (const link of links) {\n        const definitions = filterByTypes(link.children, [ definitionType ]);\n        for (const definition of definitions) {\n          const { endColumn, startColumn } = definition;\n          const text = unescapeStringTokenText(definition);\n          const encodedText = `#${encodeURIComponent(text.slice(1))}`;\n          if (\n            (text.length > 1) &&\n            text.startsWith(\"#\") &&\n            !fragments.has(encodedText) &&\n            !lineFragmentRe.test(encodedText)\n          ) {\n            // eslint-disable-next-line no-undef-init\n            let context = undefined;\n            // eslint-disable-next-line no-undef-init\n            let range = undefined;\n            // eslint-disable-next-line no-undef-init\n            let fixInfo = undefined;\n            if (link.startLine === link.endLine) {\n              context = link.text;\n              range = [ link.startColumn, link.endColumn - link.startColumn ];\n              fixInfo = {\n                \"editColumn\": startColumn,\n                \"deleteCount\": endColumn - startColumn\n              };\n            }\n            const textLower = text.toLowerCase();\n            const mixedCaseKey = [ ...fragments.keys() ]\n              .find((key) => textLower === key.toLowerCase());\n            if (mixedCaseKey) {\n              // @ts-ignore\n              (fixInfo || {}).insertText = mixedCaseKey;\n              addErrorDetailIf(\n                onError,\n                link.startLine,\n                mixedCaseKey,\n                text,\n                undefined,\n                context,\n                range,\n                fixInfo\n              );\n            } else {\n              addError(\n                onError,\n                link.startLine,\n                undefined,\n                context,\n                range\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError } = require(\"../helpers\");\nconst { referenceLinkImageData } = require(\"./cache\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD052\", \"reference-links-images\" ],\n  \"description\":\n    \"Reference links and images should use a label that is defined\",\n  \"tags\": [ \"images\", \"links\" ],\n  \"parser\": \"none\",\n  \"function\": function MD052(params, onError) {\n    const { config, lines } = params;\n    const shortcutSyntax = config.shortcut_syntax || false;\n    const { definitions, references, shortcuts } = referenceLinkImageData();\n    const entries = shortcutSyntax ?\n      [ ...references.entries(), ...shortcuts.entries() ] :\n      references.entries();\n    // Look for links/images that use an undefined link reference\n    for (const reference of entries) {\n      const [ label, datas ] = reference;\n      if (!definitions.has(label)) {\n        for (const data of datas) {\n          const [ lineIndex, index, length ] = data;\n          // Context will be incomplete if reporting for a multi-line link\n          const context = lines[lineIndex].slice(index, index + length);\n          addError(\n            onError,\n            lineIndex + 1,\n            `Missing link or image reference definition: \"${label}\"`,\n            context,\n            [ index + 1, context.length ]\n          );\n        }\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addError, ellipsify, linkReferenceDefinitionRe } =\n  require(\"../helpers\");\nconst { referenceLinkImageData } = require(\"./cache\");\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD053\", \"link-image-reference-definitions\" ],\n  \"description\": \"Link and image reference definitions should be needed\",\n  \"tags\": [ \"images\", \"links\" ],\n  \"parser\": \"none\",\n  \"function\": function MD053(params, onError) {\n    const ignored = new Set(params.config.ignored_definitions || [ \"//\" ]);\n    const lines = params.lines;\n    const { references, shortcuts, definitions, duplicateDefinitions } =\n      referenceLinkImageData();\n    const singleLineDefinition = (line) => (\n      line.replace(linkReferenceDefinitionRe, \"\").trim().length > 0\n    );\n    const deleteFixInfo = {\n      \"deleteCount\": -1\n    };\n    // Look for unused link references (unreferenced by any link/image)\n    for (const definition of definitions.entries()) {\n      const [ label, [ lineIndex ] ] = definition;\n      if (\n        !ignored.has(label) &&\n        !references.has(label) &&\n        !shortcuts.has(label)\n      ) {\n        const line = lines[lineIndex];\n        addError(\n          onError,\n          lineIndex + 1,\n          `Unused link or image reference definition: \"${label}\"`,\n          ellipsify(line),\n          [ 1, line.length ],\n          singleLineDefinition(line) ? deleteFixInfo : 0\n        );\n      }\n    }\n    // Look for duplicate link references (defined more than once)\n    for (const duplicateDefinition of duplicateDefinitions) {\n      const [ label, lineIndex ] = duplicateDefinition;\n      if (!ignored.has(label)) {\n        const line = lines[lineIndex];\n        addError(\n          onError,\n          lineIndex + 1,\n          `Duplicate link or image reference definition: \"${label}\"`,\n          ellipsify(line),\n          [ 1, line.length ],\n          singleLineDefinition(line) ? deleteFixInfo : 0\n        );\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorContext, nextLinesRe } = require(\"../helpers\");\nconst { filterByTypes, filterByPredicate, getTokenTextByType } =\n  require(\"../helpers/micromark.cjs\");\nconst { referenceLinkImageData } = require(\"./cache\");\n\nconst backslashEscapeRe = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g;\nconst removeBackslashEscapes = (text) => text.replace(backslashEscapeRe, \"$1\");\nconst autolinkDisallowedRe = /[ <>]/;\nconst autolinkAble = (destination) => {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(destination);\n  } catch {\n    // Not an absolute URL\n    return false;\n  }\n  return !autolinkDisallowedRe.test(destination);\n};\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD054\", \"link-image-style\" ],\n  \"description\": \"Link and image style\",\n  \"tags\": [ \"images\", \"links\" ],\n  \"parser\": \"micromark\",\n  \"function\": (params, onError) => {\n    const config = params.config;\n    const autolink = (config.autolink === undefined) || !!config.autolink;\n    const inline = (config.inline === undefined) || !!config.inline;\n    const full = (config.full === undefined) || !!config.full;\n    const collapsed = (config.collapsed === undefined) || !!config.collapsed;\n    const shortcut = (config.shortcut === undefined) || !!config.shortcut;\n    const urlInline = (config.url_inline === undefined) || !!config.url_inline;\n    if (autolink && inline && full && collapsed && shortcut && urlInline) {\n      // Everything allowed, nothing to check\n      return;\n    }\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const { definitions } = referenceLinkImageData();\n    const links = filterByTypes(micromarkTokens, [ \"autolink\", \"image\", \"link\" ]);\n    for (const link of links) {\n      let label = null;\n      let destination = null;\n      const {\n        children, endColumn, endLine, startColumn, startLine, text, type\n      } = link;\n      const image = (type === \"image\");\n      let isError = false;\n      if (type === \"autolink\") {\n        // link kind is an autolink\n        destination = getTokenTextByType(children, \"autolinkProtocol\");\n        label = destination;\n        isError = !autolink;\n      } else {\n        // link type is \"image\" or \"link\"\n        const descendents = filterByPredicate(children);\n        label = getTokenTextByType(descendents, \"labelText\");\n        destination =\n          getTokenTextByType(descendents, \"resourceDestinationString\");\n        if (destination) {\n          // link kind is an inline link\n          const title = getTokenTextByType(descendents, \"resourceTitleString\");\n          isError = !inline || (\n            !urlInline &&\n            autolink &&\n            !image &&\n            !title &&\n            (label === destination) &&\n            autolinkAble(destination)\n          );\n        } else {\n          // link kind is a full/collapsed/shortcut reference link\n          const isShortcut = !children.some((t) => t.type === \"reference\");\n          const referenceString = getTokenTextByType(descendents, \"referenceString\");\n          const isCollapsed = (referenceString === null);\n          const definition = definitions.get(referenceString || label);\n          destination = definition && definition[1];\n          isError = destination &&\n            (isShortcut ? !shortcut : (isCollapsed ? !collapsed : !full));\n        }\n      }\n      if (isError) {\n        let range = null;\n        let fixInfo = null;\n        if (startLine === endLine) {\n          range = [ startColumn, endColumn - startColumn ];\n          let insertText = null;\n          const canInline = (inline && label);\n          const canAutolink = (autolink && !image && autolinkAble(destination));\n          if (canInline && (urlInline || !canAutolink)) {\n            // Most useful form\n            const prefix = (image ? \"!\" : \"\");\n            // @ts-ignore\n            const escapedLabel = label.replace(/[[\\]]/g, \"\\\\$&\");\n            const escapedDestination = destination.replace(/[()]/g, \"\\\\$&\");\n            insertText = `${prefix}[${escapedLabel}](${escapedDestination})`;\n          } else if (canAutolink) {\n            // Simplest form\n            insertText = `<${removeBackslashEscapes(destination)}>`;\n          }\n          if (insertText) {\n            fixInfo = {\n              \"editColumn\": range[0],\n              insertText,\n              \"deleteCount\": range[1]\n            };\n          }\n        }\n        addErrorContext(\n          onError,\n          startLine,\n          text.replace(nextLinesRe, \"\"),\n          null,\n          null,\n          range,\n          fixInfo\n        );\n      }\n    }\n  }\n};\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf } = require(\"../helpers\");\nconst { filterByTypes } = require(\"../helpers/micromark.cjs\");\n\nconst whitespaceTypes = new Set([ \"linePrefix\", \"whitespace\" ]);\nconst ignoreWhitespace = (tokens) => tokens.filter(\n  (token) => !whitespaceTypes.has(token.type)\n);\nconst firstOrNothing = (items) => items[0];\nconst lastOrNothing = (items) => items[items.length - 1];\nconst makeRange = (start, end) => [ start, end - start + 1 ];\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD055\", \"table-pipe-style\" ],\n  \"description\": \"Table pipe style\",\n  \"tags\": [ \"table\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD055(params, onError) {\n    const style = String(params.config.style || \"consistent\");\n    let expectedStyle = style;\n    let expectedLeadingPipe =\n      ((expectedStyle !== \"no_leading_or_trailing\") && (expectedStyle !== \"trailing_only\"));\n    let expectedTrailingPipe =\n      ((expectedStyle !== \"no_leading_or_trailing\") && (expectedStyle !== \"leading_only\"));\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const tables = filterByTypes(micromarkTokens, [ \"table\" ]);\n    for (const table of tables) {\n      const rows = filterByTypes(table.children, [ \"tableDelimiterRow\", \"tableRow\" ]);\n      for (const row of rows) {\n        // The following uses of first/lastOrNothing lack fallback handling\n        // because it seems not to be possible (i.e., 0% coverage)\n        const firstCell = firstOrNothing(row.children);\n        const leadingToken = firstOrNothing(ignoreWhitespace(firstCell.children));\n        const actualLeadingPipe = (leadingToken.type === \"tableCellDivider\");\n        const lastCell = lastOrNothing(row.children);\n        const trailingToken = lastOrNothing(ignoreWhitespace(lastCell.children));\n        const actualTrailingPipe = (trailingToken.type === \"tableCellDivider\");\n        const actualStyle = actualLeadingPipe ?\n          (actualTrailingPipe ? \"leading_and_trailing\" : \"leading_only\") :\n          (actualTrailingPipe ? \"trailing_only\" : \"no_leading_or_trailing\");\n        if (expectedStyle === \"consistent\") {\n          expectedStyle = actualStyle;\n          expectedLeadingPipe = actualLeadingPipe;\n          expectedTrailingPipe = actualTrailingPipe;\n        }\n        if (actualLeadingPipe !== expectedLeadingPipe) {\n          addErrorDetailIf(\n            onError,\n            firstCell.startLine,\n            expectedStyle,\n            actualStyle,\n            `${expectedLeadingPipe ? \"Missing\" : \"Unexpected\"} leading pipe`,\n            undefined,\n            makeRange(row.startColumn, firstCell.startColumn)\n          );\n        }\n        if (actualTrailingPipe !== expectedTrailingPipe) {\n          addErrorDetailIf(\n            onError,\n            lastCell.endLine,\n            expectedStyle,\n            actualStyle,\n            `${expectedTrailingPipe ? \"Missing\" : \"Unexpected\"} trailing pipe`,\n            undefined,\n            makeRange(lastCell.endColumn - 1, row.endColumn - 1)\n          );\n        }\n      }\n    }\n  }\n}\n", "// @ts-check\n\n\"use strict\";\n\nconst { addErrorDetailIf } = require(\"../helpers\");\nconst { filterByTypes } = require(\"../helpers/micromark.cjs\");\n\nconst makeRange = (start, end) => [ start, end - start + 1 ];\n\n// eslint-disable-next-line jsdoc/valid-types\n/** @type import(\"./markdownlint\").Rule */\nmodule.exports = {\n  \"names\": [ \"MD056\", \"table-column-count\" ],\n  \"description\": \"Table column count\",\n  \"tags\": [ \"table\" ],\n  \"parser\": \"micromark\",\n  \"function\": function MD056(params, onError) {\n    // eslint-disable-next-line jsdoc/valid-types\n    /** @type import(\"../helpers/micromark.cjs\").Token[] */\n    const micromarkTokens =\n      // @ts-ignore\n      params.parsers.micromark.tokens;\n    const tables = filterByTypes(micromarkTokens, [ \"table\" ]);\n    for (const table of tables) {\n      const rows = filterByTypes(table.children, [ \"tableDelimiterRow\", \"tableRow\" ]);\n      let expectedCount = 0;\n      for (const row of rows) {\n        const cells = filterByTypes(row.children, [ \"tableData\", \"tableDelimiter\", \"tableHeader\" ]);\n        const actualCount = cells.length;\n        expectedCount ||= actualCount;\n        let detail = null;\n        let range = null;\n        if (actualCount < expectedCount) {\n          detail = \"Too few cells, row will be missing data\";\n          range = [ row.endColumn - 1, 1 ];\n        } else if (expectedCount < actualCount) {\n          detail = \"Too many cells, extra data will be missing\";\n          range = makeRange(cells[expectedCount].startColumn, row.endColumn - 1);\n        }\n        addErrorDetailIf(\n          onError,\n          row.endLine,\n          expectedCount,\n          actualCount,\n          detail,\n          null,\n          range\n        );\n      }\n    }\n  }\n}\n", "// @ts-check\n\n\"use strict\";\n\nconst { homepage, version } = require(\"./constants\");\n\nconst rules = [\n  require(\"./md001\"),\n  // md002: Deprecated and removed\n  require(\"./md003\"),\n  require(\"./md004\"),\n  require(\"./md005\"),\n  // md006: Deprecated and removed\n  require(\"./md007\"),\n  require(\"./md009\"),\n  require(\"./md010\"),\n  require(\"./md011\"),\n  require(\"./md012\"),\n  require(\"./md013\"),\n  require(\"./md014\"),\n  require(\"./md018\"),\n  require(\"./md019\"),\n  require(\"./md020\"),\n  require(\"./md021\"),\n  require(\"./md022\"),\n  require(\"./md023\"),\n  require(\"./md024\"),\n  require(\"./md025\"),\n  require(\"./md026\"),\n  require(\"./md027\"),\n  require(\"./md028\"),\n  require(\"./md029\"),\n  require(\"./md030\"),\n  require(\"./md031\"),\n  require(\"./md032\"),\n  require(\"./md033\"),\n  require(\"./md034\"),\n  require(\"./md035\"),\n  require(\"./md036\"),\n  require(\"./md037\"),\n  require(\"./md038\"),\n  require(\"./md039\"),\n  require(\"./md040\"),\n  require(\"./md041\"),\n  require(\"./md042\"),\n  require(\"./md043\"),\n  require(\"./md044\"),\n  require(\"./md045\"),\n  require(\"./md046\"),\n  require(\"./md047\"),\n  require(\"./md048\"),\n  ...require(\"./md049-md050\"),\n  require(\"./md051\"),\n  require(\"./md052\"),\n  require(\"./md053\"),\n  require(\"./md054\"),\n  require(\"./md055\"),\n  require(\"./md056\")\n  // md057: See https://github.com/markdownlint/markdownlint\n];\nfor (const rule of rules) {\n  const name = rule.names[0].toLowerCase();\n  // eslint-disable-next-line dot-notation\n  rule[\"information\"] =\n    new URL(`${homepage}/blob/v${version}/doc/${name}.md`);\n}\nmodule.exports = rules;\n", "// @ts-check\n\n\"use strict\";\n\nconst path = require(\"node:path\");\nconst { promisify } = require(\"node:util\");\nconst markdownit = require(\"markdown-it\");\nconst micromark = require(\"../helpers/micromark.cjs\");\n// const { deprecatedRuleNames } = require(\"./constants\");\nconst rules = require(\"./rules\");\nconst helpers = require(\"../helpers\");\nconst cache = require(\"./cache\");\n\n// @ts-ignore\n// eslint-disable-next-line camelcase, no-inline-comments, no-undef\nconst dynamicRequire = (typeof __non_webpack_require__ === \"undefined\") ? require : /* c8 ignore next */ __non_webpack_require__;\n// Capture native require implementation for dynamic loading of modules\n\n/**\n * Validate the list of rules for structure and reuse.\n *\n * @param {Rule[]} ruleList List of rules.\n * @param {boolean} synchronous Whether to execute synchronously.\n * @returns {Error | null} Error message if validation fails.\n */\nfunction validateRuleList(ruleList, synchronous) {\n  let result = null;\n  if (ruleList.length === rules.length) {\n    // No need to validate if only using built-in rules\n    return result;\n  }\n  const allIds = {};\n  for (const [ index, rule ] of ruleList.entries()) {\n    const customIndex = index - rules.length;\n    // eslint-disable-next-line no-inner-declarations, jsdoc/require-jsdoc\n    function newError(property, value) {\n      return new Error(\n        `Property '${property}' of custom rule at index ${customIndex} is incorrect: '${value}'.`);\n    }\n    for (const property of [ \"names\", \"tags\" ]) {\n      const value = rule[property];\n      if (!result &&\n        (!value || !Array.isArray(value) || (value.length === 0) ||\n         !value.every(helpers.isString) || value.some(helpers.isEmptyString))) {\n        result = newError(property, value);\n      }\n    }\n    for (const propertyInfo of [\n      [ \"description\", \"string\" ],\n      [ \"function\", \"function\" ]\n    ]) {\n      const property = propertyInfo[0];\n      const value = rule[property];\n      if (!result && (!value || (typeof value !== propertyInfo[1]))) {\n        result = newError(property, value);\n      }\n    }\n    if (\n      !result &&\n      (rule.parser !== undefined) &&\n      (rule.parser !== \"markdownit\") &&\n      !((customIndex < 0) && (rule.parser === \"micromark\")) &&\n      (rule.parser !== \"none\")\n    ) {\n      result = newError(\"parser\", rule.parser);\n    }\n    if (\n      !result &&\n      rule.information &&\n      !helpers.isUrl(rule.information)\n    ) {\n      result = newError(\"information\", rule.information);\n    }\n    if (\n      !result &&\n      (rule.asynchronous !== undefined) &&\n      (typeof rule.asynchronous !== \"boolean\")\n    ) {\n      result = newError(\"asynchronous\", rule.asynchronous);\n    }\n    if (!result && rule.asynchronous && synchronous) {\n      result = new Error(\n        \"Custom rule \" + rule.names.join(\"/\") + \" at index \" + customIndex +\n        \" is asynchronous and can not be used in a synchronous context.\"\n      );\n    }\n    if (!result) {\n      for (const name of rule.names) {\n        const nameUpper = name.toUpperCase();\n        if (!result && (allIds[nameUpper] !== undefined)) {\n          result = new Error(\"Name '\" + name + \"' of custom rule at index \" +\n            customIndex + \" is already used as a name or tag.\");\n        }\n        allIds[nameUpper] = true;\n      }\n      for (const tag of rule.tags) {\n        const tagUpper = tag.toUpperCase();\n        if (!result && allIds[tagUpper]) {\n          result = new Error(\"Tag '\" + tag + \"' of custom rule at index \" +\n            customIndex + \" is already used as a name.\");\n        }\n        allIds[tagUpper] = false;\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a LintResults instance with toString for pretty display.\n *\n * @param {Rule[]} ruleList List of rules.\n * @returns {LintResults} New LintResults instance.\n */\nfunction newResults(ruleList) {\n  const lintResults = {};\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function toString(useAlias) {\n    let ruleNameToRule = null;\n    const results = [];\n    const keys = Object.keys(lintResults);\n    keys.sort();\n    for (const file of keys) {\n      const fileResults = lintResults[file];\n      if (Array.isArray(fileResults)) {\n        for (const result of fileResults) {\n          const ruleMoniker = result.ruleNames ?\n            result.ruleNames.join(\"/\") :\n            (result.ruleName + \"/\" + result.ruleAlias);\n          results.push(\n            file + \": \" +\n            result.lineNumber + \": \" +\n            ruleMoniker + \" \" +\n            result.ruleDescription +\n            (result.errorDetail ?\n              \" [\" + result.errorDetail + \"]\" :\n              \"\") +\n            (result.errorContext ?\n              \" [Context: \\\"\" + result.errorContext + \"\\\"]\" :\n              \"\"));\n        }\n      } else {\n        if (!ruleNameToRule) {\n          ruleNameToRule = {};\n          for (const rule of ruleList) {\n            const ruleName = rule.names[0].toUpperCase();\n            ruleNameToRule[ruleName] = rule;\n          }\n        }\n        for (const [ ruleName, ruleResults ] of Object.entries(fileResults)) {\n          const rule = ruleNameToRule[ruleName.toUpperCase()];\n          for (const lineNumber of ruleResults) {\n            // @ts-ignore\n            const nameIndex = Math.min(useAlias ? 1 : 0, rule.names.length - 1);\n            const result =\n              file + \": \" +\n              lineNumber + \": \" +\n              // @ts-ignore\n              rule.names[nameIndex] + \" \" +\n              // @ts-ignore\n              rule.description;\n            results.push(result);\n          }\n        }\n      }\n    }\n    return results.join(\"\\n\");\n  }\n  Object.defineProperty(lintResults, \"toString\", { \"value\": toString });\n  // @ts-ignore\n  return lintResults;\n}\n\n/**\n * Remove front matter (if present at beginning of content).\n *\n * @param {string} content Markdown content.\n * @param {RegExp | null} frontMatter Regular expression to match front matter.\n * @returns {Object} Trimmed content and front matter lines.\n */\nfunction removeFrontMatter(content, frontMatter) {\n  let frontMatterLines = [];\n  if (frontMatter) {\n    const frontMatterMatch = content.match(frontMatter);\n    if (frontMatterMatch && !frontMatterMatch.index) {\n      const contentMatched = frontMatterMatch[0];\n      content = content.slice(contentMatched.length);\n      frontMatterLines = contentMatched.split(helpers.newLineRe);\n      if ((frontMatterLines.length > 0) &&\n          (frontMatterLines[frontMatterLines.length - 1] === \"\")) {\n        frontMatterLines.length--;\n      }\n    }\n  }\n  return {\n    \"content\": content,\n    \"frontMatterLines\": frontMatterLines\n  };\n}\n\n/**\n * Freeze all freeze-able members of a token and its children.\n *\n * @param {MarkdownItToken} token A markdown-it token.\n * @returns {void}\n */\nfunction freezeToken(token) {\n  if (token.attrs) {\n    for (const attr of token.attrs) {\n      Object.freeze(attr);\n    }\n    Object.freeze(token.attrs);\n  }\n  if (token.children) {\n    for (const child of token.children) {\n      freezeToken(child);\n    }\n    Object.freeze(token.children);\n  }\n  if (token.map) {\n    Object.freeze(token.map);\n  }\n  Object.freeze(token);\n}\n\n/**\n * Annotate tokens with line/lineNumber and freeze them.\n *\n * @param {MarkdownItToken[]} tokens Array of markdown-it tokens.\n * @param {string[]} lines Lines of Markdown content.\n * @returns {void}\n */\nfunction annotateAndFreezeTokens(tokens, lines) {\n  let trMap = null;\n  for (const token of tokens) {\n    // Provide missing maps for table content\n    if (token.type === \"tr_open\") {\n      trMap = token.map;\n    } else if (token.type === \"tr_close\") {\n      trMap = null;\n    }\n    if (!token.map && trMap) {\n      token.map = [ ...trMap ];\n    }\n    // Update token metadata\n    if (token.map) {\n      token.line = lines[token.map[0]];\n      token.lineNumber = token.map[0] + 1;\n      // Trim bottom of token to exclude whitespace lines\n      while (token.map[1] && !((lines[token.map[1] - 1] || \"\").trim())) {\n        token.map[1]--;\n      }\n    }\n    // Annotate children with lineNumber\n    if (token.children) {\n      const codeSpanExtraLines = [];\n      if (token.children.some((child) => child.type === \"code_inline\")) {\n        helpers.forEachInlineCodeSpan(token.content, (code) => {\n          codeSpanExtraLines.push(code.split(helpers.newLineRe).length - 1);\n        });\n      }\n      let lineNumber = token.lineNumber;\n      for (const child of token.children) {\n        child.lineNumber = lineNumber;\n        child.line = lines[lineNumber - 1];\n        if ((child.type === \"softbreak\") || (child.type === \"hardbreak\")) {\n          lineNumber++;\n        } else if (child.type === \"code_inline\") {\n          lineNumber += codeSpanExtraLines.shift();\n        }\n      }\n    }\n    freezeToken(token);\n  }\n  Object.freeze(tokens);\n}\n\n/**\n * Map rule names/tags to canonical rule name.\n *\n * @param {Rule[]} ruleList List of rules.\n * @returns {Object.<string, string[]>} Map of alias to rule name.\n */\nfunction mapAliasToRuleNames(ruleList) {\n  const aliasToRuleNames = {};\n  // const tagToRuleNames = {};\n  for (const rule of ruleList) {\n    const ruleName = rule.names[0].toUpperCase();\n    // The following is useful for updating README.md:\n    // console.log(\n    //   \"* **[\" + ruleName + \"](doc/Rules.md#\" + ruleName.toLowerCase() +\n    //    \")** *\" + rule.names.slice(1).join(\"/\") + \"* - \" + rule.description);\n    for (const name of rule.names) {\n      const nameUpper = name.toUpperCase();\n      aliasToRuleNames[nameUpper] = [ ruleName ];\n    }\n    for (const tag of rule.tags) {\n      const tagUpper = tag.toUpperCase();\n      const ruleNames = aliasToRuleNames[tagUpper] || [];\n      ruleNames.push(ruleName);\n      aliasToRuleNames[tagUpper] = ruleNames;\n      // tagToRuleNames[tag] = ruleName;\n    }\n  }\n  // The following is useful for updating README.md:\n  // Object.keys(tagToRuleNames).sort().forEach(function forTag(tag) {\n  //   console.log(\"* **\" + tag + \"** - \" +\n  //     aliasToRuleNames[tag.toUpperCase()].join(\", \"));\n  // });\n  // @ts-ignore\n  return aliasToRuleNames;\n}\n\n/**\n * Apply (and normalize) configuration object.\n *\n * @param {Rule[]} ruleList List of rules.\n * @param {Configuration} config Configuration object.\n * @param {Object.<string, string[]>} aliasToRuleNames Map of alias to rule\n * names.\n * @returns {Configuration} Effective configuration.\n */\nfunction getEffectiveConfig(ruleList, config, aliasToRuleNames) {\n  const defaultKey = Object.keys(config).filter(\n    (key) => key.toUpperCase() === \"DEFAULT\"\n  );\n  const ruleDefault = (defaultKey.length === 0) || !!config[defaultKey[0]];\n  /** @type {Configuration} */\n  const effectiveConfig = {};\n  for (const rule of ruleList) {\n    const ruleName = rule.names[0].toUpperCase();\n    effectiveConfig[ruleName] = ruleDefault;\n  }\n  // for (const ruleName of deprecatedRuleNames) {\n  //   effectiveConfig[ruleName] = false;\n  // }\n  for (const key of Object.keys(config)) {\n    let value = config[key];\n    if (value) {\n      if (!(value instanceof Object)) {\n        value = {};\n      }\n    } else {\n      value = false;\n    }\n    const keyUpper = key.toUpperCase();\n    for (const ruleName of (aliasToRuleNames[keyUpper] || [])) {\n      effectiveConfig[ruleName] = value;\n    }\n  }\n  return effectiveConfig;\n}\n\n/**\n * Parse the content of a configuration file.\n *\n * @param {string} name Name of the configuration file.\n * @param {string} content Configuration content.\n * @param {ConfigurationParser[] | null} [parsers] Parsing function(s).\n * @returns {Object} Configuration object and error message.\n */\nfunction parseConfiguration(name, content, parsers) {\n  let config = null;\n  let message = \"\";\n  const errors = [];\n  let index = 0;\n  // Try each parser\n  (parsers || [ JSON.parse ]).every((parser) => {\n    try {\n      config = parser(content);\n    } catch (error) {\n      errors.push(`Parser ${index++}: ${error.message}`);\n    }\n    return !config;\n  });\n  // Message if unable to parse\n  if (!config) {\n    errors.unshift(`Unable to parse '${name}'`);\n    message = errors.join(\"; \");\n  }\n  return {\n    config,\n    message\n  };\n}\n\n/**\n * Create a mapping of enabled rules per line.\n *\n * @param {Rule[]} ruleList List of rules.\n * @param {string[]} lines List of content lines.\n * @param {string[]} frontMatterLines List of front matter lines.\n * @param {boolean} noInlineConfig Whether to allow inline configuration.\n * @param {Configuration} config Configuration object.\n * @param {ConfigurationParser[] | null} configParsers Configuration parsers.\n * @param {Object.<string, string[]>} aliasToRuleNames Map of alias to rule\n * names.\n * @returns {Object} Effective configuration and enabled rules per line number.\n */\nfunction getEnabledRulesPerLineNumber(\n  ruleList,\n  lines,\n  frontMatterLines,\n  noInlineConfig,\n  config,\n  configParsers,\n  aliasToRuleNames) {\n  // Shared variables\n  let enabledRules = {};\n  let capturedRules = {};\n  const allRuleNames = [];\n  const enabledRulesPerLineNumber = new Array(1 + frontMatterLines.length);\n  // Helper functions\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function handleInlineConfig(input, forEachMatch, forEachLine) {\n    for (const [ lineIndex, line ] of input.entries()) {\n      if (!noInlineConfig) {\n        let match = null;\n        while ((match = helpers.inlineCommentStartRe.exec(line))) {\n          const action = match[2].toUpperCase();\n          const startIndex = match.index + match[1].length;\n          const endIndex = line.indexOf(\"-->\", startIndex);\n          if (endIndex === -1) {\n            break;\n          }\n          const parameter = line.slice(startIndex, endIndex);\n          forEachMatch(action, parameter, lineIndex + 1);\n        }\n      }\n      if (forEachLine) {\n        forEachLine();\n      }\n    }\n  }\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function configureFile(action, parameter) {\n    if (action === \"CONFIGURE-FILE\") {\n      const { \"config\": parsed } = parseConfiguration(\n        \"CONFIGURE-FILE\", parameter, configParsers\n      );\n      if (parsed) {\n        config = {\n          ...config,\n          ...parsed\n        };\n      }\n    }\n  }\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function applyEnableDisable(action, parameter, state) {\n    state = { ...state };\n    const enabled = (action.startsWith(\"ENABLE\"));\n    const trimmed = parameter && parameter.trim();\n    const items = trimmed ? trimmed.toUpperCase().split(/\\s+/) : allRuleNames;\n    for (const nameUpper of items) {\n      for (const ruleName of (aliasToRuleNames[nameUpper] || [])) {\n        state[ruleName] = enabled;\n      }\n    }\n    return state;\n  }\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function enableDisableFile(action, parameter) {\n    if ((action === \"ENABLE-FILE\") || (action === \"DISABLE-FILE\")) {\n      enabledRules = applyEnableDisable(action, parameter, enabledRules);\n    }\n  }\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function captureRestoreEnableDisable(action, parameter) {\n    if (action === \"CAPTURE\") {\n      capturedRules = enabledRules;\n    } else if (action === \"RESTORE\") {\n      enabledRules = capturedRules;\n    } else if ((action === \"ENABLE\") || (action === \"DISABLE\")) {\n      enabledRules = applyEnableDisable(action, parameter, enabledRules);\n    }\n  }\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function updateLineState() {\n    enabledRulesPerLineNumber.push(enabledRules);\n  }\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function disableLineNextLine(action, parameter, lineNumber) {\n    const disableLine = (action === \"DISABLE-LINE\");\n    const disableNextLine = (action === \"DISABLE-NEXT-LINE\");\n    if (disableLine || disableNextLine) {\n      const nextLineNumber =\n        frontMatterLines.length + lineNumber + (disableNextLine ? 1 : 0);\n      enabledRulesPerLineNumber[nextLineNumber] =\n        applyEnableDisable(\n          action,\n          parameter,\n          enabledRulesPerLineNumber[nextLineNumber]\n        );\n    }\n  }\n  // Handle inline comments\n  handleInlineConfig([ lines.join(\"\\n\") ], configureFile);\n  const effectiveConfig = getEffectiveConfig(\n    ruleList, config, aliasToRuleNames);\n  for (const rule of ruleList) {\n    const ruleName = rule.names[0].toUpperCase();\n    allRuleNames.push(ruleName);\n    enabledRules[ruleName] = !!effectiveConfig[ruleName];\n  }\n  capturedRules = enabledRules;\n  handleInlineConfig(lines, enableDisableFile);\n  handleInlineConfig(lines, captureRestoreEnableDisable, updateLineState);\n  handleInlineConfig(lines, disableLineNextLine);\n  // Return results\n  return {\n    effectiveConfig,\n    enabledRulesPerLineNumber\n  };\n}\n\n/**\n * Lints a string containing Markdown content.\n *\n * @param {Rule[]} ruleList List of rules.\n * @param {Object.<string, string[]>} aliasToRuleNames Map of alias to rule\n * names.\n * @param {string} name Identifier for the content.\n * @param {string} content Markdown content.\n * @param {Object} md Instance of markdown-it.\n * @param {Configuration} config Configuration object.\n * @param {ConfigurationParser[] | null} configParsers Configuration parsers.\n * @param {RegExp | null} frontMatter Regular expression for front matter.\n * @param {boolean} handleRuleFailures Whether to handle exceptions in rules.\n * @param {boolean} noInlineConfig Whether to allow inline configuration.\n * @param {number} resultVersion Version of the LintResults object to return.\n * @param {LintContentCallback} callback Callback (err, result) function.\n * @returns {void}\n */\nfunction lintContent(\n  ruleList,\n  aliasToRuleNames,\n  name,\n  content,\n  md,\n  config,\n  configParsers,\n  frontMatter,\n  handleRuleFailures,\n  noInlineConfig,\n  resultVersion,\n  callback) {\n  // Remove UTF-8 byte order marker (if present)\n  content = content.replace(/^\\uFEFF/, \"\");\n  // Remove front matter\n  const removeFrontMatterResult = removeFrontMatter(content, frontMatter);\n  const { frontMatterLines } = removeFrontMatterResult;\n  content = removeFrontMatterResult.content;\n  // Get enabled rules per line (with HTML comments present)\n  const { effectiveConfig, enabledRulesPerLineNumber } =\n    getEnabledRulesPerLineNumber(\n      ruleList,\n      content.split(helpers.newLineRe),\n      frontMatterLines,\n      noInlineConfig,\n      config,\n      configParsers,\n      aliasToRuleNames\n    );\n  // Parse content into parser tokens\n  const markdownitTokens = md.parse(content, {});\n  const micromarkTokens = micromark.parse(content);\n  // Hide the content of HTML comments from rules\n  content = helpers.clearHtmlCommentText(content);\n  // Parse content into lines and update markdown-it tokens\n  const lines = content.split(helpers.newLineRe);\n  annotateAndFreezeTokens(markdownitTokens, lines);\n  // Create (frozen) parameters for rules\n  /** @type {MarkdownParsers} */\n  // @ts-ignore\n  const parsersMarkdownIt = Object.freeze({\n    \"markdownit\": Object.freeze({\n      \"tokens\": markdownitTokens\n    })\n  });\n  /** @type {MarkdownParsers} */\n  // @ts-ignore\n  const parsersMicromark = Object.freeze({\n    \"micromark\": Object.freeze({\n      \"tokens\": micromarkTokens\n    })\n  });\n  /** @type {MarkdownParsers} */\n  // @ts-ignore\n  const parsersNone = Object.freeze({});\n  const paramsBase = {\n    name,\n    \"parsers\": parsersMarkdownIt,\n    \"lines\": Object.freeze(lines),\n    \"frontMatterLines\": Object.freeze(frontMatterLines)\n  };\n  const lineMetadata =\n    helpers.getLineMetadata(paramsBase);\n  const codeBlockAndSpanRanges =\n    helpers.codeBlockAndSpanRanges(paramsBase, lineMetadata);\n  const flattenedLists =\n    helpers.flattenLists(markdownitTokens);\n  const referenceLinkImageData =\n    helpers.getReferenceLinkImageData(micromarkTokens);\n  cache.set({\n    codeBlockAndSpanRanges,\n    flattenedLists,\n    lineMetadata,\n    referenceLinkImageData\n  });\n  // Function to run for each rule\n  let results = [];\n  /**\n   * @param {Rule} rule Rule.\n   * @returns {Promise<void> | null} Promise.\n   */\n  const forRule = (rule) => {\n    // Configure rule\n    const ruleName = rule.names[0].toUpperCase();\n    const tokens = {};\n    let parsers = parsersNone;\n    if (rule.parser === undefined) {\n      tokens.tokens = markdownitTokens;\n      parsers = parsersMarkdownIt;\n    } else if (rule.parser === \"markdownit\") {\n      parsers = parsersMarkdownIt;\n    } else if (rule.parser === \"micromark\") {\n      parsers = parsersMicromark;\n    }\n    const params = {\n      ...paramsBase,\n      ...tokens,\n      parsers,\n      \"config\": effectiveConfig[ruleName]\n    };\n    // eslint-disable-next-line jsdoc/require-jsdoc\n    function throwError(property) {\n      throw new Error(\n        `Value of '${property}' passed to onError by '${ruleName}' is incorrect for '${name}'.`);\n    }\n    // eslint-disable-next-line jsdoc/require-jsdoc\n    function onError(errorInfo) {\n      if (!errorInfo ||\n        !helpers.isNumber(errorInfo.lineNumber) ||\n        (errorInfo.lineNumber < 1) ||\n        (errorInfo.lineNumber > lines.length)) {\n        throwError(\"lineNumber\");\n      }\n      const lineNumber = errorInfo.lineNumber + frontMatterLines.length;\n      if (!enabledRulesPerLineNumber[lineNumber][ruleName]) {\n        return;\n      }\n      if (errorInfo.detail &&\n        !helpers.isString(errorInfo.detail)) {\n        throwError(\"detail\");\n      }\n      if (errorInfo.context &&\n        !helpers.isString(errorInfo.context)) {\n        throwError(\"context\");\n      }\n      if (errorInfo.information &&\n        !helpers.isUrl(errorInfo.information)) {\n        throwError(\"information\");\n      }\n      if (errorInfo.range &&\n        (!Array.isArray(errorInfo.range) ||\n          (errorInfo.range.length !== 2) ||\n          !helpers.isNumber(errorInfo.range[0]) ||\n          (errorInfo.range[0] < 1) ||\n          !helpers.isNumber(errorInfo.range[1]) ||\n          (errorInfo.range[1] < 1) ||\n          ((errorInfo.range[0] + errorInfo.range[1] - 1) >\n          lines[errorInfo.lineNumber - 1].length))) {\n        throwError(\"range\");\n      }\n      const fixInfo = errorInfo.fixInfo;\n      const cleanFixInfo = {};\n      if (fixInfo) {\n        if (!helpers.isObject(fixInfo)) {\n          throwError(\"fixInfo\");\n        }\n        if (fixInfo.lineNumber !== undefined) {\n          if ((!helpers.isNumber(fixInfo.lineNumber) ||\n            (fixInfo.lineNumber < 1) ||\n            (fixInfo.lineNumber > lines.length))) {\n            throwError(\"fixInfo.lineNumber\");\n          }\n          cleanFixInfo.lineNumber =\n            fixInfo.lineNumber + frontMatterLines.length;\n        }\n        const effectiveLineNumber = fixInfo.lineNumber || errorInfo.lineNumber;\n        if (fixInfo.editColumn !== undefined) {\n          if ((!helpers.isNumber(fixInfo.editColumn) ||\n            (fixInfo.editColumn < 1) ||\n            (fixInfo.editColumn >\n              lines[effectiveLineNumber - 1].length + 1))) {\n            throwError(\"fixInfo.editColumn\");\n          }\n          cleanFixInfo.editColumn = fixInfo.editColumn;\n        }\n        if (fixInfo.deleteCount !== undefined) {\n          if ((!helpers.isNumber(fixInfo.deleteCount) ||\n            (fixInfo.deleteCount < -1) ||\n            (fixInfo.deleteCount >\n              lines[effectiveLineNumber - 1].length))) {\n            throwError(\"fixInfo.deleteCount\");\n          }\n          cleanFixInfo.deleteCount = fixInfo.deleteCount;\n        }\n        if (fixInfo.insertText !== undefined) {\n          if (!helpers.isString(fixInfo.insertText)) {\n            throwError(\"fixInfo.insertText\");\n          }\n          cleanFixInfo.insertText = fixInfo.insertText;\n        }\n      }\n      const information = errorInfo.information || rule.information;\n      results.push({\n        lineNumber,\n        \"ruleName\": rule.names[0],\n        \"ruleNames\": rule.names,\n        \"ruleDescription\": rule.description,\n        \"ruleInformation\": information ? information.href : null,\n        \"errorDetail\": errorInfo.detail || null,\n        \"errorContext\": errorInfo.context || null,\n        \"errorRange\": errorInfo.range ? [ ...errorInfo.range ] : null,\n        \"fixInfo\": fixInfo ? cleanFixInfo : null\n      });\n    }\n    // Call (possibly external) rule function to report errors\n    const catchCallsOnError = (error) => onError({\n      \"lineNumber\": 1,\n      \"detail\": `This rule threw an exception: ${error.message || error}`\n    });\n    const invokeRuleFunction = () => rule.function(params, onError);\n    if (rule.asynchronous) {\n      // Asynchronous rule, ensure it returns a Promise\n      const ruleFunctionPromise =\n        Promise.resolve().then(invokeRuleFunction);\n      return handleRuleFailures ?\n        ruleFunctionPromise.catch(catchCallsOnError) :\n        ruleFunctionPromise;\n    }\n    // Synchronous rule\n    try {\n      invokeRuleFunction();\n    } catch (error) {\n      if (handleRuleFailures) {\n        catchCallsOnError(error);\n      } else {\n        throw error;\n      }\n    }\n    return null;\n  };\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function formatResults() {\n    // Sort results by rule name by line number\n    results.sort((a, b) => (\n      a.ruleName.localeCompare(b.ruleName) ||\n      a.lineNumber - b.lineNumber\n    ));\n    if (resultVersion < 3) {\n      // Remove fixInfo and multiple errors for the same rule and line number\n      const noPrevious = {\n        \"ruleName\": null,\n        \"lineNumber\": -1\n      };\n      results = results.filter((error, index, array) => {\n        delete error.fixInfo;\n        const previous = array[index - 1] || noPrevious;\n        return (\n          (error.ruleName !== previous.ruleName) ||\n          (error.lineNumber !== previous.lineNumber)\n        );\n      });\n    }\n    if (resultVersion === 0) {\n      // Return a dictionary of rule->[line numbers]\n      const dictionary = {};\n      for (const error of results) {\n        const ruleLines = dictionary[error.ruleName] || [];\n        ruleLines.push(error.lineNumber);\n        dictionary[error.ruleName] = ruleLines;\n      }\n      // @ts-ignore\n      results = dictionary;\n    } else if (resultVersion === 1) {\n      // Use ruleAlias instead of ruleNames\n      for (const error of results) {\n        error.ruleAlias = error.ruleNames[1] || error.ruleName;\n        delete error.ruleNames;\n      }\n    } else {\n      // resultVersion 2 or 3: Remove unwanted ruleName\n      for (const error of results) {\n        delete error.ruleName;\n      }\n    }\n    return results;\n  }\n  // Run all rules\n  const ruleListAsync = ruleList.filter((rule) => rule.asynchronous);\n  const ruleListSync = ruleList.filter((rule) => !rule.asynchronous);\n  const ruleListAsyncFirst = [\n    ...ruleListAsync,\n    ...ruleListSync\n  ];\n  const callbackSuccess = () => callback(null, formatResults());\n  const callbackError =\n    (error) => callback(error instanceof Error ? error : new Error(error));\n  try {\n    const ruleResults = ruleListAsyncFirst.map(forRule);\n    if (ruleListAsync.length > 0) {\n      Promise.all(ruleResults.slice(0, ruleListAsync.length))\n        .then(callbackSuccess)\n        .catch(callbackError);\n    } else {\n      callbackSuccess();\n    }\n  } catch (error) {\n    callbackError(error);\n  } finally {\n    cache.clear();\n  }\n}\n\n/**\n * Lints a file containing Markdown content.\n *\n * @param {Rule[]} ruleList List of rules.\n * @param {Object.<string, string[]>} aliasToRuleNames Map of alias to rule\n * names.\n * @param {string} file Path of file to lint.\n * @param {Object} md Instance of markdown-it.\n * @param {Configuration} config Configuration object.\n * @param {ConfigurationParser[] | null} configParsers Configuration parsers.\n * @param {RegExp | null} frontMatter Regular expression for front matter.\n * @param {boolean} handleRuleFailures Whether to handle exceptions in rules.\n * @param {boolean} noInlineConfig Whether to allow inline configuration.\n * @param {number} resultVersion Version of the LintResults object to return.\n * @param {Object} fs File system implementation.\n * @param {boolean} synchronous Whether to execute synchronously.\n * @param {LintContentCallback} callback Callback (err, result) function.\n * @returns {void}\n */\nfunction lintFile(\n  ruleList,\n  aliasToRuleNames,\n  file,\n  md,\n  config,\n  configParsers,\n  frontMatter,\n  handleRuleFailures,\n  noInlineConfig,\n  resultVersion,\n  fs,\n  synchronous,\n  callback) {\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function lintContentWrapper(err, content) {\n    if (err) {\n      return callback(err);\n    }\n    return lintContent(\n      ruleList,\n      aliasToRuleNames,\n      file,\n      content,\n      md,\n      config,\n      configParsers,\n      frontMatter,\n      handleRuleFailures,\n      noInlineConfig,\n      resultVersion,\n      callback\n    );\n  }\n  // Make a/synchronous call to read file\n  if (synchronous) {\n    lintContentWrapper(null, fs.readFileSync(file, \"utf8\"));\n  } else {\n    fs.readFile(file, \"utf8\", lintContentWrapper);\n  }\n}\n\n/**\n * Lint files and strings specified in the Options object.\n *\n * @param {Options | null} options Options object.\n * @param {boolean} synchronous Whether to execute synchronously.\n * @param {LintCallback} callback Callback (err, result) function.\n * @returns {void}\n */\nfunction lintInput(options, synchronous, callback) {\n  // Normalize inputs\n  options = options || {};\n  callback = callback || function noop() {};\n  const customRuleList =\n    [ options.customRules || [] ]\n      .flat()\n      .map((rule) => ({\n        \"names\": helpers.cloneIfArray(rule.names),\n        \"description\": rule.description,\n        \"information\": helpers.cloneIfUrl(rule.information),\n        \"tags\": helpers.cloneIfArray(rule.tags),\n        \"parser\": rule.parser,\n        \"asynchronous\": rule.asynchronous,\n        \"function\": rule.function\n      }));\n  // eslint-disable-next-line unicorn/prefer-spread\n  const ruleList = rules.concat(customRuleList);\n  const ruleErr = validateRuleList(ruleList, synchronous);\n  if (ruleErr) {\n    callback(ruleErr);\n    return;\n  }\n  let files = [];\n  if (Array.isArray(options.files)) {\n    files = [ ...options.files ];\n  } else if (options.files) {\n    files = [ String(options.files) ];\n  }\n  const strings = options.strings || {};\n  const stringsKeys = Object.keys(strings);\n  const config = options.config || { \"default\": true };\n  const configParsers = options.configParsers || null;\n  const frontMatter = (options.frontMatter === undefined) ?\n    helpers.frontMatterRe : options.frontMatter;\n  const handleRuleFailures = !!options.handleRuleFailures;\n  const noInlineConfig = !!options.noInlineConfig;\n  const resultVersion = (options.resultVersion === undefined) ?\n    3 : options.resultVersion;\n  const md = markdownit({ \"html\": true });\n  const markdownItPlugins = options.markdownItPlugins || [];\n  for (const plugin of markdownItPlugins) {\n    // @ts-ignore\n    md.use(...plugin);\n  }\n  const fs = options.fs || require(\"node:fs\");\n  const aliasToRuleNames = mapAliasToRuleNames(ruleList);\n  const results = newResults(ruleList);\n  let done = false;\n  let concurrency = 0;\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function lintWorker() {\n    let currentItem = null;\n    // eslint-disable-next-line jsdoc/require-jsdoc\n    function lintWorkerCallback(err, result) {\n      concurrency--;\n      if (err) {\n        done = true;\n        return callback(err);\n      }\n      results[currentItem] = result;\n      if (!synchronous) {\n        lintWorker();\n      }\n      return null;\n    }\n    if (done) {\n      // Abort for error or nothing left to do\n    } else if (files.length > 0) {\n      // Lint next file\n      concurrency++;\n      currentItem = files.shift();\n      lintFile(\n        ruleList,\n        aliasToRuleNames,\n        currentItem,\n        md,\n        config,\n        configParsers,\n        frontMatter,\n        handleRuleFailures,\n        noInlineConfig,\n        resultVersion,\n        fs,\n        synchronous,\n        lintWorkerCallback\n      );\n    } else if ((currentItem = stringsKeys.shift())) {\n      // Lint next string\n      concurrency++;\n      lintContent(\n        ruleList,\n        aliasToRuleNames,\n        currentItem,\n        strings[currentItem] || \"\",\n        md,\n        config,\n        configParsers,\n        frontMatter,\n        handleRuleFailures,\n        noInlineConfig,\n        resultVersion,\n        lintWorkerCallback\n      );\n    } else if (concurrency === 0) {\n      // Finish\n      done = true;\n      return callback(null, results);\n    }\n    return null;\n  }\n  if (synchronous) {\n    while (!done) {\n      lintWorker();\n    }\n  } else {\n    // Testing on a Raspberry Pi 4 Model B with an artificial 5ms file access\n    // delay suggests that a concurrency factor of 8 can eliminate the impact\n    // of that delay (i.e., total time is the same as with no delay).\n    lintWorker();\n    lintWorker();\n    lintWorker();\n    lintWorker();\n    lintWorker();\n    lintWorker();\n    lintWorker();\n    lintWorker();\n  }\n}\n\n/**\n * Lint specified Markdown files.\n *\n * @param {Options | null} options Configuration options.\n * @param {LintCallback} callback Callback (err, result) function.\n * @returns {void}\n */\nfunction markdownlint(options, callback) {\n  return lintInput(options, false, callback);\n}\n\nconst markdownlintPromisify = promisify && promisify(markdownlint);\n\n/**\n * Lint specified Markdown files.\n *\n * @param {Options} options Configuration options.\n * @returns {Promise<LintResults>} Results object.\n */\nfunction markdownlintPromise(options) {\n  // @ts-ignore\n  return markdownlintPromisify(options);\n}\n\n/**\n * Lint specified Markdown files synchronously.\n *\n * @param {Options | null} options Configuration options.\n * @returns {LintResults} Results object.\n */\nfunction markdownlintSync(options) {\n  let results = null;\n  lintInput(options, true, function callback(error, res) {\n    if (error) {\n      throw error;\n    }\n    results = res;\n  });\n  // @ts-ignore\n  return results;\n}\n\n/**\n * Resolve referenced \"extends\" path in a configuration file\n * using path.resolve() with require.resolve() as a fallback.\n *\n * @param {string} configFile Configuration file name.\n * @param {string} referenceId Referenced identifier to resolve.\n * @param {Object} fs File system implementation.\n * @param {ResolveConfigExtendsCallback} callback Callback (err, result)\n * function.\n * @returns {void}\n */\nfunction resolveConfigExtends(configFile, referenceId, fs, callback) {\n  const configFileDirname = path.dirname(configFile);\n  const resolvedExtendsFile = path.resolve(configFileDirname, referenceId);\n  fs.access(resolvedExtendsFile, (err) => {\n    if (err) {\n      // Not a file, try require.resolve\n      try {\n        return callback(null, dynamicRequire.resolve(\n          referenceId,\n          { \"paths\": [ configFileDirname ] }\n        ));\n      } catch {\n        // Unable to resolve, use resolvedExtendsFile\n      }\n    }\n    return callback(null, resolvedExtendsFile);\n  });\n}\n\n/**\n * Resolve referenced \"extends\" path in a configuration file\n * using path.resolve() with require.resolve() as a fallback.\n *\n * @param {string} configFile Configuration file name.\n * @param {string} referenceId Referenced identifier to resolve.\n * @param {Object} fs File system implementation.\n * @returns {string} Resolved path to file.\n */\nfunction resolveConfigExtendsSync(configFile, referenceId, fs) {\n  const configFileDirname = path.dirname(configFile);\n  const resolvedExtendsFile = path.resolve(configFileDirname, referenceId);\n  try {\n    fs.accessSync(resolvedExtendsFile);\n    return resolvedExtendsFile;\n  } catch {\n    // Not a file, try require.resolve\n  }\n  try {\n    return dynamicRequire.resolve(\n      referenceId,\n      { \"paths\": [ configFileDirname ] }\n    );\n  } catch {\n    // Unable to resolve, return resolvedExtendsFile\n  }\n  return resolvedExtendsFile;\n}\n\n/**\n * Extend specified configuration object.\n *\n * @param {Configuration} config Configuration object.\n * @param {string} file Configuration file name.\n * @param {ConfigurationParser[]} parsers Parsing\n * function(s).\n * @param {Object} fs File system implementation.\n * @param {ReadConfigCallback} callback Callback (err, result) function.\n * @returns {void}\n */\nfunction extendConfig(config, file, parsers, fs, callback) {\n  const configExtends = config.extends;\n  if (configExtends) {\n    return resolveConfigExtends(\n      file,\n      helpers.expandTildePath(configExtends, require(\"node:os\")),\n      fs,\n      // eslint-disable-next-line no-use-before-define\n      (_, resolvedExtends) => readConfig(\n        // @ts-ignore\n        resolvedExtends,\n        parsers,\n        fs,\n        (err, extendsConfig) => {\n          if (err) {\n            return callback(err);\n          }\n          const result = {\n            ...extendsConfig,\n            ...config\n          };\n          delete result.extends;\n          return callback(null, result);\n        }\n      )\n    );\n  }\n  return callback(null, config);\n}\n\nconst extendConfigPromisify = promisify && promisify(extendConfig);\n\n/**\n * Extend specified configuration object.\n *\n * @param {Configuration} config Configuration object.\n * @param {string} file Configuration file name.\n * @param {ConfigurationParser[]} [parsers] Parsing function(s).\n * @param {Object} [fs] File system implementation.\n * @returns {Promise<Configuration>} Configuration object.\n */\nfunction extendConfigPromise(config, file, parsers, fs) {\n  // @ts-ignore\n  return extendConfigPromisify(config, file, parsers, fs);\n}\n\n/**\n * Read specified configuration file.\n *\n * @param {string} file Configuration file name.\n * @param {ConfigurationParser[] | ReadConfigCallback} parsers Parsing\n * function(s).\n * @param {Object} [fs] File system implementation.\n * @param {ReadConfigCallback} [callback] Callback (err, result) function.\n * @returns {void}\n */\nfunction readConfig(file, parsers, fs, callback) {\n  if (!callback) {\n    if (fs) {\n      callback = fs;\n      fs = null;\n    } else {\n      // @ts-ignore\n      callback = parsers;\n      // @ts-ignore\n      parsers = null;\n    }\n  }\n  if (!fs) {\n    fs = require(\"node:fs\");\n  }\n  // Read file\n  file = helpers.expandTildePath(file, require(\"node:os\"));\n  fs.readFile(file, \"utf8\", (err, content) => {\n    if (err) {\n      // @ts-ignore\n      return callback(err);\n    }\n    // Try to parse file\n    // @ts-ignore\n    const { config, message } = parseConfiguration(file, content, parsers);\n    if (!config) {\n      // @ts-ignore\n      return callback(new Error(message));\n    }\n    // Extend configuration\n    // @ts-ignore\n    return extendConfig(config, file, parsers, fs, callback);\n  });\n}\n\nconst readConfigPromisify = promisify && promisify(readConfig);\n\n/**\n * Read specified configuration file.\n *\n * @param {string} file Configuration file name.\n * @param {ConfigurationParser[]} [parsers] Parsing function(s).\n * @param {Object} [fs] File system implementation.\n * @returns {Promise<Configuration>} Configuration object.\n */\nfunction readConfigPromise(file, parsers, fs) {\n  // @ts-ignore\n  return readConfigPromisify(file, parsers, fs);\n}\n\n/**\n * Read specified configuration file synchronously.\n *\n * @param {string} file Configuration file name.\n * @param {ConfigurationParser[]} [parsers] Parsing function(s).\n * @param {Object} [fs] File system implementation.\n * @returns {Configuration} Configuration object.\n * @throws An Error if processing fails.\n */\nfunction readConfigSync(file, parsers, fs) {\n  if (!fs) {\n    fs = require(\"node:fs\");\n  }\n  // Read file\n  const os = require(\"node:os\");\n  file = helpers.expandTildePath(file, os);\n  const content = fs.readFileSync(file, \"utf8\");\n  // Try to parse file\n  const { config, message } = parseConfiguration(file, content, parsers);\n  if (!config) {\n    throw new Error(message);\n  }\n  // Extend configuration\n  const configExtends = config.extends;\n  if (configExtends) {\n    delete config.extends;\n    const resolvedExtends = resolveConfigExtendsSync(\n      file,\n      helpers.expandTildePath(configExtends, os),\n      fs\n    );\n    return {\n      ...readConfigSync(resolvedExtends, parsers, fs),\n      ...config\n    };\n  }\n  return config;\n}\n\n/**\n * Gets the (semantic) version of the library.\n *\n * @returns {string} SemVer string.\n */\nfunction getVersion() {\n  return require(\"./constants\").version;\n}\n\n// Export a/synchronous/Promise APIs\nmarkdownlint.sync = markdownlintSync;\nmarkdownlint.readConfig = readConfig;\nmarkdownlint.readConfigSync = readConfigSync;\nmarkdownlint.getVersion = getVersion;\nmarkdownlint.promises = {\n  \"markdownlint\": markdownlintPromise,\n  \"extendConfig\": extendConfigPromise,\n  \"readConfig\": readConfigPromise\n};\nmodule.exports = markdownlint;\n\n// Type declarations\n\n/**\n * Function to implement rule logic.\n *\n * @callback RuleFunction\n * @param {RuleParams} params Rule parameters.\n * @param {RuleOnError} onError Error-reporting callback.\n * @returns {void}\n */\n\n/* eslint-disable jsdoc/valid-types */\n\n/**\n * Rule parameters.\n *\n * @typedef {Object} RuleParams\n * @property {string} name File/string name.\n * @property {MarkdownParsers} parsers Markdown parser data.\n * @property {readonly string[]} lines File/string lines.\n * @property {readonly string[]} frontMatterLines Front matter lines.\n * @property {RuleConfiguration} config Rule configuration.\n */\n\n/* eslint-enable jsdoc/valid-types */\n\n/**\n * Markdown parser data.\n *\n * @typedef {Object} MarkdownParsers\n * @property {ParserMarkdownIt} markdownit Markdown parser data from markdown-it (only present when Rule.parser is \"markdownit\").\n * @property {ParserMicromark} micromark Markdown parser data from micromark (only present when Rule.parser is \"micromark\").\n */\n\n/**\n * Markdown parser data from markdown-it.\n *\n * @typedef {Object} ParserMarkdownIt\n * @property {MarkdownItToken[]} tokens Token objects from markdown-it.\n */\n\n/**\n * Markdown parser data from micromark.\n *\n * @typedef {Object} ParserMicromark\n * @property {MicromarkToken[]} tokens Token objects from micromark.\n */\n\n/**\n * markdown-it token.\n *\n * @typedef {Object} MarkdownItToken\n * @property {string[][]} attrs HTML attributes.\n * @property {boolean} block Block-level token.\n * @property {MarkdownItToken[]} children Child nodes.\n * @property {string} content Tag contents.\n * @property {boolean} hidden Ignore element.\n * @property {string} info Fence info.\n * @property {number} level Nesting level.\n * @property {number[]} map Beginning/ending line numbers.\n * @property {string} markup Markup text.\n * @property {Object} meta Arbitrary data.\n * @property {number} nesting Level change.\n * @property {string} tag HTML tag name.\n * @property {string} type Token type.\n * @property {number} lineNumber Line number (1-based).\n * @property {string} line Line content.\n */\n\n/** @typedef {import(\"markdownlint-micromark\").TokenType} MicromarkTokenType */\n\n/**\n * micromark token.\n *\n * @typedef {Object} MicromarkToken\n * @property {MicromarkTokenType} type Token type.\n * @property {number} startLine Start line (1-based).\n * @property {number} startColumn Start column (1-based).\n * @property {number} endLine End line (1-based).\n * @property {number} endColumn End column (1-based).\n * @property {string} text Token text.\n * @property {MicromarkToken[]} children Child tokens.\n * @property {MicromarkToken | null} parent Parent token.\n */\n\n/**\n * Error-reporting callback.\n *\n * @callback RuleOnError\n * @param {RuleOnErrorInfo} onErrorInfo Error information.\n * @returns {void}\n */\n\n/**\n * Fix information for RuleOnError callback.\n *\n * @typedef {Object} RuleOnErrorInfo\n * @property {number} lineNumber Line number (1-based).\n * @property {string} [detail] Detail about the error.\n * @property {string} [context] Context for the error.\n * @property {URL} [information] Link to more information.\n * @property {number[]} [range] Column number (1-based) and length.\n * @property {RuleOnErrorFixInfo} [fixInfo] Fix information.\n */\n\n/**\n * Fix information for RuleOnErrorInfo.\n *\n * @typedef {Object} RuleOnErrorFixInfo\n * @property {number} [lineNumber] Line number (1-based).\n * @property {number} [editColumn] Column of the fix (1-based).\n * @property {number} [deleteCount] Count of characters to delete.\n * @property {string} [insertText] Text to insert (after deleting).\n */\n\n/**\n * Rule definition.\n *\n * @typedef {Object} Rule\n * @property {string[]} names Rule name(s).\n * @property {string} description Rule description.\n * @property {URL} [information] Link to more information.\n * @property {string[]} tags Rule tag(s).\n * @property {\"markdownit\" | \"micromark\" | \"none\"} parser Parser used.\n * @property {boolean} [asynchronous] True if asynchronous.\n * @property {RuleFunction} function Rule implementation.\n */\n\n/**\n * Configuration options.\n *\n * @typedef {Object} Options\n * @property {Configuration} [config] Configuration object.\n * @property {ConfigurationParser[]} [configParsers] Configuration parsers.\n * @property {Rule[] | Rule} [customRules] Custom rules.\n * @property {string[] | string} [files] Files to lint.\n * @property {RegExp | null} [frontMatter] Front matter pattern.\n * @property {Object} [fs] File system implementation.\n * @property {boolean} [handleRuleFailures] True to catch exceptions.\n * @property {Plugin[]} [markdownItPlugins] Additional plugins.\n * @property {boolean} [noInlineConfig] True to ignore HTML directives.\n * @property {number} [resultVersion] Results object version.\n * @property {Object.<string, string>} [strings] Strings to lint.\n */\n\n/**\n * A markdown-it plugin.\n *\n * @typedef {Array} Plugin\n */\n\n/**\n * Function to pretty-print lint results.\n *\n * @callback ToStringCallback\n * @param {boolean} [ruleAliases] True to use rule aliases.\n * @returns {string}\n */\n\n/**\n * Lint results (for resultVersion 3).\n *\n * @typedef {Object.<string, LintError[]>} LintResults\n * @property {ToStringCallback} toString String representation.\n */\n\n/**\n * Lint error.\n *\n * @typedef {Object} LintError\n * @property {number} lineNumber Line number (1-based).\n * @property {string[]} ruleNames Rule name(s).\n * @property {string} ruleDescription Rule description.\n * @property {string} ruleInformation Link to more information.\n * @property {string} errorDetail Detail about the error.\n * @property {string} errorContext Context for the error.\n * @property {number[]} errorRange Column number (1-based) and length.\n * @property {FixInfo} [fixInfo] Fix information.\n */\n\n/**\n * Fix information.\n *\n * @typedef {Object} FixInfo\n * @property {number} [lineNumber] Line number (1-based).\n * @property {number} [editColumn] Column of the fix (1-based).\n * @property {number} [deleteCount] Count of characters to delete.\n * @property {string} [insertText] Text to insert (after deleting).\n */\n\n/**\n * Called with the result of linting a string or document.\n *\n * @callback LintContentCallback\n * @param {Error | null} error Error iff failed.\n * @param {LintError[]} [result] Result iff successful.\n * @returns {void}\n */\n\n/**\n * Called with the result of the lint function.\n *\n * @callback LintCallback\n * @param {Error | null} error Error object iff failed.\n * @param {LintResults} [results] Lint results iff succeeded.\n * @returns {void}\n */\n\n/**\n * Configuration object for linting rules. For the JSON schema, see\n * {@link ../schema/markdownlint-config-schema.json}.\n *\n * @typedef {import(\"./configuration\").Configuration} Configuration\n */\n\n/**\n * Rule configuration object.\n *\n * @typedef {boolean | Object} RuleConfiguration Rule configuration.\n */\n\n/**\n * Parses a configuration string and returns a configuration object.\n *\n * @callback ConfigurationParser\n * @param {string} text Configuration string.\n * @returns {Configuration}\n */\n\n/**\n * Called with the result of the readConfig function.\n *\n * @callback ReadConfigCallback\n * @param {Error | null} err Error object or null.\n * @param {Configuration} [config] Configuration object.\n * @returns {void}\n */\n\n/**\n * Called with the result of the resolveConfigExtends function.\n *\n * @callback ResolveConfigExtendsCallback\n * @param {Error | null} err Error object or null.\n * @param {string} [path] Resolved path to file.\n * @returns {void}\n */\n", "export default class Diagnostic {\n  constructor(result) {\n    this.range = {\n      start: {\n        line: result.lineNumber - 1,\n        character: 0,\n      },\n      end: {\n        character: 999,\n        line: result.lineNumber - 1,\n      },\n    };\n\n    this.sevirity = 3;\n    this.codeDescription = { href: result.ruleInformation };\n    this.source = \"toplsp\";\n    this.message = result.errorDetail;\n    this.code = result.ruleNames[0];\n    return this;\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia = false) {\n    const len = text.length;\n    let pos = 0, value = '', tokenOffset = 0, token = 16 /* SyntaxKind.Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* ScanError.None */;\n    function scanHexDigits(count, exact) {\n        let digits = 0;\n        let value = 0;\n        while (digits < count || !exact) {\n            let ch = text.charCodeAt(pos);\n            if (ch >= 48 /* CharacterCodes._0 */ && ch <= 57 /* CharacterCodes._9 */) {\n                value = value * 16 + ch - 48 /* CharacterCodes._0 */;\n            }\n            else if (ch >= 65 /* CharacterCodes.A */ && ch <= 70 /* CharacterCodes.F */) {\n                value = value * 16 + ch - 65 /* CharacterCodes.A */ + 10;\n            }\n            else if (ch >= 97 /* CharacterCodes.a */ && ch <= 102 /* CharacterCodes.f */) {\n                value = value * 16 + ch - 97 /* CharacterCodes.a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* SyntaxKind.Unknown */;\n        scanError = 0 /* ScanError.None */;\n    }\n    function scanNumber() {\n        let start = pos;\n        if (text.charCodeAt(pos) === 48 /* CharacterCodes._0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* CharacterCodes.dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* ScanError.UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        let end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* CharacterCodes.E */ || text.charCodeAt(pos) === 101 /* CharacterCodes.e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* CharacterCodes.plus */ || text.charCodeAt(pos) === 45 /* CharacterCodes.minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* ScanError.UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        let result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                break;\n            }\n            const ch = text.charCodeAt(pos);\n            if (ch === 34 /* CharacterCodes.doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* CharacterCodes.backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                    break;\n                }\n                const ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* CharacterCodes.doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* CharacterCodes.backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* CharacterCodes.slash */:\n                        result += '/';\n                        break;\n                    case 98 /* CharacterCodes.b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* CharacterCodes.f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* CharacterCodes.n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* CharacterCodes.r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* CharacterCodes.t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* CharacterCodes.u */:\n                        const ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* ScanError.InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* ScanError.InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* ScanError.InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* ScanError.None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* SyntaxKind.EOF */;\n        }\n        let code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* SyntaxKind.Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* CharacterCodes.carriageReturn */ && text.charCodeAt(pos) === 10 /* CharacterCodes.lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* SyntaxKind.LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* CharacterCodes.openBrace */:\n                pos++;\n                return token = 1 /* SyntaxKind.OpenBraceToken */;\n            case 125 /* CharacterCodes.closeBrace */:\n                pos++;\n                return token = 2 /* SyntaxKind.CloseBraceToken */;\n            case 91 /* CharacterCodes.openBracket */:\n                pos++;\n                return token = 3 /* SyntaxKind.OpenBracketToken */;\n            case 93 /* CharacterCodes.closeBracket */:\n                pos++;\n                return token = 4 /* SyntaxKind.CloseBracketToken */;\n            case 58 /* CharacterCodes.colon */:\n                pos++;\n                return token = 6 /* SyntaxKind.ColonToken */;\n            case 44 /* CharacterCodes.comma */:\n                pos++;\n                return token = 5 /* SyntaxKind.CommaToken */;\n            // strings\n            case 34 /* CharacterCodes.doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* SyntaxKind.StringLiteral */;\n            // comments\n            case 47 /* CharacterCodes.slash */:\n                const start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* CharacterCodes.slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* SyntaxKind.LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* CharacterCodes.asterisk */) {\n                    pos += 2;\n                    const safeLength = len - 1; // For lookahead.\n                    let commentClosed = false;\n                    while (pos < safeLength) {\n                        const ch = text.charCodeAt(pos);\n                        if (ch === 42 /* CharacterCodes.asterisk */ && text.charCodeAt(pos + 1) === 47 /* CharacterCodes.slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* CharacterCodes.carriageReturn */ && text.charCodeAt(pos) === 10 /* CharacterCodes.lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* ScanError.UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* SyntaxKind.BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* SyntaxKind.Unknown */;\n            // numbers\n            case 45 /* CharacterCodes.minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* SyntaxKind.Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* CharacterCodes._0 */:\n            case 49 /* CharacterCodes._1 */:\n            case 50 /* CharacterCodes._2 */:\n            case 51 /* CharacterCodes._3 */:\n            case 52 /* CharacterCodes._4 */:\n            case 53 /* CharacterCodes._5 */:\n            case 54 /* CharacterCodes._6 */:\n            case 55 /* CharacterCodes._7 */:\n            case 56 /* CharacterCodes._8 */:\n            case 57 /* CharacterCodes._9 */:\n                value += scanNumber();\n                return token = 11 /* SyntaxKind.NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* SyntaxKind.TrueKeyword */;\n                        case 'false': return token = 9 /* SyntaxKind.FalseKeyword */;\n                        case 'null': return token = 7 /* SyntaxKind.NullKeyword */;\n                    }\n                    return token = 16 /* SyntaxKind.Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* SyntaxKind.Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* CharacterCodes.closeBrace */:\n            case 93 /* CharacterCodes.closeBracket */:\n            case 123 /* CharacterCodes.openBrace */:\n            case 91 /* CharacterCodes.openBracket */:\n            case 34 /* CharacterCodes.doubleQuote */:\n            case 58 /* CharacterCodes.colon */:\n            case 44 /* CharacterCodes.comma */:\n            case 47 /* CharacterCodes.slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        let result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* SyntaxKind.LineCommentTrivia */ && result <= 15 /* SyntaxKind.Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: () => pos,\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: () => token,\n        getTokenValue: () => value,\n        getTokenOffset: () => tokenOffset,\n        getTokenLength: () => pos - tokenOffset,\n        getTokenStartLine: () => lineStartOffset,\n        getTokenStartCharacter: () => tokenOffset - prevTokenLineStartOffset,\n        getTokenError: () => scanError,\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* CharacterCodes.space */ || ch === 9 /* CharacterCodes.tab */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* CharacterCodes.lineFeed */ || ch === 13 /* CharacterCodes.carriageReturn */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* CharacterCodes._0 */ && ch <= 57 /* CharacterCodes._9 */;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"lineFeed\"] = 10] = \"lineFeed\";\n    CharacterCodes[CharacterCodes[\"carriageReturn\"] = 13] = \"carriageReturn\";\n    CharacterCodes[CharacterCodes[\"space\"] = 32] = \"space\";\n    CharacterCodes[CharacterCodes[\"_0\"] = 48] = \"_0\";\n    CharacterCodes[CharacterCodes[\"_1\"] = 49] = \"_1\";\n    CharacterCodes[CharacterCodes[\"_2\"] = 50] = \"_2\";\n    CharacterCodes[CharacterCodes[\"_3\"] = 51] = \"_3\";\n    CharacterCodes[CharacterCodes[\"_4\"] = 52] = \"_4\";\n    CharacterCodes[CharacterCodes[\"_5\"] = 53] = \"_5\";\n    CharacterCodes[CharacterCodes[\"_6\"] = 54] = \"_6\";\n    CharacterCodes[CharacterCodes[\"_7\"] = 55] = \"_7\";\n    CharacterCodes[CharacterCodes[\"_8\"] = 56] = \"_8\";\n    CharacterCodes[CharacterCodes[\"_9\"] = 57] = \"_9\";\n    CharacterCodes[CharacterCodes[\"a\"] = 97] = \"a\";\n    CharacterCodes[CharacterCodes[\"b\"] = 98] = \"b\";\n    CharacterCodes[CharacterCodes[\"c\"] = 99] = \"c\";\n    CharacterCodes[CharacterCodes[\"d\"] = 100] = \"d\";\n    CharacterCodes[CharacterCodes[\"e\"] = 101] = \"e\";\n    CharacterCodes[CharacterCodes[\"f\"] = 102] = \"f\";\n    CharacterCodes[CharacterCodes[\"g\"] = 103] = \"g\";\n    CharacterCodes[CharacterCodes[\"h\"] = 104] = \"h\";\n    CharacterCodes[CharacterCodes[\"i\"] = 105] = \"i\";\n    CharacterCodes[CharacterCodes[\"j\"] = 106] = \"j\";\n    CharacterCodes[CharacterCodes[\"k\"] = 107] = \"k\";\n    CharacterCodes[CharacterCodes[\"l\"] = 108] = \"l\";\n    CharacterCodes[CharacterCodes[\"m\"] = 109] = \"m\";\n    CharacterCodes[CharacterCodes[\"n\"] = 110] = \"n\";\n    CharacterCodes[CharacterCodes[\"o\"] = 111] = \"o\";\n    CharacterCodes[CharacterCodes[\"p\"] = 112] = \"p\";\n    CharacterCodes[CharacterCodes[\"q\"] = 113] = \"q\";\n    CharacterCodes[CharacterCodes[\"r\"] = 114] = \"r\";\n    CharacterCodes[CharacterCodes[\"s\"] = 115] = \"s\";\n    CharacterCodes[CharacterCodes[\"t\"] = 116] = \"t\";\n    CharacterCodes[CharacterCodes[\"u\"] = 117] = \"u\";\n    CharacterCodes[CharacterCodes[\"v\"] = 118] = \"v\";\n    CharacterCodes[CharacterCodes[\"w\"] = 119] = \"w\";\n    CharacterCodes[CharacterCodes[\"x\"] = 120] = \"x\";\n    CharacterCodes[CharacterCodes[\"y\"] = 121] = \"y\";\n    CharacterCodes[CharacterCodes[\"z\"] = 122] = \"z\";\n    CharacterCodes[CharacterCodes[\"A\"] = 65] = \"A\";\n    CharacterCodes[CharacterCodes[\"B\"] = 66] = \"B\";\n    CharacterCodes[CharacterCodes[\"C\"] = 67] = \"C\";\n    CharacterCodes[CharacterCodes[\"D\"] = 68] = \"D\";\n    CharacterCodes[CharacterCodes[\"E\"] = 69] = \"E\";\n    CharacterCodes[CharacterCodes[\"F\"] = 70] = \"F\";\n    CharacterCodes[CharacterCodes[\"G\"] = 71] = \"G\";\n    CharacterCodes[CharacterCodes[\"H\"] = 72] = \"H\";\n    CharacterCodes[CharacterCodes[\"I\"] = 73] = \"I\";\n    CharacterCodes[CharacterCodes[\"J\"] = 74] = \"J\";\n    CharacterCodes[CharacterCodes[\"K\"] = 75] = \"K\";\n    CharacterCodes[CharacterCodes[\"L\"] = 76] = \"L\";\n    CharacterCodes[CharacterCodes[\"M\"] = 77] = \"M\";\n    CharacterCodes[CharacterCodes[\"N\"] = 78] = \"N\";\n    CharacterCodes[CharacterCodes[\"O\"] = 79] = \"O\";\n    CharacterCodes[CharacterCodes[\"P\"] = 80] = \"P\";\n    CharacterCodes[CharacterCodes[\"Q\"] = 81] = \"Q\";\n    CharacterCodes[CharacterCodes[\"R\"] = 82] = \"R\";\n    CharacterCodes[CharacterCodes[\"S\"] = 83] = \"S\";\n    CharacterCodes[CharacterCodes[\"T\"] = 84] = \"T\";\n    CharacterCodes[CharacterCodes[\"U\"] = 85] = \"U\";\n    CharacterCodes[CharacterCodes[\"V\"] = 86] = \"V\";\n    CharacterCodes[CharacterCodes[\"W\"] = 87] = \"W\";\n    CharacterCodes[CharacterCodes[\"X\"] = 88] = \"X\";\n    CharacterCodes[CharacterCodes[\"Y\"] = 89] = \"Y\";\n    CharacterCodes[CharacterCodes[\"Z\"] = 90] = \"Z\";\n    CharacterCodes[CharacterCodes[\"asterisk\"] = 42] = \"asterisk\";\n    CharacterCodes[CharacterCodes[\"backslash\"] = 92] = \"backslash\";\n    CharacterCodes[CharacterCodes[\"closeBrace\"] = 125] = \"closeBrace\";\n    CharacterCodes[CharacterCodes[\"closeBracket\"] = 93] = \"closeBracket\";\n    CharacterCodes[CharacterCodes[\"colon\"] = 58] = \"colon\";\n    CharacterCodes[CharacterCodes[\"comma\"] = 44] = \"comma\";\n    CharacterCodes[CharacterCodes[\"dot\"] = 46] = \"dot\";\n    CharacterCodes[CharacterCodes[\"doubleQuote\"] = 34] = \"doubleQuote\";\n    CharacterCodes[CharacterCodes[\"minus\"] = 45] = \"minus\";\n    CharacterCodes[CharacterCodes[\"openBrace\"] = 123] = \"openBrace\";\n    CharacterCodes[CharacterCodes[\"openBracket\"] = 91] = \"openBracket\";\n    CharacterCodes[CharacterCodes[\"plus\"] = 43] = \"plus\";\n    CharacterCodes[CharacterCodes[\"slash\"] = 47] = \"slash\";\n    CharacterCodes[CharacterCodes[\"formFeed\"] = 12] = \"formFeed\";\n    CharacterCodes[CharacterCodes[\"tab\"] = 9] = \"tab\";\n})(CharacterCodes || (CharacterCodes = {}));\n", "export const cachedSpaces = new Array(20).fill(0).map((_, index) => {\n    return ' '.repeat(index);\n});\nconst maxCachedValues = 200;\nexport const cachedBreakLinesWithSpaces = {\n    ' ': {\n        '\\n': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\n' + ' '.repeat(index);\n        }),\n        '\\r': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\r' + ' '.repeat(index);\n        }),\n        '\\r\\n': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\r\\n' + ' '.repeat(index);\n        }),\n    },\n    '\\t': {\n        '\\n': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\n' + '\\t'.repeat(index);\n        }),\n        '\\r': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\r' + '\\t'.repeat(index);\n        }),\n        '\\r\\n': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\r\\n' + '\\t'.repeat(index);\n        }),\n    }\n};\nexport const supportedEols = ['\\n', '\\r', '\\r\\n'];\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    const segments = []; // strings or numbers\n    const earlyReturnException = new Object();\n    let previousNode = undefined;\n    const previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    let isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: (name, offset, length) => {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: (value, offset, length) => {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: (sep, offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    const last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode,\n        isAtPropertyKey,\n        matches: (pattern) => {\n            let k = 0;\n            for (let i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors = [], options = ParseOptions.DEFAULT) {\n    let currentProperty = null;\n    let currentParent = [];\n    const previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    const visitor = {\n        onObjectBegin: () => {\n            const object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: (name) => {\n            currentProperty = name;\n        },\n        onObjectEnd: () => {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: () => {\n            const array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: () => {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: (error, offset, length) => {\n            errors.push({ error, offset, length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors = [], options = ParseOptions.DEFAULT) {\n    let currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    const visitor = {\n        onObjectBegin: (offset) => {\n            currentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: (name, offset, length) => {\n            currentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset, length, parent: currentParent });\n        },\n        onObjectEnd: (offset, length) => {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: (offset, length) => {\n            currentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: (offset, length) => {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: (value, offset, length) => {\n            onValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: (sep, offset, length) => {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: (error, offset, length) => {\n            errors.push({ error, offset, length });\n        }\n    };\n    visit(text, visitor, options);\n    const result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    let node = root;\n    for (let segment of path) {\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            let found = false;\n            for (const propertyNode of node.children) {\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment && propertyNode.children.length === 2) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            const index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    const path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        const key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        const index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            const obj = Object.create(null);\n            for (let prop of node.children) {\n                const valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound = false) {\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound = false) {\n    if (contains(node, offset, includeRightBound)) {\n        const children = node.children;\n        if (Array.isArray(children)) {\n            for (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n                const item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options = ParseOptions.DEFAULT) {\n    const _scanner = createScanner(text, false);\n    // Important: Only pass copies of this to visitor functions to prevent accidental modification, and\n    // to not affect visitor functions which stored a reference to a previous JSONPath\n    const _jsonPath = [];\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n    }\n    function toNoArgVisitWithPath(visitFunction) {\n        return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n    }\n    function toOneArgVisitWithPath(visitFunction) {\n        return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n    }\n    const onObjectBegin = toNoArgVisitWithPath(visitor.onObjectBegin), onObjectProperty = toOneArgVisitWithPath(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisitWithPath(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisitWithPath(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    const disallowComments = options && options.disallowComments;\n    const allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            const token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* ScanError.InvalidUnicode */:\n                    handleError(14 /* ParseErrorCode.InvalidUnicode */);\n                    break;\n                case 5 /* ScanError.InvalidEscapeCharacter */:\n                    handleError(15 /* ParseErrorCode.InvalidEscapeCharacter */);\n                    break;\n                case 3 /* ScanError.UnexpectedEndOfNumber */:\n                    handleError(13 /* ParseErrorCode.UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* ScanError.UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* ParseErrorCode.UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* ScanError.UnexpectedEndOfString */:\n                    handleError(12 /* ParseErrorCode.UnexpectedEndOfString */);\n                    break;\n                case 6 /* ScanError.InvalidCharacter */:\n                    handleError(16 /* ParseErrorCode.InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* SyntaxKind.LineCommentTrivia */:\n                case 13 /* SyntaxKind.BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* ParseErrorCode.InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* SyntaxKind.Unknown */:\n                    handleError(1 /* ParseErrorCode.InvalidSymbol */);\n                    break;\n                case 15 /* SyntaxKind.Trivia */:\n                case 14 /* SyntaxKind.LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter = [], skipUntil = []) {\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            let token = _scanner.getToken();\n            while (token !== 17 /* SyntaxKind.EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        const value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n            // add property name afterwards\n            _jsonPath.push(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* SyntaxKind.NumericLiteral */:\n                const tokenValue = _scanner.getTokenValue();\n                let value = Number(tokenValue);\n                if (isNaN(value)) {\n                    handleError(2 /* ParseErrorCode.InvalidNumberFormat */);\n                    value = 0;\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* SyntaxKind.NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* SyntaxKind.TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* SyntaxKind.FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* SyntaxKind.StringLiteral */) {\n            handleError(3 /* ParseErrorCode.PropertyNameExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* SyntaxKind.ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ParseErrorCode.ColonExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n        }\n        _jsonPath.pop(); // remove processed property name\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        let needsComma = false;\n        while (_scanner.getToken() !== 2 /* SyntaxKind.CloseBraceToken */ && _scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n            if (_scanner.getToken() === 5 /* SyntaxKind.CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* SyntaxKind.CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* ParseErrorCode.CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* SyntaxKind.CloseBraceToken */) {\n            handleError(7 /* ParseErrorCode.CloseBraceExpected */, [2 /* SyntaxKind.CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        let isFirstElement = true;\n        let needsComma = false;\n        while (_scanner.getToken() !== 4 /* SyntaxKind.CloseBracketToken */ && _scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n            if (_scanner.getToken() === 5 /* SyntaxKind.CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* SyntaxKind.CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* ParseErrorCode.CommaExpected */, [], []);\n            }\n            if (isFirstElement) {\n                _jsonPath.push(0);\n                isFirstElement = false;\n            }\n            else {\n                _jsonPath[_jsonPath.length - 1]++;\n            }\n            if (!parseValue()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [4 /* SyntaxKind.CloseBracketToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (!isFirstElement) {\n            _jsonPath.pop(); // remove array index\n        }\n        if (_scanner.getToken() !== 4 /* SyntaxKind.CloseBracketToken */) {\n            handleError(8 /* ParseErrorCode.CloseBracketExpected */, [4 /* SyntaxKind.CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* SyntaxKind.OpenBracketToken */:\n                return parseArray();\n            case 1 /* SyntaxKind.OpenBraceToken */:\n                return parseObject();\n            case 10 /* SyntaxKind.StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* SyntaxKind.EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n        handleError(9 /* ParseErrorCode.EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    let _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* SyntaxKind.LineCommentTrivia */:\n            case 13 /* SyntaxKind.BlockCommentTrivia */:\n            case 17 /* SyntaxKind.EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* SyntaxKind.EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format';\nimport * as edit from './impl/edit';\nimport * as scanner from './impl/scanner';\nimport * as parser from './impl/parser';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport const createScanner = scanner.createScanner;\nexport var ScanError;\n(function (ScanError) {\n    ScanError[ScanError[\"None\"] = 0] = \"None\";\n    ScanError[ScanError[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\n    ScanError[ScanError[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\n    ScanError[ScanError[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\n    ScanError[ScanError[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\n    ScanError[ScanError[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\n    ScanError[ScanError[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\n})(ScanError || (ScanError = {}));\nexport var SyntaxKind;\n(function (SyntaxKind) {\n    SyntaxKind[SyntaxKind[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\n    SyntaxKind[SyntaxKind[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\n    SyntaxKind[SyntaxKind[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\n    SyntaxKind[SyntaxKind[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\n    SyntaxKind[SyntaxKind[\"CommaToken\"] = 5] = \"CommaToken\";\n    SyntaxKind[SyntaxKind[\"ColonToken\"] = 6] = \"ColonToken\";\n    SyntaxKind[SyntaxKind[\"NullKeyword\"] = 7] = \"NullKeyword\";\n    SyntaxKind[SyntaxKind[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\n    SyntaxKind[SyntaxKind[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\n    SyntaxKind[SyntaxKind[\"StringLiteral\"] = 10] = \"StringLiteral\";\n    SyntaxKind[SyntaxKind[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\n    SyntaxKind[SyntaxKind[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\n    SyntaxKind[SyntaxKind[\"Trivia\"] = 15] = \"Trivia\";\n    SyntaxKind[SyntaxKind[\"Unknown\"] = 16] = \"Unknown\";\n    SyntaxKind[SyntaxKind[\"EOF\"] = 17] = \"EOF\";\n})(SyntaxKind || (SyntaxKind = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport const getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport const parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport const parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport const findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport const findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport const getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport const getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport const visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport const stripComments = parser.stripComments;\nexport var ParseErrorCode;\n(function (ParseErrorCode) {\n    ParseErrorCode[ParseErrorCode[\"InvalidSymbol\"] = 1] = \"InvalidSymbol\";\n    ParseErrorCode[ParseErrorCode[\"InvalidNumberFormat\"] = 2] = \"InvalidNumberFormat\";\n    ParseErrorCode[ParseErrorCode[\"PropertyNameExpected\"] = 3] = \"PropertyNameExpected\";\n    ParseErrorCode[ParseErrorCode[\"ValueExpected\"] = 4] = \"ValueExpected\";\n    ParseErrorCode[ParseErrorCode[\"ColonExpected\"] = 5] = \"ColonExpected\";\n    ParseErrorCode[ParseErrorCode[\"CommaExpected\"] = 6] = \"CommaExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBraceExpected\"] = 7] = \"CloseBraceExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBracketExpected\"] = 8] = \"CloseBracketExpected\";\n    ParseErrorCode[ParseErrorCode[\"EndOfFileExpected\"] = 9] = \"EndOfFileExpected\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCommentToken\"] = 10] = \"InvalidCommentToken\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfComment\"] = 11] = \"UnexpectedEndOfComment\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfString\"] = 12] = \"UnexpectedEndOfString\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfNumber\"] = 13] = \"UnexpectedEndOfNumber\";\n    ParseErrorCode[ParseErrorCode[\"InvalidUnicode\"] = 14] = \"InvalidUnicode\";\n    ParseErrorCode[ParseErrorCode[\"InvalidEscapeCharacter\"] = 15] = \"InvalidEscapeCharacter\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCharacter\"] = 16] = \"InvalidCharacter\";\n})(ParseErrorCode || (ParseErrorCode = {}));\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* ParseErrorCode.InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* ParseErrorCode.InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* ParseErrorCode.PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ParseErrorCode.ValueExpected */: return 'ValueExpected';\n        case 5 /* ParseErrorCode.ColonExpected */: return 'ColonExpected';\n        case 6 /* ParseErrorCode.CommaExpected */: return 'CommaExpected';\n        case 7 /* ParseErrorCode.CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* ParseErrorCode.CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* ParseErrorCode.EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* ParseErrorCode.InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* ParseErrorCode.UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* ParseErrorCode.UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* ParseErrorCode.UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* ParseErrorCode.InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* ParseErrorCode.InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* ParseErrorCode.InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edit operations needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns The edit operations describing the formatting changes to the original document following the format described in {@linkcode EditResult}.\n * To apply the edit operations to the input, use {@linkcode applyEdits}.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edit operations needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns The edit operations describing the changes to the original document, following the format described in {@linkcode EditResult}.\n * To apply the edit operations to the input, use {@linkcode applyEdits}.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options);\n}\n/**\n * Applies edits to an input string.\n * @param text The input text\n * @param edits Edit operations following the format described in {@linkcode EditResult}.\n * @returns The text with the applied edits.\n * @throws An error if the edit operations are not well-formed as described in {@linkcode EditResult}.\n */\nexport function applyEdits(text, edits) {\n    let sortedEdits = edits.slice(0).sort((a, b) => {\n        const diff = a.offset - b.offset;\n        if (diff === 0) {\n            return a.length - b.length;\n        }\n        return diff;\n    });\n    let lastModifiedOffset = text.length;\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\n        let e = sortedEdits[i];\n        if (e.offset + e.length <= lastModifiedOffset) {\n            text = edit.applyEdit(text, e);\n        }\n        else {\n            throw new Error('Overlapping edit');\n        }\n        lastModifiedOffset = e.offset;\n    }\n    return text;\n}\n", "import Diagnostic from \"./Diagnostic.js\";\nimport { parse } from \"jsonc-parser\";\nimport markdownlint from \"markdownlint\";\nimport fs from \"fs\";\nimport CodeAction from \"./CodeAction.js\";\n\nexport default class Analyzer {\n  #contents = new Map();\n  #options = undefined;\n\n  updateContent(uri, text) {\n    this.#contents.set(uri, text);\n  }\n\n  async #initOptions(uri) {\n    const index = uri.indexOf(\"curriculum/\");\n    if (index === -1) {\n      return;\n    }\n\n    const path = uri.slice(0, index + \"curriculum/\".length);\n\n    // Don't throw error, if file is not found then we are not in TOP repo. exit gracefully\n    let config;\n    try {\n      config = new String(fs.readFileSync(path + \".markdownlint-cli2.jsonc\"));\n    } catch (_) {\n      return;\n    }\n\n    const options = parse(config);\n    const rulePromises = options.customRules.map(\n      (rule) => import(path + rule.slice(2)),\n    );\n\n    options.customRules = await Promise.all(rulePromises);\n    options.customRules = options.customRules.map((rule) => rule.default);\n    this.#options = options;\n  }\n\n  #generateResults(uri) {\n    const rootURI = this.#getRootURI(uri);\n    const content = this.#contents.get(uri);\n    if (!this.#options) {\n      this.#initOptions(rootURI);\n    }\n\n    let results = [];\n    if (this.#options && content) {\n      this.#options.strings = { content };\n      results = markdownlint.sync(this.#options).content;\n    }\n\n    return results;\n  }\n\n  generateDiagnostics(uri) {\n    return this.#generateResults(uri).map((r) => new Diagnostic(r));\n  }\n\n  generateCodeActions(uri, range, diagnostics) {\n    return this.#generateResults(uri)\n      .filter((r) => this.#validActionResult(r, range))\n      .map((r) => new CodeAction(r, uri, diagnostics));\n  }\n\n  #validActionResult(result, range) {\n    const { start, end } = range;\n    const line = result.lineNumber - 1;\n    return line >= start.line && line <= end.line && result.fixInfo;\n  }\n\n  #getRootURI(uri) {\n    if (uri && uri.startsWith(\"file://\")) {\n      return uri.slice(\"file://\".length);\n    } else {\n      return uri;\n    }\n  }\n}\n", "export default class CodeAction {\n  constructor(result, uri, diagnostics) {\n    this.title = \"Top fixer\";\n    this.kind = \"quickfix\";\n    this.isPreferred = true;\n    this.diagnostics = diagnostics;\n\n    const lineNumber = result.lineNumber - 1;\n    const characterStart = result.fixInfo.editColumn - 1;\n    const characterEnd = result.fixInfo.deleteCount + characterStart;\n    const { insertText } = result.fixInfo;\n\n    this.edit = {\n      changes: {\n        [uri]: [\n          {\n            range: {\n              start: {\n                line: lineNumber,\n                character: characterStart,\n              },\n              end: {\n                line: lineNumber,\n                character: characterEnd,\n              },\n            },\n            newText: insertText,\n          },\n        ],\n      },\n    };\n  }\n}\n", "export default class Encoder {\n  encode(msg) {\n    if (msg == undefined || msg.length === 0) {\n      return `Content-Length 0`;\n    }\n    const json = JSON.stringify(msg);\n\n    return `Content-Length: ${json.length}\\r\\n\\r\\n${json}`;\n  }\n\n  decode(msg) {\n    const startIndex = \"Content-Length \".length;\n\n    const lastIndex = msg.indexOf(\"\\r\\n\\r\\n\");\n    const length = Number(msg.substring(startIndex, lastIndex));\n\n    const obStart = lastIndex + \"\\r\\n\\r\\n\".length;\n    const obj = msg.substring(obStart, obStart + length);\n    return JSON.parse(obj);\n  }\n}\n", "const kind = 15; // Kind Snippet\nconst insertTextFormat = 2; // Format Snippet\n\nexport default [\n  {\n    kind,\n    label: \"Assignment section\",\n    detail: \"Insert assignment section\",\n    sortText: \"Assignment\",\n    filterText: \"### Assignment\",\n    insertTextFormat,\n    insertText:\n      '### Assignment\\n\\n<div class=\"lesson-content__panel\" markdown=\"1\">\\n\\n#### ${1:Optional heading}\\n\\n1. ${2:List item}\\n\\t- ${3:Instruction}\\n\\n#### ${4:Extra credit}\\n\\n- ${5:An optional add-on}\\n\\n</div>\\n\\n$0',\n  },\n  {\n    kind,\n    label: \"Introduction section\",\n    detail: \"Insert introduction section\",\n    sortText: \"Introduction\",\n    filterText: \"### Introduction\",\n    insertTextFormat,\n    insertText: \"### Introduction\\n\\n${1:A Brief Introduction.}\\n\\n$0\",\n  },\n  {\n    kind,\n    label: \"Lesson overview section\",\n    detail: \"Insert lesson overview section\",\n    sortText: \"Lesson Overview\",\n    filterText: \"### Lesson Overview\",\n    insertTextFormat,\n    insertText:\n      \"### Lesson Overview\\n\\nThis section contains a general overview of topics that you will learn in this lesson.\\n\\n- ${1:Lesson overview item}\\n\\n$0\",\n  },\n  {\n    kind,\n    label: \"Knowledge check section\",\n    detail: \"Insert lesson overview section\",\n    sortText: \"Knowledge Check\",\n    filterText: \"### Knowledge check\",\n    insertTextFormat,\n    insertText:\n      \"### Knowledge check\\n\\nThe following questions are an opportunity to reflect on key topics in this lesson. If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge.\\n\\n- [${1:A knowledge check question}](${2:a-knowledge-check-url})\\n\\n$0\",\n  },\n  {\n    kind,\n    label: \"Additional resources section\",\n    detail: \"Insert additional resources section\",\n    sortText: \"Additional resources\",\n    filterText: \"### Additional resources\",\n    insertTextFormat,\n    insertText:\n      \"### Additional resources\\n\\nThis section contains helpful links to related content. It isn't required, so consider it supplemental.\\n\\n- ${1:It looks like this lesson doesn't have any additional resources yet. Help us expand this section by contributing to our curriculum.}\\n\",\n  },\n];\n", "const kind = 15; // Kind Snippet\nconst insertTextFormat = 2; // Format Snippet\n\nexport default [\n  {\n    kind,\n    label: \"Note\",\n    detail: \"Insert a Note\",\n    sortText: \"note\",\n    filterText: '<div class=\"lesson-note\" markdown=\"1\">',\n    insertTextFormat,\n    insertText:\n      '<div class=\"lesson-note\" markdown=\"1\">\\n\\n#### ${1:Optional title}\\n\\n${2:Details goes here}\\n\\n</div>\\n\\n$0',\n  },\n  {\n    kind,\n    label: \"Warning\",\n    detail: \"Insert a warning\",\n    sortText: \"warning\",\n    filterText: '<div class=\"lesson-note lesson-note--warning\" markdown=\"1\">',\n    insertTextFormat,\n    insertText:\n      '<div class=\"lesson-note lesson-note--warning\" markdown=\"1\">\\n\\n#### ${1:Optional title}\\n\\n${2:Details goes here}\\n\\n</div>\\n\\n$0',\n  },\n  {\n    kind,\n    label: \"Tip\",\n    detail: \"Insert a tip\",\n    sortText: \"tip\",\n    filterText: '<div class=\"lesson-note lesson-note--tip\" markdown=\"1\">',\n    insertTextFormat,\n    insertText:\n      '<div class=\"lesson-note lesson-note--tip\" markdown=\"1\">\\n\\n#### ${1:Optional title}\\n\\n${2:Details goes here}\\n\\n</div>\\n\\n$0',\n  },\n];\n", "const kind = 15; // Kind Snippet\nconst insertTextFormat = 2; // Format Snippet\n\nexport default [\n  {\n    kind,\n    label: \"Javascript\",\n    detail: \"Javascript snippet\",\n    sortText: \"```javascript\",\n    filterText: \"```javascript\",\n    insertTextFormat,\n    insertText:\n      '```javascript\\n\\t${1:const obj = {\\n\\t\\tname: \"object\"\\n\\t\\tmarker: \"X\"\\n\\t}}\\n```\\n$0',\n  },\n  {\n    kind,\n    label: \"Bash\",\n    detail: \"Bash snippet\",\n    sortText: \"```bash\",\n    filterText: \"```bash\",\n    insertTextFormat,\n    insertText: \"```bash\\n${1:cat file.txt}\\n```\\n$0\",\n  },\n];\n", "import sections from \"./sections.js\";\nimport lessonNotes from \"./lessonNotes.js\";\nimport snippets from \"./snippets.js\";\nexport default [...lessonNotes, ...sections, ...snippets];\n", "import completions from \"./completions/index.js\";\n\nexport default class Protocol {\n  #analyzer;\n\n  constructor(analyzer) {\n    this.#analyzer = analyzer;\n  }\n\n  openResponse(msg) {\n    const text = msg.params.textDocument.text;\n    const uri = msg.params.textDocument.uri;\n    this.#analyzer.updateContent(uri, text);\n    return this.#diagnosticsResponse(msg);\n  }\n\n  changeResponse(msg) {\n    const text = msg.params.contentChanges[0].text;\n    const uri = msg.params.textDocument.uri;\n    this.#analyzer.updateContent(uri, text);\n    return this.#diagnosticsResponse(msg);\n  }\n\n  saveResponse(msg) {\n    return this.#diagnosticsResponse(msg);\n  }\n\n  #diagnosticsResponse(msg) {\n    const uri = msg.params.textDocument.uri;\n    const diagnostics = this.#analyzer.generateDiagnostics(uri);\n    return {\n      id: msg.id,\n      method: \"textDocument/publishDiagnostics\",\n      params: { uri, diagnostics },\n    };\n  }\n\n  completionResponse(msg) {\n    return { id: msg.id, result: completions };\n  }\n\n  hoverResponse(msg) {\n    const uri = msg.params.textDocument.uri;\n    const { line } = msg.params.position;\n    const content = this.#analyzer.getContent(uri);\n    const contents = content.split(\"\\n\")[line];\n    return {\n      id: msg.id,\n      result: {\n        contents,\n      },\n    };\n  }\n\n  codeActionResponse(msg) {\n    const uri = msg.params.textDocument.uri;\n    const range = msg.params.range;\n    const diagnostics = msg.params.context.diagnostics;\n    const actions = this.#analyzer.generateCodeActions(uri, range, diagnostics);\n    return {\n      id: msg.id,\n      result: actions,\n    };\n  }\n\n  initalizationResponse(msg) {\n    const initalizeResponse = {\n      capabilities: {\n        codeActionProvider: true,\n        textDocumentSync: 1,\n        hoverProvider: true,\n        completionProvider: {},\n      },\n      serverInfo: { name: \"toplsp\", version: \"1.0\" },\n    };\n\n    return {\n      id: msg.id,\n      result: initalizeResponse,\n    };\n  }\n}\n", "import Analyzer from \"./Analyzer.js\";\nimport Encoder from \"./Encoder.js\";\nimport Protocol from \"./Protocol.js\";\n\nconst encoder = new Encoder();\nconst analyzer = new Analyzer();\nconst protocol = new Protocol(analyzer);\n\nprocess.stdin.on(\"data\", (data) => {\n  try {\n    const msg = encoder.decode(data.toString());\n    handleMessage(msg);\n  } catch (e) {\n    console.error(e);\n  }\n});\n\nfunction handleMessage(msg) {\n  const { method } = msg;\n  let response;\n  switch (method) {\n    case \"initialize\":\n      response = protocol.initalizationResponse(msg);\n      break;\n    case \"textDocument/didOpen\":\n      response = protocol.openResponse(msg);\n      break;\n    case \"textDocument/didChange\":\n      response = protocol.changeResponse(msg);\n      break;\n    case \"textDocument/hover\":\n      response = protocol.handleHover(msg);\n      break;\n    case \"textDocument/completion\":\n      response = protocol.completionResponse(msg);\n      break;\n    case \"textDocument/didSave\":\n      response = protocol.saveResponse(msg);\n      break;\n    case \"textDocument/codeAction\":\n      response = protocol.codeActionResponse(msg);\n      break;\n    case \"initialized\":\n      return;\n  }\n\n  const encodedResponse = encoder.encode(response);\n  process.stdout.write(encodedResponse);\n}\n"],
  "mappings": "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AAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,C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AE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,MAAK,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,aAAa,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,uBAAuB,GAAE,CAAC,GAAE,QAAQ,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,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS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IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,GAAG,IAAI;AAC5C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBAAeA,gBAAe,GAAG,IAAI,EAAE,IAAI;AAC3C,EAAAA,gBA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",
  "names": ["exports", "decode", "encode", "format", "require_index_cjs", "exports", "exports", "exports", "exports", "_a", "exports", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "EntityDecoder", "errors", "base", "exports", "exports", "map", "exports", "EntityLevel", "exports", "EncodingMode", "decode", "encode", "require_index_cjs", "exports", "module", "require_index_cjs", "exports", "module", "punycode", "code", "entity", "isWhiteSpace", "list", "text", "nextLine", "pos", "max", "link", "exports", "t", "n", "r", "e", "i", "o", "c", "u", "a", "l", "d", "m", "g", "x", "v", "k", "y", "w", "q", "S", "L", "E", "O", "T", "D", "A", "C", "z", "F", "R", "I", "M", "f", "p", "b", "s", "h", "V", "_", "N", "B", "P", "exports", "module", "require_micromark", "exports", "module", "parse", "kind", "exports", "module", "exports", "module", "errors", "error", "exports", "module", "exports", "module", "exports", "module", "map", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "parse", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "parse", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "errors", "error", "fs", "markdownlint", "value", "CharacterCodes", "ParseOptions", "errors", "error", "error", "ScanError", "SyntaxKind", "parse", "ParseErrorCode", "fs", "parse", "markdownlint", "kind", "insertTextFormat", "kind", "insertTextFormat", "analyzer"]
}
